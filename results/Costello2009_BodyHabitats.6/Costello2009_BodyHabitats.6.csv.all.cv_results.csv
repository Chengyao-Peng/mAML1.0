mean_fit_time,std_fit_time,mean_score_time,std_score_time,param_clf,param_clf__max_depth,param_scl,param_clf__n_estimators,param_clf__learning_rate,param_clf__min_child_weight,param_clf__n_neighbors,param_clf__C,param_clf__loss,params,split0_test_score,split1_test_score,split2_test_score,split3_test_score,split4_test_score,mean_test_score,std_test_score,rank_test_score,split0_train_score,split1_train_score,split2_train_score,split3_train_score,split4_train_score,mean_train_score,std_train_score
0.06835284233093261,0.014698453082929748,0.0016201496124267577,0.00046242596206164316,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",4,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 4, 'scl': NonScaler()}",0.7638888888888888,0.7981220657276995,0.8051643192488263,0.7769953051643192,0.7981220657276995,0.7884585289514866,0.015497896811563912,217,0.8028169014084507,0.7865497076023392,0.783625730994152,0.7929824561403509,0.7947368421052632,0.7921423276501113,0.006711090278924472
0.057265710830688474,0.017077613380282956,0.0012438774108886718,0.00017480699337705112,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",8,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 8, 'scl': NonScaler()}",0.8981481481481481,0.9178403755868545,0.9295774647887324,0.960093896713615,0.9436619718309859,0.9298643714136672,0.021235703833021737,76,0.965962441314554,0.9695906432748538,0.9450292397660819,0.956140350877193,0.9444444444444444,0.9562334239354253,0.010369103438373953
0.06476988792419433,0.014845197214688292,0.0016693592071533204,0.0009009053465389541,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",16,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 16, 'scl': NonScaler()}",0.9398148148148148,0.9436619718309859,0.971830985915493,0.9859154929577465,0.9624413145539906,0.9607329160146062,0.017258227346494875,42,0.9929577464788732,0.991812865497076,0.9970760233918129,0.9935672514619883,1.0,0.9950827773659501,0.0030218208689213773
0.0657426357269287,0.006271528665425571,0.007202339172363281,0.006183838775127602,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",32,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 32, 'scl': NonScaler()}",0.9444444444444444,0.960093896713615,0.9765258215962441,0.9835680751173709,0.9624413145539906,0.9654147104851332,0.013637489783433081,38,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.0658449649810791,0.008365534932920549,0.0012503623962402343,0.0001586696404651582,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",64,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 64, 'scl': NonScaler()}",0.9444444444444444,0.960093896713615,0.9765258215962441,0.9835680751173709,0.9624413145539906,0.9654147104851332,0.013637489783433081,38,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.11242122650146484,0.015035296374528431,0.0021786212921142576,8.585047493795152e-05,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),5,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 5, 'scl': NonScaler()}",0.9421296296296297,0.9553990610328639,0.9741784037558685,0.9859154929577465,0.960093896713615,0.9635432968179447,0.015168340316287072,40,0.994131455399061,0.995906432748538,0.9941520467836257,0.9976608187134502,0.9976608187134502,0.995902314471625,0.001573789702074342
0.15634899139404296,0.015043511464588658,0.006204128265380859,0.0038960112095910004,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),10,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 10, 'scl': NonScaler()}",0.9490740740740741,0.9530516431924883,0.9812206572769953,0.9906103286384976,0.9577464788732394,0.9663406364110589,0.0164865038214314,34,0.9976525821596244,0.9994152046783625,0.9976608187134502,0.9976608187134502,0.9976608187134502,0.9980100485956676,0.0007025852832977149
0.24027032852172853,0.01648596872307693,0.012279891967773437,0.007305874297302667,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),15,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 15, 'scl': NonScaler()}",0.9421296296296297,0.9553990610328639,0.9788732394366197,0.9906103286384976,0.9624413145539906,0.9658907146583203,0.017124062506105885,36,0.9994131455399061,0.9988304093567252,0.9982456140350877,0.9994152046783625,0.9988304093567252,0.9989469565933613,0.00043718103887718297
0.316222095489502,0.0209092041122805,0.009658098220825195,0.005331819505804543,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),20,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 20, 'scl': NonScaler()}",0.9490740740740741,0.9577464788732394,0.9788732394366197,0.9812206572769953,0.9624413145539906,0.9658711528429839,0.012365900817412285,37,1.0,0.9994152046783625,0.9988304093567252,1.0,1.0,0.9996491228070177,0.0004678362573099337
0.40427594184875487,0.027010736817977228,0.0077396869659423825,0.00415406225661332,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),25,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 25, 'scl': NonScaler()}",0.9490740740740741,0.9553990610328639,0.9765258215962441,0.9859154929577465,0.9647887323943662,0.9663406364110589,0.013469771036291957,34,1.0,1.0,0.9988304093567252,0.9994152046783625,1.0,0.9996491228070177,0.0004678362573099337
0.460022497177124,0.023863724124413444,0.012851190567016602,0.004749624031920416,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),30,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 30, 'scl': NonScaler()}",0.9490740740740741,0.9553990610328639,0.9765258215962441,0.9906103286384976,0.9671361502347418,0.9677490871152843,0.014841309780995265,29,0.9994131455399061,1.0,0.9994152046783625,0.9994152046783625,1.0,0.9996487109793263,0.00028682726980555986
0.5214426040649414,0.031124355991576293,0.01791062355041504,0.011946959186198517,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),35,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 35, 'scl': NonScaler()}",0.9490740740740741,0.9553990610328639,0.9741784037558685,0.9906103286384976,0.9647887323943662,0.9668101199791341,0.014626053031718668,33,0.9994131455399061,1.0,1.0,1.0,1.0,0.9998826291079812,0.00023474178403755098
0.5480915069580078,0.013458163972293205,0.018851423263549806,0.000860950235461771,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),40,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 40, 'scl': NonScaler()}",0.9513888888888888,0.9553990610328639,0.9741784037558685,0.9906103286384976,0.9647887323943662,0.967273082942097,0.014083909307434549,30,0.9994131455399061,1.0,1.0,1.0,1.0,0.9998826291079812,0.00023474178403755098
0.6398930549621582,0.01466666835319587,0.017956304550170898,0.012780692916331283,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),45,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 45, 'scl': NonScaler()}",0.9537037037037037,0.9553990610328639,0.9741784037558685,0.9882629107981221,0.9647887323943662,0.9672665623369848,0.012802722860669255,32,1.0,1.0,0.9994152046783625,1.0,1.0,0.9998830409356725,0.0002339181286549863
0.697176456451416,0.02763261689991294,0.025738096237182616,0.010502788818304996,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),50,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 50, 'scl': NonScaler()}",0.9513888888888888,0.9553990610328639,0.9741784037558685,0.9906103286384976,0.9647887323943662,0.967273082942097,0.014083909307434549,30,1.0,1.0,0.9994152046783625,1.0,1.0,0.9998830409356725,0.0002339181286549863
3.80057373046875,0.08269614345256932,0.005536603927612305,0.004021192658242206,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.001,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.001, 'scl': NonScaler()}",0.9189814814814815,0.9061032863849765,0.9647887323943662,0.9460093896713615,0.931924882629108,0.9335615545122586,0.020490480480528494,73,0.9595070422535211,0.9596491228070175,0.952046783625731,0.9450292397660819,0.9555555555555556,0.9543575488015815,0.005446287609167366
3.6753448486328124,0.10575162989286983,0.006975650787353516,0.003989321352633655,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.01,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.01, 'scl': NonScaler()}",0.9259259259259259,0.9178403755868545,0.9553990610328639,0.9647887323943662,0.9342723004694836,0.9396452790818989,0.0177365061770956,65,0.971244131455399,0.9678362573099415,0.9637426900584796,0.9678362573099415,0.9678362573099415,0.9676991186887406,0.0023781027743306187
3.4368002891540526,0.05643536393841703,0.012080764770507813,0.004058999412637282,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.1,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.1, 'scl': NonScaler()}",0.9652777777777778,0.9765258215962441,0.9859154929577465,0.9859154929577465,0.9765258215962441,0.9780320813771519,0.007635525570100255,6,1.0,1.0,1.0,1.0,1.0,1.0,0.0
3.149494457244873,0.11629189468080549,0.009525251388549805,0.007049159225570819,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.2,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.2, 'scl': NonScaler()}",0.9699074074074074,0.9765258215962441,0.9882629107981221,0.9859154929577465,0.9788732394366197,0.9798969744392279,0.006609320852377746,4,1.0,1.0,1.0,1.0,1.0,1.0,0.0
1.9907647132873536,0.03764996019818259,0.006859874725341797,0.005023227771796,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.5,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.5, 'scl': NonScaler()}",0.9768518518518519,0.9741784037558685,0.9882629107981221,0.9835680751173709,0.971830985915493,0.9789384454877414,0.006097654888458156,5,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.38224077224731445,0.010212166996273316,0.023935461044311525,0.00986093193055008,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.001,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.001, 'scl': NonScaler()}",0.7638888888888888,0.7981220657276995,0.8051643192488263,0.7863849765258216,0.795774647887324,0.789866979655712,0.014311122487797034,216,0.7987089201877934,0.7883040935672515,0.7859649122807018,0.7976608187134503,0.7929824561403509,0.7927242401779095,0.0050095725890181
0.38326454162597656,0.028594423900423042,0.028759288787841796,0.0047289234903190305,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.01,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.01, 'scl': NonScaler()}",0.7708333333333334,0.7089201877934272,0.7582159624413145,0.8215962441314554,0.7629107981220657,0.7644953051643192,0.03586425047422056,219,0.8174882629107981,0.7590643274853801,0.7467836257309941,0.8029239766081872,0.7280701754385965,0.7708660736347912,0.03391775961814926
0.4387837886810303,0.019833102668088305,0.035194683074951175,0.0065659154467958575,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.1,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.1, 'scl': NonScaler()}",0.4166666666666667,0.528169014084507,0.49061032863849763,0.33098591549295775,0.38967136150234744,0.4312206572769953,0.07058510187663009,222,0.4184272300469484,0.571345029239766,0.47953216374269003,0.33567251461988307,0.39415204678362575,0.4398257968865827,0.08033156336816416
0.38771700859069824,0.01490364436936141,0.03230466842651367,0.005388121477813749,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.2,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.2, 'scl': NonScaler()}",0.3819444444444444,0.5023474178403756,0.5305164319248826,0.3685446009389671,0.5563380281690141,0.46793818466353676,0.07770273165390632,221,0.40669014084507044,0.5637426900584795,0.5456140350877193,0.40058479532163743,0.5286549707602339,0.4890573264146282,0.0706488220608362
0.4002680778503418,0.02235706898695757,0.02451357841491699,0.006331435371757623,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.5,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.5, 'scl': NonScaler()}",0.8055555555555556,0.6596244131455399,0.6525821596244131,0.6126760563380281,0.6995305164319249,0.6859937402190923,0.06582618004201253,220,0.8544600938967136,0.6923976608187135,0.6380116959064327,0.612280701754386,0.6865497076023391,0.696739971995717,0.0843572317579797
1.8851799964904785,0.026984802851594557,0.09394698143005371,0.009779396545217327,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=32, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",4,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=32, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 4, 'scl': NonScaler()}",0.9050925925925926,0.892018779342723,0.9389671361502347,0.9225352112676056,0.9154929577464789,0.9148213354199269,0.015859253769992438,111,0.9354460093896714,0.9385964912280702,0.9263157894736842,0.9140350877192982,0.927485380116959,0.9283757515855365,0.008545676212402934
2.1675889015197756,0.09064762203803453,0.10746588706970214,0.007624187034274129,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=32, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",8,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=32, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 8, 'scl': NonScaler()}",0.9305555555555556,0.9248826291079812,0.9741784037558685,0.9741784037558685,0.960093896713615,0.9527777777777778,0.021172933951606503,49,0.971244131455399,0.9730994152046784,0.9649122807017544,0.9666666666666667,0.9690058479532164,0.968985668396343,0.0029662849404395813
2.4736326217651365,0.039166565003646035,0.10844788551330567,0.007649456473106066,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=32, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",16,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=32, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 16, 'scl': NonScaler()}",0.9675925925925926,0.960093896713615,0.9859154929577465,0.9953051643192489,0.9788732394366197,0.9775560772039645,0.012576514736573513,7,0.9964788732394366,0.9976608187134502,0.995906432748538,0.995906432748538,0.9970760233918129,0.9966057161683551,0.0006824242076863567
2.717198038101196,0.11057968012667954,0.1381925106048584,0.01400127544231191,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=32, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",32,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=32, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 32, 'scl': NonScaler()}",0.9768518518518519,0.9671361502347418,0.9882629107981221,0.9976525821596244,0.9812206572769953,0.982224830464267,0.01031522632345081,1,1.0,1.0,1.0,1.0,1.0,1.0,0.0
2.588294267654419,0.07363077443609337,0.13285837173461915,0.019572127918397037,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=32, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",64,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=32, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 64, 'scl': NonScaler()}",0.9768518518518519,0.9671361502347418,0.9882629107981221,0.9976525821596244,0.9812206572769953,0.982224830464267,0.01031522632345081,1,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.06933350563049316,0.01594358540466285,0.007482481002807617,0.006754172440187066,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",4,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 4, 'scl': NonScaler()}",0.8449074074074074,0.8380281690140845,0.8591549295774648,0.8356807511737089,0.8262910798122066,0.8408124673969745,0.010937750946148865,202,0.8573943661971831,0.8491228070175438,0.8508771929824561,0.8502923976608188,0.847953216374269,0.8511279960464542,0.0032902440855813887
0.08594312667846679,0.02021640188316317,0.006913900375366211,0.007663721470702798,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",8,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 8, 'scl': NonScaler()}",0.8703703703703703,0.8849765258215962,0.9178403755868545,0.9014084507042254,0.8990610328638498,0.8947313510693793,0.01603727417210651,149,0.9166666666666666,0.9298245614035088,0.9076023391812865,0.9152046783625731,0.92046783625731,0.9179532163742691,0.007260888044523407
0.107979154586792,0.021766067238036074,0.009674882888793946,0.013912222200872423,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",16,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 16, 'scl': NonScaler()}",0.9398148148148148,0.931924882629108,0.9436619718309859,0.960093896713615,0.9436619718309859,0.943831507563902,0.009191564867470635,60,0.977112676056338,0.9742690058479532,0.9590643274853801,0.9701754385964912,0.960233918128655,0.9681710732229636,0.00730870403011947
0.09913201332092285,0.014527929569588318,0.003301382064819336,0.0007675186510572614,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",32,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 32, 'scl': NonScaler()}",0.9768518518518519,0.9553990610328639,0.9765258215962441,0.9882629107981221,0.9906103286384976,0.9775299947835159,0.01247026134638663,13,0.9953051643192489,0.9964912280701754,0.9953216374269006,0.9947368421052631,0.9994152046783625,0.9962540153199901,0.0016805266655993399
0.08182621002197266,0.008590420080910712,0.0055638313293457035,0.0042938182121159615,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",64,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 64, 'scl': NonScaler()}",0.9791666666666666,0.9741784037558685,0.9859154929577465,0.9906103286384976,0.9765258215962441,0.9812793427230047,0.006099899746566339,3,1.0,1.0,1.0,1.0,1.0,1.0,0.0
3.2209730625152586,0.06436817237384843,0.015444278717041016,0.0046854639422905615,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.9629629629629629,0.9694835680751174,0.9859154929577465,0.9906103286384976,0.971830985915493,0.9761606677099636,0.010406330103628502,14,0.9994131455399061,1.0,0.9994152046783625,0.9994152046783625,0.9994152046783625,0.9995317519149987,0.00023412540076743704
2.953892469406128,0.08046434581235062,0.02229924201965332,0.003495672576087868,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.9583333333333334,0.9647887323943662,0.9835680751173709,0.9906103286384976,0.971830985915493,0.9738262910798122,0.011851554517712967,18,0.9988262910798122,1.0,0.9994152046783625,0.9994152046783625,0.9994152046783625,0.9994143810229799,0.00037116072063880144
3.029881000518799,0.2099553832952279,0.017219018936157227,0.002380385552608458,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9606481481481481,0.9624413145539906,0.9835680751173709,0.9882629107981221,0.9694835680751174,0.9728808033385498,0.011144406619443874,20,0.9964788732394366,0.9994152046783625,0.9982456140350877,0.9976608187134502,0.9994152046783625,0.9982431430689399,0.0011134821619164278
3.9807987213134766,0.11041183119570389,0.01621403694152832,0.0039504034775954145,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.9652777777777778,0.9624413145539906,0.9835680751173709,0.9882629107981221,0.9577464788732394,0.9714593114241001,0.012137219718205403,28,1.0,1.0,1.0,1.0,1.0,1.0,0.0
3.5030290603637697,0.03696902417474333,0.014879226684570312,0.005393824933770539,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.9629629629629629,0.9647887323943662,0.9812206572769953,0.9906103286384976,0.9671361502347418,0.9733437663015128,0.010767207314017221,19,1.0,1.0,1.0,1.0,1.0,1.0,0.0
3.341071939468384,0.025934771357664487,0.01849203109741211,0.0003888456720596635,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9652777777777778,0.9671361502347418,0.9812206572769953,0.9882629107981221,0.960093896713615,0.9723982785602503,0.010576485813347601,24,0.9994131455399061,0.9994152046783625,0.9994152046783625,0.9994152046783625,0.9994152046783625,0.9994147928506714,8.236553825646807e-07
3.9879516124725343,0.07044078135729982,0.017085886001586913,0.0040693576412516,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.9699074074074074,0.9553990610328639,0.9859154929577465,0.9882629107981221,0.960093896713615,0.9719157537819509,0.013265090565644181,25,1.0,1.0,1.0,1.0,1.0,1.0,0.0
3.603531503677368,0.07835821984775927,0.014847326278686523,0.005173645749813789,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.9652777777777778,0.9647887323943662,0.9835680751173709,0.9929577464788732,0.9671361502347418,0.9747456964006261,0.011456011019511204,15,1.0,1.0,1.0,1.0,1.0,1.0,0.0
3.4151879787445067,0.0727176781503637,0.01701817512512207,0.004112768893302577,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9629629629629629,0.9671361502347418,0.9835680751173709,0.9882629107981221,0.960093896713615,0.9724047991653626,0.011353974512401124,21,0.9994131455399061,0.9994152046783625,0.9994152046783625,0.9994152046783625,1.0,0.9995317519149989,0.00023412540076743704
4.350465965270996,0.333606232060579,0.02673349380493164,0.013209639015533299,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.9699074074074074,0.9553990610328639,0.9859154929577465,0.9882629107981221,0.960093896713615,0.9719157537819509,0.013265090565644181,25,1.0,1.0,1.0,1.0,1.0,1.0,0.0
3.7217359066009523,0.10320482388881927,0.012568283081054687,0.004707341546754509,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.9652777777777778,0.9647887323943662,0.9835680751173709,0.9929577464788732,0.9671361502347418,0.9747456964006261,0.011456011019511204,15,1.0,1.0,1.0,1.0,1.0,1.0,0.0
3.3219616413116455,0.0630592889050789,0.014392280578613281,0.004857323380893186,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9629629629629629,0.9671361502347418,0.9835680751173709,0.9882629107981221,0.960093896713615,0.9724047991653626,0.011353974512401124,21,0.9994131455399061,0.9994152046783625,0.9994152046783625,0.9994152046783625,1.0,0.9995317519149989,0.00023412540076743704
3.919341707229614,0.05048373243207824,0.021282148361206055,0.004118508424747491,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.9699074074074074,0.9553990610328639,0.9859154929577465,0.9882629107981221,0.960093896713615,0.9719157537819509,0.013265090565644181,25,1.0,1.0,1.0,1.0,1.0,1.0,0.0
3.5190648555755617,0.0662716302667407,0.015076303482055664,0.005138489934149195,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.9652777777777778,0.9647887323943662,0.9835680751173709,0.9929577464788732,0.9671361502347418,0.9747456964006261,0.011456011019511204,15,1.0,1.0,1.0,1.0,1.0,1.0,0.0
3.3639307498931883,0.08999462177127118,0.013987207412719726,0.004976479268159043,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9629629629629629,0.9671361502347418,0.9835680751173709,0.9882629107981221,0.960093896713615,0.9724047991653626,0.011353974512401124,21,0.9994131455399061,0.9994152046783625,0.9994152046783625,0.9994152046783625,1.0,0.9995317519149989,0.00023412540076743704
1.5343684673309326,0.03784735134247267,0.05618486404418945,0.006346989235039616,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",32,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 32, 'scl': NonScaler()}",0.9699074074074074,0.9741784037558685,0.9835680751173709,0.9859154929577465,0.9741784037558685,0.9775495565988525,0.006121163999839176,8,1.0,1.0,1.0,1.0,1.0,1.0,0.0
1.541712760925293,0.07374185334735861,0.049941205978393556,0.005100052195504213,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",38,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 38, 'scl': NonScaler()}",0.9699074074074074,0.9741784037558685,0.9835680751173709,0.9859154929577465,0.9741784037558685,0.9775495565988525,0.006121163999839176,8,1.0,1.0,1.0,1.0,1.0,1.0,0.0
1.5815874099731446,0.05099257333488432,0.05337448120117187,0.010111611779308837,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",45,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 45, 'scl': NonScaler()}",0.9699074074074074,0.9741784037558685,0.9835680751173709,0.9859154929577465,0.9741784037558685,0.9775495565988525,0.006121163999839176,8,1.0,1.0,1.0,1.0,1.0,1.0,0.0
1.5314956188201905,0.02792301794027875,0.054969072341918945,0.008697205064219242,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",53,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 53, 'scl': NonScaler()}",0.9699074074074074,0.9741784037558685,0.9835680751173709,0.9859154929577465,0.9741784037558685,0.9775495565988525,0.006121163999839176,8,1.0,1.0,1.0,1.0,1.0,1.0,0.0
1.5471776008605957,0.012782776247323017,0.055165672302246095,0.01082818785260338,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",64,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 64, 'scl': NonScaler()}",0.9699074074074074,0.9741784037558685,0.9835680751173709,0.9859154929577465,0.9741784037558685,0.9775495565988525,0.006121163999839176,8,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.036040735244750974,0.004917524009537923,0.05241556167602539,0.005971961420203643,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': NonScaler()}",0.9189814814814815,0.8826291079812206,0.892018779342723,0.92018779342723,0.9366197183098591,0.9100873761085028,0.019826847458544867,119,0.9477699530516432,0.9502923976608187,0.9497076023391813,0.9444444444444444,0.9485380116959065,0.9481504818383989,0.0020514444841470956
0.034078788757324216,0.0059660015277980686,0.07909083366394043,0.009162015471442297,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': Binarizer(copy=True, threshold=0)}",0.9027777777777778,0.8802816901408451,0.8755868544600939,0.8826291079812206,0.863849765258216,0.8810250391236305,0.012655995641216439,163,0.9107981220657277,0.8970760233918129,0.895906432748538,0.9064327485380117,0.9058479532163742,0.9032122559920929,0.005760073610195154
0.036377477645874026,0.0062794963021496975,0.05250706672668457,0.013116995426679903,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.9490740740740741,0.9061032863849765,0.9366197183098591,0.9507042253521126,0.9436619718309859,0.9372326551904016,0.016324532520774333,67,0.9683098591549296,0.9649122807017544,0.968421052631579,0.9614035087719298,0.9643274853801169,0.9654748373280618,0.0026429580411246297
0.02557649612426758,0.00714935883148584,0.0628805160522461,0.02235378402128623,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': MaxAbsScaler(copy=True)}",0.9490740740740741,0.9061032863849765,0.9366197183098591,0.9507042253521126,0.9436619718309859,0.9372326551904016,0.016324532520774333,67,0.9683098591549296,0.9649122807017544,0.968421052631579,0.9614035087719298,0.9643274853801169,0.9654748373280618,0.0026429580411246297
0.037245655059814455,0.005897711483466191,0.06899418830871581,0.008226688172421611,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9421296296296297,0.9084507042253521,0.9413145539906104,0.9577464788732394,0.931924882629108,0.936313249869588,0.01620990955410539,70,0.971244131455399,0.9660818713450292,0.9719298245614035,0.9695906432748538,0.9660818713450292,0.9689856683963429,0.0024899309286585056
0.033314990997314456,0.005031828494861956,0.0666266918182373,0.006729081126958899,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.9282407407407407,0.8967136150234741,0.9483568075117371,0.931924882629108,0.9460093896713615,0.9302490871152843,0.018481051424635343,75,0.9647887323943662,0.9596491228070175,0.9625730994152046,0.956140350877193,0.9631578947368421,0.9612618400461248,0.0030523401632214825
0.033454608917236325,0.011323391426103703,0.06524858474731446,0.011133435525319235,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9467592592592593,0.931924882629108,0.9413145539906104,0.9389671361502347,0.9225352112676056,0.9363002086593637,0.0083697853241272,71,0.9618544600938967,0.9713450292397661,0.9637426900584796,0.9625730994152046,0.9654970760233919,0.9650024709661478,0.0034021036473500673
0.039940166473388675,0.012478883078108918,0.1420895576477051,0.010451339758769435,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9236111111111112,0.92018779342723,0.9389671361502347,0.92018779342723,0.9225352112676056,0.9250978090766824,0.007061896617776641,83,0.9507042253521126,0.9573099415204679,0.952046783625731,0.9532163742690059,0.9526315789473684,0.9531817807429371,0.002225853962132556
0.032465457916259766,0.004663030951598443,0.08546051979064942,0.003655403821551257,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9236111111111112,0.9225352112676056,0.9413145539906104,0.9225352112676056,0.9225352112676056,0.9265062597809077,0.007415863295750996,82,0.9495305164319249,0.9573099415204679,0.9538011695906433,0.9543859649122807,0.9549707602339181,0.9539996705378468,0.0025323062045668108
0.03798308372497559,0.009012103127393128,0.04838886260986328,0.0034857746455735175,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': Normalizer(copy=True, norm='l2')}",0.8865740740740741,0.9178403755868545,0.9248826291079812,0.9248826291079812,0.9154929577464789,0.9139345331246739,0.014184502976277963,112,0.9477699530516432,0.9345029239766082,0.939766081871345,0.9374269005847953,0.935672514619883,0.9390276748208549,0.004717321739467406
0.04739255905151367,0.008497083014967467,0.06481375694274902,0.004759914331181501,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9513888888888888,0.9295774647887324,0.9624413145539906,0.960093896713615,0.9483568075117371,0.9503716744913928,0.011642090769387898,54,0.9741784037558685,0.9818713450292398,0.9736842105263158,0.9736842105263158,0.9748538011695906,0.9756543942014663,0.003137936328888659
0.05224466323852539,0.014406310343657707,0.058770036697387694,0.00517849228115809,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': NonScaler()}",0.9027777777777778,0.8802816901408451,0.8896713615023474,0.9061032863849765,0.9225352112676056,0.9002738654147106,0.01447701216788422,135,0.9248826291079812,0.9228070175438596,0.9245614035087719,0.92046783625731,0.9175438596491228,0.9220525492134091,0.0027463620040703873
0.02788968086242676,0.004157716490664858,0.08460836410522461,0.006618584739856762,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': Binarizer(copy=True, threshold=0)}",0.8773148148148148,0.892018779342723,0.9107981220657277,0.9107981220657277,0.892018779342723,0.8965897235263434,0.012783319955357975,142,0.897887323943662,0.8947368421052632,0.9198830409356725,0.9222222222222223,0.9222222222222223,0.9113903302858086,0.012381080315402346
0.03495383262634277,0.003708098375047685,0.06200275421142578,0.0008708719534651989,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.9282407407407407,0.892018779342723,0.9131455399061033,0.9389671361502347,0.9272300469483568,0.9199204486176317,0.01618540287488052,94,0.9483568075117371,0.9502923976608187,0.9485380116959065,0.9473684210526315,0.9409356725146198,0.9470982620871427,0.003222105326978841
0.036902856826782224,0.011777214681629424,0.06981682777404785,0.022643529125395218,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': MaxAbsScaler(copy=True)}",0.9282407407407407,0.892018779342723,0.9131455399061033,0.9389671361502347,0.9272300469483568,0.9199204486176317,0.01618540287488052,94,0.9483568075117371,0.9502923976608187,0.9485380116959065,0.9473684210526315,0.9409356725146198,0.9470982620871427,0.003222105326978841
0.04605302810668945,0.014541393880603038,0.08007464408874512,0.006154852618759684,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9259259259259259,0.8896713615023474,0.9248826291079812,0.9436619718309859,0.9131455399061033,0.9194574856546687,0.01779990956854391,100,0.9518779342723005,0.9514619883040936,0.9491228070175438,0.9497076023391813,0.9467836257309942,0.9497907915328228,0.001824567531089992
0.028402376174926757,0.004673991535445034,0.06269946098327636,0.005244984352340669,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.9166666666666666,0.8873239436619719,0.9413145539906104,0.9295774647887324,0.9389671361502347,0.9227699530516432,0.019729484872723652,86,0.9465962441314554,0.9456140350877194,0.9403508771929825,0.9461988304093567,0.9456140350877194,0.9448748043818466,0.002292389191049874
0.03500552177429199,0.0022705050425647177,0.0742922306060791,0.011449877096600669,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9189814814814815,0.9154929577464789,0.9295774647887324,0.9225352112676056,0.903755868544601,0.9180685967657798,0.008540797998698911,104,0.9313380281690141,0.9450292397660819,0.9403508771929825,0.9385964912280702,0.939766081871345,0.9390161436454987,0.004418841734265267
0.039951753616333005,0.005752986322774851,0.14623494148254396,0.004413342044092376,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9027777777777778,0.903755868544601,0.9225352112676056,0.8990610328638498,0.9061032863849765,0.9068466353677621,0.008165880595098266,124,0.9237089201877934,0.9309941520467836,0.9233918128654971,0.928654970760234,0.928654970760234,0.9270809653241084,0.0030082736184280394
0.038629770278930664,0.012054259304108219,0.08214645385742188,0.006375909598328104,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.8981481481481481,0.9084507042253521,0.9272300469483568,0.9014084507042254,0.9061032863849765,0.9082681272822117,0.010136502437273947,120,0.9284037558685446,0.9339181286549708,0.9327485380116959,0.9327485380116959,0.9339181286549708,0.9323474178403754,0.00204002595365444
0.03557124137878418,0.004719643594373696,0.0698622703552246,0.013635771176675398,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': Normalizer(copy=True, norm='l2')}",0.8634259259259259,0.8755868544600939,0.92018779342723,0.903755868544601,0.9107981220657277,0.8947509128847158,0.02160626290657627,148,0.9190140845070423,0.9157894736842105,0.9152046783625731,0.9116959064327486,0.9134502923976608,0.915030887076847,0.0024532384415772743
0.035808372497558597,0.006093785719429408,0.07018942832946777,0.023829674939923214,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9236111111111112,0.9061032863849765,0.9530516431924883,0.9483568075117371,0.931924882629108,0.9326095461658841,0.017028669800699125,74,0.9577464788732394,0.9643274853801169,0.9555555555555556,0.9549707602339181,0.9555555555555556,0.9576311671196771,0.0034798869686710485
0.03954710960388184,0.0060779347524372,0.0649195671081543,0.004826821937092674,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': NonScaler()}",0.8796296296296297,0.8568075117370892,0.8708920187793427,0.9061032863849765,0.9131455399061033,0.8853155972874284,0.021258948756253,160,0.909037558685446,0.9105263157894737,0.9087719298245615,0.9052631578947369,0.9058479532163742,0.9078893830821185,0.0020057469782294693
0.04195423126220703,0.011128568398494968,0.09800372123718262,0.011811691794766037,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': Binarizer(copy=True, threshold=0)}",0.8773148148148148,0.8967136150234741,0.9084507042253521,0.8896713615023474,0.8826291079812206,0.8909559207094417,0.010920477706384766,151,0.8967136150234741,0.9064327485380117,0.9052631578947369,0.9052631578947369,0.9011695906432748,0.902968453998847,0.0036025432287087023
0.045136117935180665,0.012182747340720976,0.06380376815795899,0.003504375997352833,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.9143518518518519,0.8849765258215962,0.9084507042253521,0.9272300469483568,0.92018779342723,0.9110393844548774,0.014441448988438332,117,0.943075117370892,0.9391812865497076,0.9321637426900585,0.9350877192982456,0.9327485380116959,0.93645128078412,0.004129908703129596
0.03792214393615723,0.003035814181692039,0.06919026374816895,0.006657118756656127,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': MaxAbsScaler(copy=True)}",0.9143518518518519,0.8849765258215962,0.9084507042253521,0.9272300469483568,0.92018779342723,0.9110393844548774,0.014441448988438332,117,0.943075117370892,0.9391812865497076,0.9321637426900585,0.9350877192982456,0.9327485380116959,0.93645128078412,0.004129908703129596
0.04218821525573731,0.01100921769379239,0.0853818416595459,0.006613944471704095,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9189814814814815,0.892018779342723,0.9272300469483568,0.92018779342723,0.9178403755868545,0.915251695357329,0.012068362999167288,109,0.9407276995305164,0.9409356725146198,0.9368421052631579,0.9345029239766082,0.9368421052631579,0.937970101309612,0.0024885750677861554
0.034313201904296875,0.0010586162831030012,0.07126884460449219,0.005800979676436048,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.8842592592592593,0.8755868544600939,0.931924882629108,0.931924882629108,0.9366197183098591,0.9120631194574857,0.026440795637991232,116,0.937793427230047,0.9380116959064327,0.9327485380116959,0.9321637426900585,0.9321637426900585,0.9345762293056585,0.002725194747413466
0.04404892921447754,0.01463362074479949,0.06743602752685547,0.013868222973824208,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9074074074074074,0.92018779342723,0.931924882629108,0.9107981220657277,0.9061032863849765,0.91528429838289,0.009668665661811699,108,0.9242957746478874,0.9292397660818713,0.9315789473684211,0.9245614035087719,0.9350877192982456,0.9289527221810395,0.004137353805801657
0.041483163833618164,0.00867684513612507,0.1657872676849365,0.026374109724907068,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8773148148148148,0.9014084507042254,0.9178403755868545,0.8896713615023474,0.8943661971830986,0.8961202399582682,0.013401777336161316,143,0.9084507042253521,0.92046783625731,0.9128654970760234,0.9146198830409357,0.9146198830409357,0.9142047607281114,0.0038593668268358684
0.03331522941589356,0.003971653283299287,0.08152318000793457,0.005614713664602259,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.8865740740740741,0.8943661971830986,0.9248826291079812,0.8990610328638498,0.892018779342723,0.8993805425143453,0.013370141039299316,136,0.9143192488262911,0.9263157894736842,0.9198830409356725,0.9169590643274854,0.9192982456140351,0.9193550778354338,0.003995846242964598
0.036043214797973636,0.005787439981992077,0.05792393684387207,0.0071728373042859025,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': Normalizer(copy=True, norm='l2')}",0.8449074074074074,0.8544600938967136,0.92018779342723,0.8873239436619719,0.8967136150234741,0.8807185706833595,0.02767395511294256,164,0.9096244131455399,0.9029239766081871,0.8994152046783626,0.9011695906432748,0.904093567251462,0.9034453504653653,0.003472577980077329
0.041052389144897464,0.0016775690286829046,0.07056183815002441,0.005765364547218296,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9097222222222222,0.9084507042253521,0.9436619718309859,0.9413145539906104,0.9342723004694836,0.9274843505477308,0.015341702100962095,80,0.948943661971831,0.9502923976608187,0.9473684210526315,0.9432748538011696,0.9456140350877194,0.947098673914834,0.0024699137038819447
0.03389053344726563,0.005319367102007589,0.0648686408996582,0.004124651601260632,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': NonScaler()}",0.8680555555555556,0.852112676056338,0.8544600938967136,0.8873239436619719,0.9061032863849765,0.8736111111111111,0.020511419250148665,170,0.8967136150234741,0.8976608187134503,0.8906432748538011,0.8865497076023392,0.8929824561403509,0.8929099744666832,0.0040653260104457625
0.0319371223449707,0.004899592809458374,0.09125065803527832,0.004434474523240898,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': Binarizer(copy=True, threshold=0)}",0.8842592592592593,0.8873239436619719,0.8873239436619719,0.8826291079812206,0.8802816901408451,0.8843635889410537,0.0027279518633948076,161,0.9096244131455399,0.8888888888888888,0.8871345029239766,0.8935672514619883,0.8906432748538011,0.8939716662548388,0.00810964430825706
0.027357149124145507,0.005797552537248797,0.06616997718811035,0.007789525196540038,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.9004629629629629,0.8779342723004695,0.903755868544601,0.9154929577464789,0.9178403755868545,0.9030972874282733,0.014223656462996701,130,0.9313380281690141,0.9309941520467836,0.9269005847953217,0.9251461988304094,0.9251461988304094,0.9279050325343876,0.002740779468040339
0.029963588714599608,0.0057191237748848165,0.07229995727539062,0.003907091208029485,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': MaxAbsScaler(copy=True)}",0.9004629629629629,0.8779342723004695,0.903755868544601,0.9154929577464789,0.9178403755868545,0.9030972874282733,0.014223656462996701,130,0.9313380281690141,0.9309941520467836,0.9269005847953217,0.9251461988304094,0.9251461988304094,0.9279050325343876,0.002740779468040339
0.03609542846679688,0.003652183850042802,0.09059228897094726,0.005675416104430202,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9097222222222222,0.8732394366197183,0.9131455399061033,0.9154929577464789,0.9131455399061033,0.9049491392801251,0.015961338527066233,128,0.9295774647887324,0.928654970760234,0.9309941520467836,0.9263157894736842,0.928654970760234,0.9288394695659337,0.0015247514137577195
0.03652734756469726,0.002911113831088054,0.07195539474487304,0.009616827683870595,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.8819444444444444,0.8661971830985915,0.9248826291079812,0.9225352112676056,0.9366197183098591,0.9064358372456963,0.027311236731128983,125,0.926056338028169,0.9292397660818713,0.9181286549707602,0.9228070175438596,0.9181286549707602,0.922872086319084,0.0043747301714792
0.031049156188964845,0.007322476132219946,0.06246528625488281,0.006549545344782913,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.8912037037037037,0.9107981220657277,0.92018779342723,0.903755868544601,0.9014084507042254,0.9054707876890975,0.009674336818136443,126,0.9160798122065728,0.9187134502923977,0.9157894736842105,0.9169590643274854,0.9169590643274854,0.9169001729676303,0.0010199564419639704
0.04683351516723633,0.015443779790004344,0.1647977352142334,0.006732358264655984,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8657407407407407,0.8826291079812206,0.9131455399061033,0.8732394366197183,0.8849765258215962,0.8839462702138757,0.016133637423308957,162,0.9019953051643192,0.9005847953216374,0.8923976608187134,0.9011695906432748,0.9023391812865497,0.899697306646899,0.0037013614881125988
0.034589195251464845,0.004759489400010685,0.08721141815185547,0.009145048280648653,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.8773148148148148,0.8849765258215962,0.9178403755868545,0.8802816901408451,0.8896713615023474,0.8900169535732916,0.014531261758588656,154,0.903755868544601,0.9035087719298246,0.8970760233918129,0.9005847953216374,0.9046783625730994,0.901920764352195,0.0027838840362106767
0.03714132308959961,0.008324721458748647,0.06449685096740723,0.012849854732439955,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': Normalizer(copy=True, norm='l2')}",0.8425925925925926,0.852112676056338,0.9084507042253521,0.8802816901408451,0.8896713615023474,0.874621804903495,0.024229936882976647,168,0.9049295774647887,0.8923976608187134,0.887719298245614,0.8923976608187134,0.8953216374269006,0.894553166954946,0.005731572504611638
0.0410916805267334,0.011860871291974402,0.07503538131713867,0.010761671635056874,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.8958333333333334,0.8967136150234741,0.9436619718309859,0.931924882629108,0.9272300469483568,0.9190727699530516,0.01937188705715961,101,0.9383802816901409,0.9374269005847953,0.935672514619883,0.9327485380116959,0.9391812865497076,0.9366819042912444,0.002288084558671193
0.04530081748962402,0.01684549161599631,0.002074146270751953,0.00033829718209004773,"GaussianNB(priors=None, var_smoothing=1e-09)",,NonScaler(),,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': NonScaler()}",0.8333333333333334,0.8708920187793427,0.8732394366197183,0.8896713615023474,0.8967136150234741,0.8727699530516432,0.021990682495080478,171,0.8943661971830986,0.8830409356725146,0.8830409356725146,0.8783625730994152,0.875438596491228,0.8828498476237542,0.006446109097182932
0.031833314895629884,0.0059679876354176275,0.00392913818359375,0.00297593899671655,"GaussianNB(priors=None, var_smoothing=1e-09)",,"Binarizer(copy=True, threshold=0)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': Binarizer(copy=True, threshold=0)}",0.8101851851851852,0.8497652582159625,0.852112676056338,0.8262910798122066,0.852112676056338,0.838093375065206,0.017014556664592166,204,0.8726525821596244,0.8461988304093567,0.8426900584795322,0.8526315789473684,0.8426900584795322,0.8513726216950828,0.011242451823226609
0.03862919807434082,0.0077983984912460445,0.0031691074371337892,0.0027287310348190893,"GaussianNB(priors=None, var_smoothing=1e-09)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.8171296296296297,0.863849765258216,0.8661971830985915,0.8779342723004695,0.8849765258215962,0.8620174752217006,0.023732713120530217,182,0.8896713615023474,0.8719298245614036,0.8707602339181286,0.8701754385964913,0.8660818713450292,0.87372374598468,0.008213595216104133
0.056264209747314456,0.005380580659139959,0.0019892215728759765,0.00031314308970637774,"GaussianNB(priors=None, var_smoothing=1e-09)",,MaxAbsScaler(copy=True),,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': MaxAbsScaler(copy=True)}",0.8171296296296297,0.863849765258216,0.8661971830985915,0.8779342723004695,0.8849765258215962,0.8620174752217006,0.023732713120530217,182,0.8896713615023474,0.8719298245614036,0.8707602339181286,0.8701754385964913,0.8660818713450292,0.87372374598468,0.008213595216104133
0.03584098815917969,0.008805583538700045,0.001809072494506836,7.065841809881448e-05,"GaussianNB(priors=None, var_smoothing=1e-09)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.8101851851851852,0.863849765258216,0.8661971830985915,0.8755868544600939,0.8802816901408451,0.8592201356285865,0.025242811216960464,185,0.8896713615023474,0.8719298245614036,0.8701754385964913,0.8701754385964913,0.8660818713450292,0.8736067869203525,0.008259000136927966
0.03805122375488281,0.006392101902095535,0.003711700439453125,0.002833749531110386,"GaussianNB(priors=None, var_smoothing=1e-09)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.8356481481481481,0.8708920187793427,0.8732394366197183,0.8873239436619719,0.8967136150234741,0.872763432446531,0.020817746419631043,172,0.8931924882629108,0.8824561403508772,0.8818713450292398,0.8783625730994152,0.8748538011695907,0.8821472695824066,0.006159334382348874
0.030626869201660155,0.0060277036556399734,0.008335542678833009,0.004452321732947088,"GaussianNB(priors=None, var_smoothing=1e-09)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.7847222222222222,0.8591549295774648,0.8427230046948356,0.8356807511737089,0.8802816901408451,0.8405125195618153,0.03184310250982267,203,0.8755868544600939,0.8584795321637427,0.8502923976608188,0.8520467836257309,0.8403508771929824,0.8553512890206738,0.01166866321830891
0.0421353816986084,0.01142182411840376,0.07601442337036132,0.01123060859490742,"GaussianNB(priors=None, var_smoothing=1e-09)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7962962962962963,0.8051643192488263,0.8004694835680751,0.7863849765258216,0.8145539906103286,0.8005738132498695,0.00933969194254983,211,0.8644366197183099,0.8052631578947368,0.7976608187134503,0.8093567251461988,0.7953216374269005,0.8144077917799193,0.025521612891029034
0.05602784156799316,0.01350707795102279,0.008140277862548829,0.00395166702114253,"GaussianNB(priors=None, var_smoothing=1e-09)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7962962962962963,0.8051643192488263,0.8075117370892019,0.7934272300469484,0.8309859154929577,0.8066770996348461,0.013245556044576343,210,0.8644366197183099,0.808187134502924,0.8029239766081872,0.816374269005848,0.7976608187134503,0.8179165637097439,0.024067525631177544
0.03628263473510742,0.007977873969731212,0.002582836151123047,0.0015900344027863086,"GaussianNB(priors=None, var_smoothing=1e-09)",,"Normalizer(copy=True, norm='l2')",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': Normalizer(copy=True, norm='l2')}",0.8217592592592593,0.8708920187793427,0.8685446009389671,0.8849765258215962,0.8967136150234741,0.8685772039645279,0.025525966236988804,176,0.9002347417840375,0.8748538011695907,0.875438596491228,0.8695906432748538,0.868421052631579,0.8777077670702578,0.011600772474362687
0.057235097885131835,0.006137621510810298,0.007618999481201172,0.00781596363227788,"GaussianNB(priors=None, var_smoothing=1e-09)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.8125,0.852112676056338,0.8568075117370892,0.8544600938967136,0.8755868544600939,0.8502934272300469,0.02064560329562929,198,0.8832159624413145,0.8614035087719298,0.8578947368421053,0.8608187134502924,0.856140350877193,0.863894654476567,0.009849958350359221
0.9213790893554688,0.14010815632195284,0.0010675430297851563,0.00011310167289105024,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': NonScaler()}",0.8055555555555556,0.8286384976525821,0.8755868544600939,0.8732394366197183,0.8356807511737089,0.8437402190923319,0.026964782817472024,201,0.8532863849765259,0.8526315789473684,0.847953216374269,0.8461988304093567,0.8456140350877193,0.8491368091590479,0.0032210229278848233
0.04235210418701172,0.004825564840960082,0.0033330440521240233,0.003981547453644374,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': Binarizer(copy=True, threshold=0)}",0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0,225,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0
0.04188008308410644,0.007914638197530757,0.00268406867980957,0.003118424269904558,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0,225,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0
0.04763045310974121,0.00627261791471131,0.004277563095092774,0.005708891724664987,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': MaxAbsScaler(copy=True)}",0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0,225,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0
0.07145004272460938,0.01669208989498222,0.0023932456970214844,0.0021410713788851425,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0,225,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0
0.9509171962738037,0.06268166588422654,0.0014203548431396484,0.00019683192163048397,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.8125,0.8309859154929577,0.8262910798122066,0.8169014084507042,0.823943661971831,0.82212441314554,0.00661975993061201,206,0.8315727699530516,0.816374269005848,0.8116959064327486,0.8269005847953217,0.8210526315789474,0.8215192323531835,0.0071164410859010305
0.1891730785369873,0.03535504978147163,0.014765596389770508,0.006726890028133257,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.3055555555555556,0.3004694835680751,0.2887323943661972,0.3333333333333333,0.284037558685446,0.3024256651017214,0.017288926727669393,224,0.29284037558685444,0.29239766081871343,0.2935672514619883,0.3333333333333333,0.2964912280701754,0.30172596985421296,0.01586797887820816
0.5282631874084472,0.09899671175322763,0.08887805938720703,0.02475791053635352,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.3333333333333333,0.3333333333333333,0.3333333333333333,0.3333333333333333,0.3333333333333333,0.3333333333333333,0.0,223,0.3333333333333333,0.3333333333333333,0.3333333333333333,0.3327485380116959,0.3333333333333333,0.33321637426900585,0.00023391812865496408
0.050394201278686525,0.006174431819746712,0.010710048675537109,0.005300226297251198,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0,225,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0
0.05051441192626953,0.013600714560232811,0.005293941497802735,0.00803231307907047,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': Normalizer(copy=True, norm='l2')}",0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0,225,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0
0.11096868515014649,0.016143637262814297,0.005933952331542969,0.008858820935621327,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0,225,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.0
0.9745509624481201,0.03337064848474556,0.002567434310913086,0.002376717608664696,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': NonScaler()}",0.8611111111111112,0.8615023474178404,0.9342723004694836,0.9061032863849765,0.8732394366197183,0.8872456964006259,0.02866713124266766,157,0.8990610328638498,0.8941520467836257,0.9011695906432748,0.8941520467836257,0.887719298245614,0.895250803063998,0.004662359769321463
0.9552922248840332,0.045836773994331746,0.0013670921325683594,4.1869452321081525e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': Binarizer(copy=True, threshold=0)}",0.8888888888888888,0.9272300469483568,0.9107981220657277,0.92018779342723,0.9413145539906104,0.9176838810641627,0.01750641490726088,105,0.9330985915492958,0.9280701754385965,0.9421052631578948,0.9362573099415205,0.935672514619883,0.935040770941438,0.0045639320754334535
0.38377809524536133,0.045673573485869194,0.0012810230255126953,0.00010824350532507679,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.8541666666666666,0.8051643192488263,0.8990610328638498,0.8544600938967136,0.8615023474178404,0.8548708920187794,0.029893654221574143,189,0.8767605633802817,0.8701754385964913,0.8666666666666667,0.8654970760233918,0.8654970760233918,0.8689193641380445,0.0042792729844814284
0.3498679161071777,0.03269944012056504,0.008757066726684571,0.007083785485587864,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': MaxAbsScaler(copy=True)}",0.8541666666666666,0.8051643192488263,0.8990610328638498,0.8544600938967136,0.8615023474178404,0.8548708920187794,0.029893654221574143,189,0.8767605633802817,0.8701754385964913,0.8666666666666667,0.8654970760233918,0.8654970760233918,0.8689193641380445,0.0042792729844814284
0.9105928897857666,0.07757349822819073,0.001318359375,0.00010454958897148116,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9143518518518519,0.8873239436619719,0.9389671361502347,0.9507042253521126,0.9131455399061033,0.9208985393844549,0.022113682197119573,89,0.9454225352112676,0.9438596491228071,0.9350877192982456,0.9339181286549708,0.9409356725146198,0.9398447409603822,0.004608153565727554
0.9407258033752441,0.020444454959853826,0.00526132583618164,0.004921355597960843,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.875,0.8826291079812206,0.9107981220657277,0.9154929577464789,0.892018779342723,0.89518779342723,0.015692624331791815,144,0.9043427230046949,0.8935672514619883,0.8941520467836257,0.8994152046783626,0.9011695906432748,0.8985293633143894,0.004131201283051314
0.9133410930633545,0.031127942602348337,0.006596183776855469,0.003969835248120755,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9351851851851852,0.9436619718309859,0.9671361502347418,0.9553990610328639,0.9272300469483568,0.9457224830464268,0.014208672348296326,57,0.9665492957746479,0.9584795321637427,0.9543859649122807,0.9596491228070175,0.9567251461988304,0.9591578123713038,0.004099362627653304
0.9730907440185547,0.07374491927715075,0.07441644668579102,0.022082950118201078,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9259259259259259,0.9295774647887324,0.9553990610328639,0.9436619718309859,0.9577464788732394,0.9424621804903495,0.012975945192705474,61,0.9800469483568075,0.9736842105263158,0.9701754385964912,0.9760233918128655,0.9707602339181286,0.9741380446421217,0.0036273266858202415
0.7652271270751954,0.10143609821135775,0.010798931121826172,0.0076322347554790134,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9305555555555556,0.9553990610328639,0.9694835680751174,0.9436619718309859,0.9483568075117371,0.949491392801252,0.012871852865372693,55,0.9730046948356808,0.9654970760233919,0.9631578947368421,0.9707602339181286,0.9654970760233919,0.9675833951074871,0.003681665485717292
0.22913875579833984,0.021811777577070732,0.0012941837310791015,5.44644061705855e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': Normalizer(copy=True, norm='l2')}",0.8078703703703703,0.8427230046948356,0.8967136150234741,0.8755868544600939,0.8356807511737089,0.8517149191444966,0.03116101876291262,195,0.8667840375586855,0.8690058479532163,0.8532163742690059,0.8643274853801169,0.8538011695906432,0.8614269829503336,0.006635017218797409
0.9109248161315918,0.08045299910049167,0.001458883285522461,2.0301730504465543e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9583333333333334,0.9483568075117371,0.9765258215962441,0.9647887323943662,0.9553990610328639,0.960680751173709,0.009520798023790246,43,0.9800469483568075,0.9771929824561404,0.9766081871345029,0.9730994152046784,0.9742690058479532,0.9762433078000164,0.0024201086428269182
0.9463966369628907,0.006011122325814689,0.001067781448364258,4.144990481056231e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': NonScaler()}",0.8611111111111112,0.8615023474178404,0.9342723004694836,0.9061032863849765,0.8732394366197183,0.8872456964006259,0.02866713124266766,157,0.8990610328638498,0.8941520467836257,0.9011695906432748,0.8941520467836257,0.887719298245614,0.895250803063998,0.004662359769321463
0.959623908996582,0.00896066863223431,0.008430194854736329,0.008795960463177417,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': Binarizer(copy=True, threshold=0)}",0.9027777777777778,0.9460093896713615,0.92018779342723,0.9366197183098591,0.9272300469483568,0.9265649452269169,0.014738552453562375,81,0.9571596244131455,0.9491228070175438,0.9514619883040936,0.9526315789473684,0.9467836257309942,0.9514319248826292,0.003498151680936077
0.915987777709961,0.06176127549249006,0.0012582778930664063,8.508659055772713e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.9143518518518519,0.8943661971830986,0.9389671361502347,0.9460093896713615,0.9061032863849765,0.9199595722483046,0.019587467965308445,92,0.948943661971831,0.9467836257309942,0.9374269005847953,0.9362573099415205,0.9421052631578948,0.9423033522774071,0.004990795756064489
0.9269185543060303,0.008691624949780973,0.0012483596801757812,7.617001600969641e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': MaxAbsScaler(copy=True)}",0.9143518518518519,0.8943661971830986,0.9389671361502347,0.9460093896713615,0.9061032863849765,0.9199595722483046,0.019587467965308445,92,0.948943661971831,0.9467836257309942,0.9374269005847953,0.9362573099415205,0.9421052631578948,0.9423033522774071,0.004990795756064489
0.9271263599395752,0.005578389394554475,0.0013406753540039062,0.0002189290932434449,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9120370370370371,0.892018779342723,0.9389671361502347,0.9530516431924883,0.9107981220657277,0.9213745435576423,0.02178875199566882,88,0.9471830985915493,0.9456140350877194,0.9368421052631579,0.9362573099415205,0.9432748538011696,0.9418342805370233,0.004494353465436374
0.9413370609283447,0.015615418981304375,0.004512691497802734,0.004858640809792401,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.875,0.8826291079812206,0.9107981220657277,0.9154929577464789,0.892018779342723,0.89518779342723,0.015692624331791815,144,0.9043427230046949,0.8935672514619883,0.8941520467836257,0.8994152046783626,0.9011695906432748,0.8985293633143894,0.004131201283051314
0.9407915592193603,0.008745915993012918,0.011858606338500976,0.006508673565836234,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9375,0.9507042253521126,0.9741784037558685,0.9577464788732394,0.9342723004694836,0.9508802816901408,0.014455691818201699,53,0.971244131455399,0.9649122807017544,0.9584795321637427,0.968421052631579,0.9649122807017544,0.965593855530846,0.0042769462689398055
0.9386316299438476,0.015436405985020782,0.07589349746704102,0.004821273944929841,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9259259259259259,0.931924882629108,0.9507042253521126,0.9436619718309859,0.9577464788732394,0.9419926969222743,0.011716320812900896,62,0.9800469483568075,0.9736842105263158,0.9707602339181286,0.9760233918128655,0.9707602339181286,0.9742550037064491,0.003505037972089096
0.94467191696167,0.020921181220842015,0.015671396255493165,0.006701527557674596,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9166666666666666,0.9671361502347418,0.9694835680751174,0.9507042253521126,0.9553990610328639,0.9518779342723004,0.018954581444306444,50,0.9841549295774648,0.9818713450292398,0.9766081871345029,0.9830409356725146,0.9812865497076023,0.9813923894242649,0.002587606032501217
0.9750307083129883,0.026584743560422903,0.003314781188964844,0.00400797497947556,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': Normalizer(copy=True, norm='l2')}",0.8865740740740741,0.903755868544601,0.9577464788732394,0.9178403755868545,0.9084507042253521,0.9148735002608243,0.02371753027062887,110,0.9448356807511737,0.9380116959064327,0.9233918128654971,0.9339181286549708,0.9432748538011696,0.9366864343958488,0.007693949347401357
0.9407179832458497,0.01160931317223986,0.005539846420288086,0.003342288891797045,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9583333333333334,0.9530516431924883,0.9788732394366197,0.9741784037558685,0.9530516431924883,0.9634976525821596,0.01091233737011217,41,0.9835680751173709,0.9777777777777777,0.9771929824561404,0.9766081871345029,0.97953216374269,0.9789358372456964,0.0025143521065930812
0.4655317783355713,0.0689911770855054,0.004519891738891601,0.0051864938069171645,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': NonScaler()}",0.8726851851851852,0.8779342723004695,0.9389671361502347,0.9389671361502347,0.8967136150234741,0.9050534689619196,0.028820074358848636,127,0.9166666666666666,0.9187134502923977,0.9099415204678363,0.9058479532163742,0.9140350877192982,0.9130409356725145,0.004640195187105829
0.0579322338104248,0.009218674957756582,0.0013304710388183593,7.740105590430557e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': Binarizer(copy=True, threshold=0)}",0.7939814814814815,0.8028169014084507,0.8333333333333334,0.8145539906103286,0.7910798122065728,0.8071531038080334,0.01543257938470966,209,0.8028169014084507,0.8046783625730994,0.8105263157894737,0.8140350877192982,0.8146198830409357,0.8093353101062515,0.004808532573034208
0.05091533660888672,0.010881008227386624,0.005577898025512696,0.00587986421548422,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.7893518518518519,0.8028169014084507,0.8098591549295775,0.795774647887324,0.8028169014084507,0.800123891497131,0.006989030218291738,212,0.806924882629108,0.791812865497076,0.7871345029239766,0.795906432748538,0.8023391812865497,0.7968235730170496,0.007103306354826167
0.0558680534362793,0.013034879221468804,0.008306264877319336,0.014115400043877615,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': MaxAbsScaler(copy=True)}",0.7893518518518519,0.8028169014084507,0.8098591549295775,0.795774647887324,0.8028169014084507,0.800123891497131,0.006989030218291738,212,0.806924882629108,0.791812865497076,0.7871345029239766,0.795906432748538,0.8023391812865497,0.7968235730170496,0.007103306354826167
0.12195382118225098,0.025341130978236828,0.005208778381347656,0.0037465057935012506,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.8425925925925926,0.8169014084507042,0.8802816901408451,0.863849765258216,0.8591549295774648,0.8525560772039645,0.021495712524805838,191,0.863849765258216,0.8596491228070176,0.8491228070175438,0.8532163742690059,0.860233918128655,0.8572143974960877,0.005301537960358696
0.19160308837890624,0.0819543107431705,0.0012277126312255859,6.924401263619937e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.8842592592592593,0.8802816901408451,0.9248826291079812,0.9295774647887324,0.892018779342723,0.9022039645279083,0.02083250778183786,133,0.9166666666666666,0.9140350877192982,0.9087719298245615,0.9105263157894737,0.9146198830409357,0.9129239766081871,0.0028672867069312524
0.06115498542785645,0.012952602463294126,0.015946102142333985,0.010088829040247162,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.7916666666666666,0.812206572769953,0.812206572769953,0.795774647887324,0.8356807511737089,0.809507042253521,0.015533805874709563,208,0.818075117370892,0.8187134502923976,0.8152046783625732,0.8052631578947368,0.8076023391812865,0.8129717486203771,0.005518159378412724
0.10708432197570801,0.017834071743064887,0.08629937171936035,0.017912201669980338,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8796296296296297,0.8826291079812206,0.9084507042253521,0.8943661971830986,0.8779342723004695,0.8886019822639539,0.011464521900123084,156,0.9084507042253521,0.9076023391812865,0.9058479532163742,0.9058479532163742,0.8982456140350877,0.905198912774895,0.003620537984404045
0.07343616485595703,0.010339243509535885,0.00831608772277832,0.004633657726549921,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7847222222222222,0.7910798122065728,0.8192488262910798,0.7934272300469484,0.7863849765258216,0.7949726134585289,0.012535506767200739,214,0.795774647887324,0.8046783625730994,0.7929824561403509,0.791812865497076,0.7976608187134503,0.7965818301622601,0.004540222768228713
0.06888794898986816,0.00715764656529638,0.004125022888183593,0.0034849053539225258,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': Normalizer(copy=True, norm='l2')}",0.7708333333333334,0.784037558685446,0.8028169014084507,0.7863849765258216,0.7934272300469484,0.7875,0.010590081017330546,218,0.8045774647887324,0.7935672514619883,0.7871345029239766,0.7865497076023392,0.7894736842105263,0.7922605221975125,0.0066343132133606505
0.1119682788848877,0.01836244428134186,0.001463031768798828,7.952760400357521e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.8402777777777778,0.8450704225352113,0.8661971830985915,0.852112676056338,0.8568075117370892,0.8520931142410015,0.009056169822713539,194,0.8656103286384976,0.868421052631579,0.8502923976608188,0.8444444444444444,0.8573099415204678,0.8572156329791616,0.009023033666822493
0.4377021312713623,0.10071989358941322,0.005151700973510742,0.008052109106071202,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': NonScaler()}",0.8819444444444444,0.8591549295774648,0.9084507042253521,0.8943661971830986,0.9014084507042254,0.8890649452269169,0.01732964869384455,155,0.926056338028169,0.8812865497076023,0.908187134502924,0.9210526315789473,0.9222222222222223,0.911760975207973,0.016380432914505992
0.14471564292907715,0.03797330535926127,0.002113819122314453,0.0015853565781883188,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': Binarizer(copy=True, threshold=0)}",0.8865740740740741,0.9225352112676056,0.9131455399061033,0.9178403755868545,0.9436619718309859,0.9167514345331247,0.018343884233875077,107,0.9366197183098591,0.927485380116959,0.939766081871345,0.9403508771929825,0.935672514619883,0.9359789144222057,0.00460654602088324
0.07868213653564453,0.01754510499536229,0.003035116195678711,0.0036150847239241643,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.8958333333333334,0.8615023474178404,0.9225352112676056,0.9014084507042254,0.8732394366197183,0.8909037558685446,0.02150195019827047,152,0.9242957746478874,0.9099415204678363,0.9017543859649123,0.9,0.9064327485380117,0.9084848859237296,0.00864419080223232
0.08793315887451172,0.01668880373324326,0.004673624038696289,0.0068178141388888554,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': MaxAbsScaler(copy=True)}",0.8958333333333334,0.8615023474178404,0.9225352112676056,0.9014084507042254,0.8732394366197183,0.8909037558685446,0.02150195019827047,152,0.9242957746478874,0.9099415204678363,0.9017543859649123,0.9,0.9064327485380117,0.9084848859237296,0.00864419080223232
0.967280387878418,0.09622756430218936,0.0029642581939697266,0.003494044399496367,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9143518518518519,0.903755868544601,0.9366197183098591,0.9389671361502347,0.9178403755868545,0.9223069900886802,0.013489207804343673,87,0.9565727699530516,0.9450292397660819,0.9368421052631579,0.939766081871345,0.9508771929824561,0.9458174779672184,0.007198264389193087
0.33118338584899903,0.026567093569171432,0.005358648300170898,0.00799526045022783,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.9328703703703703,0.8990610328638498,0.9366197183098591,0.9624413145539906,0.9131455399061033,0.9288275952008347,0.021628307534335464,79,0.9700704225352113,0.9467836257309942,0.9438596491228071,0.9508771929824561,0.947953216374269,0.9519088213491476,0.009355336756092819
0.35783944129943845,0.06530820416625115,0.0044062137603759766,7.230791747415754e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9328703703703703,0.9507042253521126,0.9624413145539906,0.9530516431924883,0.9460093896713615,0.9490153886280648,0.009686037906458526,56,0.9683098591549296,0.9643274853801169,0.9643274853801169,0.9672514619883041,0.9649122807017544,0.9658257145210444,0.0016448387679118953
0.9288578987121582,0.054772234333242645,0.09820928573608398,0.027360983194645975,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9259259259259259,0.9084507042253521,0.8732394366197183,0.9366197183098591,0.9483568075117371,0.9185185185185185,0.026170222584716855,103,0.9706572769953051,0.9678362573099415,0.8970760233918129,0.9619883040935673,0.9590643274853801,0.9513244378552013,0.027433239901082568
0.09429941177368165,0.014269148131677921,0.012146806716918946,0.0038090972822332233,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9259259259259259,0.9507042253521126,0.9553990610328639,0.9413145539906104,0.9530516431924883,0.9452790818988003,0.01079371109370874,58,0.977112676056338,0.9713450292397661,0.9654970760233919,0.9690058479532164,0.9695906432748538,0.9705102545095132,0.0038086664746468843
0.08065958023071289,0.017844336245142416,0.003297567367553711,0.0020408081053979446,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': Normalizer(copy=True, norm='l2')}",0.8263888888888888,0.8474178403755869,0.9014084507042254,0.8826291079812206,0.8544600938967136,0.8624608763693271,0.026514768887528874,181,0.8779342723004695,0.8760233918128655,0.8590643274853801,0.8695906432748538,0.8719298245614036,0.8709084918869945,0.006611926609375678
0.25419325828552247,0.025515750432831216,0.0015570163726806641,8.794777617227393e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9490740740740741,0.9507042253521126,0.9624413145539906,0.9671361502347418,0.9483568075117371,0.9555425143453313,0.007731623116504184,44,0.9782863849765259,0.9771929824561404,0.9742690058479532,0.9730994152046784,0.9760233918128655,0.9757742360596326,0.0018871246224810676
0.4048821449279785,0.025495384688491288,0.001058483123779297,3.096784773498873e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': NonScaler()}",0.8333333333333334,0.8145539906103286,0.931924882629108,0.892018779342723,0.8967136150234741,0.8737089201877934,0.043319877462618867,169,0.8568075117370892,0.8257309941520468,0.9152046783625731,0.9111111111111111,0.9169590643274854,0.8851626719380612,0.03721019658371492
0.3017091751098633,0.039000997979005594,0.003356313705444336,0.004052255406208226,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': Binarizer(copy=True, threshold=0)}",0.8935185185185185,0.9178403755868545,0.903755868544601,0.8826291079812206,0.8990610328638498,0.8993609806990088,0.011618803486373386,137,0.9407276995305164,0.916374269005848,0.9239766081871345,0.9210526315789473,0.9152046783625731,0.9234671773330039,0.009193404323733417
0.3155181884765625,0.03651774245764997,0.001231813430786133,2.9035271978429926e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.8009259259259259,0.903755868544601,0.795774647887324,0.903755868544601,0.8568075117370892,0.8522039645279083,0.047223077582447905,192,0.829225352112676,0.935672514619883,0.7847953216374269,0.9099415204678363,0.8941520467836257,0.8707573511242895,0.05551768514482073
0.30434136390686034,0.026903365963866596,0.0012725830078125,0.00014360199411059442,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': MaxAbsScaler(copy=True)}",0.8009259259259259,0.903755868544601,0.795774647887324,0.903755868544601,0.8568075117370892,0.8522039645279083,0.047223077582447905,192,0.829225352112676,0.935672514619883,0.7847953216374269,0.9099415204678363,0.8941520467836257,0.8707573511242895,0.05551768514482073
0.863087511062622,0.055815067000963225,0.005294656753540039,0.0080356130464495,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9074074074074074,0.8450704225352113,0.8826291079812206,0.8051643192488263,0.8990610328638498,0.8678664580073031,0.03796245896231398,177,0.960093896713615,0.8789473684210526,0.916374269005848,0.7964912280701755,0.916374269005848,0.8936562062433078,0.05496102320710644
0.3845989227294922,0.035184298786352305,0.0012341022491455078,2.839380101300433e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.875,0.8262910798122066,0.8802816901408451,0.8826291079812206,0.8732394366197183,0.8674882629107981,0.020878826873765608,178,0.9125586854460094,0.8748538011695907,0.8690058479532163,0.8894736842105263,0.9093567251461988,0.8910497487851083,0.017598329479597274
0.3823367118835449,0.019267907027624792,0.0064293861389160155,0.0040666852148098665,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9328703703703703,0.9460093896713615,0.9671361502347418,0.9295774647887324,0.8967136150234741,0.9344613980177361,0.023031608009068144,72,0.9759389671361502,0.9485380116959065,0.9555555555555556,0.9514619883040936,0.8690058479532163,0.9401000741289846,0.03681841668986665
0.9719126701354981,0.09997917815247759,0.07488012313842773,0.014439702748392153,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9027777777777778,0.8708920187793427,0.931924882629108,0.92018779342723,0.9413145539906104,0.9134194053208138,0.024852468408950112,114,0.9495305164319249,0.8824561403508772,0.9584795321637427,0.9543859649122807,0.9573099415204679,0.9404324190758586,0.029152271837307963
0.24287071228027343,0.024565773883411673,0.01895604133605957,0.01679345916994603,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9074074074074074,0.9366197183098591,0.931924882629108,0.92018779342723,0.9272300469483568,0.9246739697443923,0.010198726685320746,84,0.948943661971831,0.9637426900584796,0.9456140350877194,0.9549707602339181,0.9233918128654971,0.947332592043489,0.01346360146573333
0.38250293731689455,0.03190718858918254,0.005627632141113281,0.0048732819179227215,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': Normalizer(copy=True, norm='l2')}",0.8842592592592593,0.8849765258215962,0.7699530516431925,0.9225352112676056,0.8943661971830986,0.8712180490349505,0.05250382166406041,173,0.9242957746478874,0.9064327485380117,0.7730994152046784,0.9192982456140351,0.9222222222222223,0.8890696812453671,0.0583169159760234
0.2337247371673584,0.0583865382733013,0.0035810470581054688,0.004026662490938273,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9421296296296297,0.9413145539906104,0.9483568075117371,0.9413145539906104,0.9366197183098591,0.9419470526864894,0.0037496371029996194,63,0.9818075117370892,0.960233918128655,0.968421052631579,0.9590643274853801,0.9637426900584796,0.9666539000082366,0.008246789661540127
0.3186668395996094,0.026054780755358165,0.005241680145263672,0.007982041937506823,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': NonScaler()}",0.8611111111111112,0.8896713615023474,0.7629107981220657,0.8802816901408451,0.8615023474178404,0.851095461658842,0.04544246333548802,197,0.8902582159624414,0.9093567251461988,0.7789473684210526,0.8403508771929824,0.8941520467836257,0.8626130467012603,0.047831966920755246
0.20790467262268067,0.04425329523073174,0.003253173828125,0.003315231373585448,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': Binarizer(copy=True, threshold=0)}",0.8842592592592593,0.9154929577464789,0.9272300469483568,0.892018779342723,0.92018779342723,0.9078377673448095,0.01669354376694742,121,0.9307511737089202,0.9350877192982456,0.939766081871345,0.9362573099415205,0.9222222222222223,0.9328169014084506,0.006029902020043333
0.16643233299255372,0.02919264051528486,0.0035210132598876955,0.004302020405378277,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.8842592592592593,0.8685446009389671,0.9248826291079812,0.9061032863849765,0.892018779342723,0.8951617110067815,0.01918469737290157,146,0.92018779342723,0.916374269005848,0.9157894736842105,0.9087719298245615,0.9140350877192982,0.9150317107322297,0.003718601097430313
0.1918673038482666,0.04204324923328651,0.005392932891845703,0.00799784645513443,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': MaxAbsScaler(copy=True)}",0.8842592592592593,0.8685446009389671,0.9248826291079812,0.9061032863849765,0.892018779342723,0.8951617110067815,0.01918469737290157,146,0.92018779342723,0.916374269005848,0.9157894736842105,0.9087719298245615,0.9140350877192982,0.9150317107322297,0.003718601097430313
0.25142974853515626,0.030603965826499074,0.0012849330902099609,2.482009551349219e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9143518518518519,0.9178403755868545,0.9577464788732394,0.9413145539906104,0.9178403755868545,0.9298187271778822,0.016960538876423025,77,0.9571596244131455,0.9584795321637427,0.9549707602339181,0.9450292397660819,0.9596491228070175,0.9550576558767812,0.00524949060699552
0.22641592025756835,0.028693233651561935,0.005804872512817383,0.007832513974892898,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.8587962962962963,0.8685446009389671,0.8755868544600939,0.8075117370892019,0.8708920187793427,0.8562663015127804,0.02498543749582123,188,0.8943661971830986,0.9017543859649123,0.9017543859649123,0.7994152046783626,0.8923976608187134,0.8779375669219999,0.03944423232546003
0.2875551223754883,0.042085412608659195,0.012658071517944337,0.006137680385344386,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.8981481481481481,0.9272300469483568,0.892018779342723,0.8615023474178404,0.9178403755868545,0.8993479394887846,0.022833427408675763,139,0.9336854460093896,0.9333333333333333,0.8912280701754386,0.8853801169590644,0.939766081871345,0.9166786096697143,0.02335366901266428
0.377689266204834,0.038404574854860755,0.10148348808288574,0.025715621161288227,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9143518518518519,0.9295774647887324,0.9413145539906104,0.9014084507042254,0.9272300469483568,0.9227764736567554,0.01369171191167022,85,0.9301643192488263,0.9614035087719298,0.9538011695906433,0.9339181286549708,0.9315789473684211,0.9421732147269584,0.012881087383390834
0.17496194839477539,0.014652056294839576,0.016463470458984376,0.0021689452916561535,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9212962962962963,0.9436619718309859,0.9507042253521126,0.9366197183098591,0.9460093896713615,0.9396583202921232,0.010244748447168224,64,0.9688967136150235,0.9701754385964912,0.960233918128655,0.9614035087719298,0.968421052631579,0.9658261263487358,0.004145141845803747
0.22578234672546388,0.06241117624385857,0.0013453006744384766,3.719714951750581e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': Normalizer(copy=True, norm='l2')}",0.8240740740740741,0.863849765258216,0.8896713615023474,0.8286384976525821,0.8497652582159625,0.8511997913406365,0.024028973953179093,196,0.8744131455399061,0.8824561403508772,0.8573099415204678,0.835672514619883,0.8619883040935673,0.8623680092249403,0.0160436652799627
0.2590620517730713,0.07453214199565926,0.004610538482666016,0.006121786856379466,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9560185185185185,0.9507042253521126,0.9765258215962441,0.9366197183098591,0.9483568075117371,0.9536450182576942,0.013081582006978041,47,0.9765258215962441,0.9760233918128655,0.9660818713450292,0.9608187134502923,0.9672514619883041,0.969340252038547,0.006064544098950508
0.33240561485290526,0.024603294786142576,0.0012629508972167968,0.00038713240990546736,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': NonScaler()}",0.7916666666666666,0.852112676056338,0.7723004694835681,0.8826291079812206,0.812206572769953,0.8221830985915493,0.04017103441530081,205,0.8145539906103286,0.8654970760233918,0.7573099415204678,0.8625730994152047,0.8058479532163743,0.8211564121571534,0.0400892732628433
0.2838741302490234,0.04054044625666433,0.0013792991638183593,5.681378170425852e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': Binarizer(copy=True, threshold=0)}",0.8819444444444444,0.9342723004694836,0.9248826291079812,0.9014084507042254,0.9248826291079812,0.9134780907668233,0.01914457212023107,113,0.9325117370892019,0.939766081871345,0.9385964912280702,0.9362573099415205,0.9321637426900585,0.9358590725640392,0.0030911775535229684
0.24238877296447753,0.0443368918130484,0.00150604248046875,0.00047704917009163555,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.8726851851851852,0.8286384976525821,0.8873239436619719,0.8779342723004695,0.8685446009389671,0.8670252999478352,0.020193710809459826,179,0.9119718309859155,0.8824561403508772,0.8842105263157894,0.8900584795321638,0.8929824561403509,0.8923358866650194,0.010533810447745767
0.18396124839782715,0.01736798577705134,0.005017280578613281,0.005202964598243664,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': MaxAbsScaler(copy=True)}",0.8726851851851852,0.8286384976525821,0.8873239436619719,0.8779342723004695,0.8685446009389671,0.8670252999478352,0.020193710809459826,179,0.9119718309859155,0.8824561403508772,0.8842105263157894,0.8900584795321638,0.8929824561403509,0.8923358866650194,0.010533810447745767
0.35952534675598147,0.02322369371247044,0.001825714111328125,0.0010045279623688153,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9282407407407407,0.9272300469483568,0.960093896713615,0.9413145539906104,0.9248826291079812,0.9363523735002609,0.013182212438571636,69,0.9624413145539906,0.9549707602339181,0.9549707602339181,0.9432748538011696,0.9637426900584796,0.9558800757762953,0.00728582031348221
0.2795726299285889,0.03529246127728005,0.0012691020965576172,8.890628495015603e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.8773148148148148,0.8215962441314554,0.8755868544600939,0.8192488262910798,0.8896713615023474,0.8566836202399581,0.03001218848180104,187,0.909037558685446,0.8555555555555555,0.895906432748538,0.8192982456140351,0.9029239766081871,0.8765443538423524,0.0341883884341582
0.3710416316986084,0.023897920442898225,0.011050176620483399,0.005092071178950258,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.8935185185185185,0.9225352112676056,0.9553990610328639,0.9061032863849765,0.9248826291079812,0.9204877412623892,0.020864126812511298,90,0.9313380281690141,0.9333333333333333,0.9304093567251462,0.935672514619883,0.9116959064327486,0.9284898278560251,0.008589332539026549
0.3773848533630371,0.06100566092832737,0.07076826095581054,0.006471442246950679,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9120370370370371,0.903755868544601,0.9295774647887324,0.9178403755868545,0.9342723004694836,0.9194966092853418,0.01119020951464508,98,0.9595070422535211,0.9549707602339181,0.9245614035087719,0.9461988304093567,0.9345029239766082,0.9439481920764352,0.012912791030368834
0.2229029655456543,0.014976708378828432,0.012866449356079102,0.007346808121943793,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9259259259259259,0.9507042253521126,0.9577464788732394,0.9248826291079812,0.9366197183098591,0.9391757955138237,0.013146574882044812,66,0.9741784037558685,0.9725146198830409,0.9654970760233919,0.9649122807017544,0.9643274853801169,0.9682859731488346,0.004181663902809498
0.23305630683898926,0.05759530677986024,0.004294729232788086,0.005643699357041784,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': Normalizer(copy=True, norm='l2')}",0.8171296296296297,0.8685446009389671,0.9014084507042254,0.8544600938967136,0.8474178403755869,0.8577921231090245,0.027532403996898318,186,0.8697183098591549,0.876608187134503,0.847953216374269,0.8555555555555555,0.8584795321637427,0.861662960217445,0.01023367136051592
0.3365475654602051,0.06692632247159272,0.004986286163330078,0.006797170005304624,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9444444444444444,0.9225352112676056,0.9859154929577465,0.9553990610328639,0.9577464788732394,0.95320813771518,0.020556256998861405,48,0.9700704225352113,0.9660818713450292,0.9713450292397661,0.9672514619883041,0.9730994152046784,0.9695696400625978,0.002584592137275
0.27248401641845704,0.027472287701990665,0.0011103153228759766,5.4079094164505784e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': NonScaler()}",0.8449074074074074,0.852112676056338,0.8591549295774648,0.8215962441314554,0.863849765258216,0.8483242044861765,0.014824024602841858,199,0.8931924882629108,0.8824561403508772,0.8567251461988304,0.8228070175438597,0.8695906432748538,0.8649542871262664,0.024369315795572163
0.316540002822876,0.018017479066583315,0.003588151931762695,0.004428573027672939,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': Binarizer(copy=True, threshold=0)}",0.9097222222222222,0.92018779342723,0.92018779342723,0.9154929577464789,0.9225352112676056,0.9176251956181535,0.004566081374181442,106,0.9524647887323944,0.9181286549707602,0.9280701754385965,0.9309941520467836,0.927485380116959,0.9314286302610988,0.011370369543386343
0.20867419242858887,0.034748525717515265,0.0015311717987060546,0.0004227349368035172,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.8726851851851852,0.8896713615023474,0.9178403755868545,0.9272300469483568,0.8802816901408451,0.8975417318727178,0.021312581599825724,140,0.9160798122065728,0.9339181286549708,0.9070175438596492,0.9099415204678363,0.92046783625731,0.9174849682892677,0.009459294939485252
0.2167654514312744,0.019578180284910145,0.008533811569213868,0.008991748333913302,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': MaxAbsScaler(copy=True)}",0.8726851851851852,0.8896713615023474,0.9178403755868545,0.9272300469483568,0.8802816901408451,0.8975417318727178,0.021312581599825724,140,0.9160798122065728,0.9339181286549708,0.908187134502924,0.9099415204678363,0.9198830409356725,0.9176019273535954,0.009176697626908896
0.267609167098999,0.02448068334686755,0.013601875305175782,0.016389430556282825,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9027777777777778,0.8685446009389671,0.9460093896713615,0.9577464788732394,0.863849765258216,0.9077856025039125,0.03860683716597792,122,0.9536384976525821,0.9023391812865497,0.9467836257309942,0.9473684210526315,0.8847953216374269,0.9269850094720369,0.027947320845312616
0.21173763275146484,0.03554232012392926,0.003066873550415039,0.0036874641882562865,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.8194444444444444,0.8685446009389671,0.823943661971831,0.8615023474178404,0.8497652582159625,0.8446400625978091,0.019724053365275794,200,0.840962441314554,0.8982456140350877,0.8116959064327486,0.8526315789473684,0.8900584795321638,0.8587188040523845,0.03196260187872671
0.31725196838378905,0.047920275767043774,0.009786224365234375,0.00677300115968826,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.8935185185185185,0.8403755868544601,0.8873239436619719,0.8615023474178404,0.9131455399061033,0.8791731872717788,0.02547098930590375,166,0.9395539906103286,0.8409356725146199,0.875438596491228,0.887719298245614,0.9467836257309942,0.8980862367185569,0.039943926495660975
0.2862540721893311,0.05085295709501899,0.07072181701660156,0.00838998538636023,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9166666666666666,0.9131455399061033,0.9366197183098591,0.9272300469483568,0.9553990610328639,0.92981220657277,0.015220248899011597,78,0.95481220657277,0.9233918128654971,0.9497076023391813,0.9532163742690059,0.9614035087719298,0.9485063009636768,0.013118443831263127
0.23754100799560546,0.06270732675116926,0.012087392807006835,0.0040274007534060905,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9236111111111112,0.960093896713615,0.9741784037558685,0.9366197183098591,0.9624413145539906,0.951388888888889,0.018477167532105716,52,0.9812206572769953,0.9725146198830409,0.9719298245614035,0.9666666666666667,0.9678362573099415,0.9720336051396096,0.005119879489644808
0.3086236476898193,0.045891331830013,0.001323366165161133,7.863717024397515e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': Normalizer(copy=True, norm='l2')}",0.8634259259259259,0.8849765258215962,0.9084507042253521,0.8685446009389671,0.9014084507042254,0.8853612415232133,0.017633727271544167,159,0.920774647887324,0.9134502923976608,0.8760233918128655,0.8801169590643275,0.9263157894736842,0.9033362161271725,0.021069307073660986
0.23672852516174317,0.0728316304090507,0.0038685321807861326,0.003896496478370021,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9513888888888888,0.9483568075117371,0.9788732394366197,0.9413145539906104,0.9483568075117371,0.9536580594679187,0.013034746702908315,46,0.9759389671361502,0.9719298245614035,0.968421052631579,0.9608187134502923,0.9760233918128655,0.9706263899184581,0.005658693811538494
0.319683837890625,0.06928886858865332,0.015794706344604493,0.02207719385314458,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': NonScaler()}",0.7291666666666666,0.7981220657276995,0.7347417840375586,0.8802816901408451,0.823943661971831,0.7932511737089201,0.05669257083216276,215,0.7488262910798122,0.8269005847953217,0.735672514619883,0.8309941520467836,0.8567251461988304,0.7998237377481262,0.0482879687971615
0.966878604888916,0.2301184798197373,0.004151773452758789,0.0055519417343091555,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': Binarizer(copy=True, threshold=0)}",0.8935185185185185,0.9295774647887324,0.8849765258215962,0.8802816901408451,0.9084507042253521,0.8993609806990088,0.01789259745919238,137,0.948943661971831,0.9228070175438596,0.9011695906432748,0.904093567251462,0.9251461988304094,0.9204320072481673,0.017197465198374548
0.8941439628601074,0.3352780543211944,0.006394863128662109,0.006523335947586885,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.8888888888888888,0.9084507042253521,0.903755868544601,0.92018779342723,0.8802816901408451,0.9003129890453835,0.014176365380461036,134,0.9301643192488263,0.9350877192982456,0.9198830409356725,0.9245614035087719,0.9099415204678363,0.9239276006918704,0.008669665683661931
0.7402558326721191,0.17478644674492946,0.003867912292480469,0.005246037117395014,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': MaxAbsScaler(copy=True)}",0.9004629629629629,0.9084507042253521,0.903755868544601,0.9178403755868545,0.8826291079812206,0.9026278038601981,0.011586504305471482,132,0.9419014084507042,0.9280701754385965,0.9187134502923977,0.9257309941520467,0.9233918128654971,0.9275615682398485,0.00780918371073902
0.255338716506958,0.03720437388860689,0.001256418228149414,4.9280237901425464e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9074074074074074,0.9366197183098591,0.8779342723004695,0.9577464788732394,0.9154929577464789,0.9190401669274909,0.026999324329918525,102,0.9565727699530516,0.9637426900584796,0.8631578947368421,0.9456140350877194,0.9526315789473684,0.9363437937566921,0.03706026479291739
0.20964913368225097,0.023879069229806885,0.0033020973205566406,0.004052931240029039,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.8773148148148148,0.8544600938967136,0.8873239436619719,0.9154929577464789,0.863849765258216,0.8796883150756389,0.021134008461978306,165,0.9019953051643192,0.8719298245614036,0.8935672514619883,0.8976608187134503,0.8929824561403509,0.8916271312083024,0.010368117259215038
0.27728958129882814,0.025497417746451503,0.009950351715087891,0.004656231988344395,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.8819444444444444,0.9248826291079812,0.9061032863849765,0.903755868544601,0.8990610328638498,0.9031494522691705,0.013768016431355126,129,0.9307511737089202,0.9380116959064327,0.8970760233918129,0.935672514619883,0.9064327485380117,0.921588831233012,0.016628852831065577
0.3004128932952881,0.08394625093948417,0.0901153564453125,0.01825180943619553,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9004629629629629,0.9107981220657277,0.9342723004694836,0.9107981220657277,0.9413145539906104,0.9195292123109023,0.015543136739345055,97,0.9448356807511737,0.9263157894736842,0.9473684210526315,0.9461988304093567,0.9538011695906433,0.9437039782554979,0.009222099118880958
0.9116895198822021,0.3945143080133576,0.0073184013366699215,0.005444994856375461,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.8819444444444444,0.9389671361502347,0.9413145539906104,0.903755868544601,0.9342723004694836,0.920050860719875,0.023365980431257483,91,0.9442488262910798,0.9555555555555556,0.9415204678362573,0.9526315789473684,0.9257309941520467,0.9439374845564616,0.010468830377511123
0.7386697292327881,0.2079960782836686,0.0033496856689453126,0.004088280360436352,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': Normalizer(copy=True, norm='l2')}",0.8773148148148148,0.8967136150234741,0.9084507042253521,0.903755868544601,0.8779342723004695,0.8928338549817422,0.012969711410244405,150,0.9284037558685446,0.9134502923976608,0.8853801169590644,0.9087719298245615,0.87953216374269,0.9031076517585042,0.018160486060651033
0.26554279327392577,0.05004162877795041,0.002029705047607422,0.0011602766528078716,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9606481481481481,0.9647887323943662,0.9741784037558685,0.9178403755868545,0.9413145539906104,0.9517540427751696,0.020054824643909848,51,0.977112676056338,0.9725146198830409,0.9654970760233919,0.9327485380116959,0.9736842105263158,0.9643114241001565,0.016227354354943886
0.3150797843933105,0.03328345682675971,0.0010778427124023438,4.8480622706435065e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': NonScaler()}",0.8773148148148148,0.8098591549295775,0.7981220657276995,0.8732394366197183,0.7300469483568075,0.8177164840897234,0.05434406247414219,207,0.9078638497652582,0.8491228070175438,0.7801169590643274,0.8432748538011696,0.7380116959064328,0.8236780331109465,0.0589152138724939
0.2592323780059814,0.05475696196463952,0.004289007186889649,0.0059672207203517146,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': Binarizer(copy=True, threshold=0)}",0.8842592592592593,0.92018779342723,0.9107981220657277,0.9014084507042254,0.92018779342723,0.9073682837767345,0.013490663960297746,123,0.9248826291079812,0.9245614035087719,0.9304093567251462,0.927485380116959,0.9327485380116959,0.9280174614941108,0.003167297563872336
0.16391277313232422,0.04487128030635112,0.001715087890625,0.0009275611450823076,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.8680555555555556,0.892018779342723,0.8262910798122066,0.8732394366197183,0.892018779342723,0.8703247261345852,0.024057724622117655,174,0.920774647887324,0.9181286549707602,0.8339181286549707,0.8631578947368421,0.8953216374269006,0.8862601927353595,0.03335375278613133
0.18295550346374512,0.026001197592828127,0.0012599945068359375,4.713684242724301e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': MaxAbsScaler(copy=True)}",0.8680555555555556,0.892018779342723,0.8262910798122066,0.8732394366197183,0.892018779342723,0.8703247261345852,0.024057724622117655,174,0.920774647887324,0.9181286549707602,0.8339181286549707,0.8631578947368421,0.8953216374269006,0.8862601927353595,0.03335375278613133
0.23592448234558105,0.04230678613050918,0.00529932975769043,0.004963987268572125,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9120370370370371,0.903755868544601,0.9436619718309859,0.9366197183098591,0.9014084507042254,0.9194966092853416,0.01736527124854913,99,0.9665492957746479,0.9345029239766082,0.9473684210526315,0.9333333333333333,0.9333333333333333,0.9430174614941109,0.01290534849814005
0.22618551254272462,0.023953529608730137,0.00604090690612793,0.009278573294453559,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.8726851851851852,0.8215962441314554,0.8755868544600939,0.9366197183098591,0.8849765258215962,0.878292905581638,0.036605924446348255,167,0.9002347417840375,0.8491228070175438,0.9017543859649123,0.9187134502923977,0.9017543859649123,0.8943159542047606,0.023593859152504813
0.26254801750183104,0.013947480124610506,0.006383275985717774,0.003049348866121339,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.8981481481481481,0.9178403755868545,0.9553990610328639,0.892018779342723,0.9342723004694836,0.9195357329160145,0.023327367959140366,96,0.9442488262910798,0.939766081871345,0.9099415204678363,0.9269005847953217,0.939766081871345,0.9321246190593856,0.012515276312768284
0.27011938095092775,0.04162473787504959,0.0891148567199707,0.01977315310481473,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8819444444444444,0.9178403755868545,0.9366197183098591,0.8896713615023474,0.9389671361502347,0.9130086071987481,0.023512911445853518,115,0.9066901408450704,0.9187134502923977,0.9456140350877194,0.9116959064327486,0.9514619883040936,0.926835104192406,0.018221458699920135
0.19426636695861815,0.010183684634773444,0.013730525970458984,0.00873655011156565,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9259259259259259,0.9553990610328639,0.9671361502347418,0.931924882629108,0.9389671361502347,0.9438706311945749,0.015250879911419005,59,0.9835680751173709,0.9625730994152046,0.9608187134502923,0.9614035087719298,0.9391812865497076,0.9615089366609009,0.014048128091795488
0.21128158569335936,0.015207892587896125,0.0038225650787353516,0.002334072221693038,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': Normalizer(copy=True, norm='l2')}",0.8402777777777778,0.8849765258215962,0.8849765258215962,0.852112676056338,0.8474178403755869,0.8619522691705791,0.019173333454832277,184,0.9125586854460094,0.8976608187134503,0.8631578947368421,0.8538011695906432,0.87953216374269,0.8813421464459269,0.021601943548982563
0.23433241844177247,0.04877821619556141,0.007443094253540039,0.008038867747952441,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9490740740740741,0.9436619718309859,0.9741784037558685,0.9483568075117371,0.960093896713615,0.9550730307772561,0.010968425357880564,45,0.9759389671361502,0.9573099415204679,0.9707602339181286,0.960233918128655,0.9719298245614035,0.9672345770529611,0.007179827686568148
