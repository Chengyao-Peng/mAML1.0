2019-11-14 09:46:24 Start reading data from Fierer2010_SubjectH.6.csv
2019-11-14 09:46:24 Finish loading data from Fierer2010_SubjectH.6.csv, dimension is (98, 1217), 
 			 label counts Counter({'Subject2_Left': 20, 'Subject2_Right': 18, 'Subject3_Left': 17, 'Subject9_Left': 16, 'Subject3_Right': 14, 'Subject9_Right': 13})
2019-11-14 09:46:27 Filtered the features with max within_class prevalence lower than 0.2, dimension is (98, 411)
2019-11-14 09:46:35 Selected 50 features using mrmr
2019-11-14 09:46:35 Dataset shape Counter({0: 20, 1: 18, 2: 17, 4: 16, 3: 14, 5: 13}) before over sampling
2019-11-14 09:46:35 Over sampled dataset with SMOTE, shape Counter({0: 20, 1: 20, 2: 20, 3: 20, 4: 20, 5: 20})
2019-11-14 09:46:35 Select the best tree-based classifiers: ['DecisionTreeClassifier', 'BaggingClassifier', 'GradientBoostingClassifier', 'AdaBoostClassifier', 'RandomForestClassifier', 'ExtraTreesClassifier', 'XGBClassifier', 'LGBMClassifier'] 
 			 and combination of scalers: ['Non', 'Binarizer', 'MinMaxScaler', 'MaxAbsScaler', 'StandardScaler', 'RobustScaler', 'PowerTransformer_YeoJohnson', 'QuantileTransformer_Normal', 'QuantileTransformer_Uniform', 'Normalizer', 'Log1p'] 
 			 and classifiers: ['KNeighborsClassifier', 'GaussianNB', 'LogisticRegression', 'LinearSVC', 'SGDClassifier'] 
 			 Tune each classifier with GridSearchCV
2019-11-14 12:01:28 RandomForestClassifier hypertuned, Accuracy:0.87, Best Param:{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=8, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 8, 'scl': NonScaler()}
2019-11-14 12:01:30 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2019-11-14 12:01:30 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2019-11-14 12:01:30 Pipeline is finished
2019-11-14 12:01:30 sklearn pipeline finished, total time cost: 8105.7 s
