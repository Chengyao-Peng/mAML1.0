mean_fit_time,std_fit_time,mean_score_time,std_score_time,param_clf,param_clf__max_depth,param_scl,param_clf__n_estimators,param_clf__learning_rate,param_clf__min_child_weight,param_clf__n_neighbors,param_clf__C,param_clf__loss,params,split0_test_score,split1_test_score,split2_test_score,split3_test_score,split4_test_score,mean_test_score,std_test_score,rank_test_score,split0_train_score,split1_train_score,split2_train_score,split3_train_score,split4_train_score,mean_train_score,std_train_score
0.10249972343444824,0.03491793627243169,0.0009604454040527344,0.00020438697983707387,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",4,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 4, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9210526315789473,0.8894736842105264,0.04210526315789474,22,0.9144736842105263,0.9276315789473685,0.9342105263157895,0.9342105263157895,0.9078947368421053,0.9236842105263158,0.010689524216626257
0.02774534225463867,0.008391120527061148,0.001549673080444336,0.0009766384626996951,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",8,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 8, 'scl': NonScaler()}",0.9210526315789473,0.8157894736842105,0.8157894736842105,0.7894736842105263,0.9210526315789473,0.8526315789473685,0.05668594533825792,88,0.9736842105263158,0.9868421052631579,0.9868421052631579,0.9868421052631579,0.9671052631578947,0.9802631578947368,0.008321783316232567
0.022768163681030275,0.00669902574116471,0.0016536712646484375,0.0010778980796977184,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",16,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 16, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8578947368421053,0.06359497880839247,77,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.022195863723754882,0.005741444035551756,0.0013387203216552734,0.0005395755154306912,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",32,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 32, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8578947368421053,0.06359497880839247,77,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.02291979789733887,0.004801560819144087,0.0013129234313964844,0.0007819913855350299,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",64,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 64, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8578947368421053,0.06359497880839247,77,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.029815053939819335,0.005667432004331305,0.0026767730712890627,0.0012746193803224665,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),5,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 5, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.7894736842105263,0.7894736842105263,0.868421052631579,0.8368421052631578,0.0631578947368421,98,0.9868421052631579,0.9868421052631579,0.9868421052631579,0.9736842105263158,0.9605263157894737,0.9789473684210526,0.010526315789473667
0.049242830276489256,0.011613212609261209,0.006203699111938477,0.007449400323689631,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),10,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 10, 'scl': NonScaler()}",0.9473684210526315,0.8157894736842105,0.8157894736842105,0.8947368421052632,0.9210526315789473,0.8789473684210527,0.054187527057826305,41,0.9671052631578947,0.9736842105263158,0.9736842105263158,0.9802631578947368,0.9736842105263158,0.9736842105263157,0.004160891658116302
0.05715899467468262,0.018187391462076725,0.002603292465209961,0.00022582727910575406,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),15,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 15, 'scl': NonScaler()}",0.9473684210526315,0.8157894736842105,0.8157894736842105,0.8947368421052632,0.9210526315789473,0.8789473684210527,0.054187527057826305,41,0.9802631578947368,0.9802631578947368,0.9736842105263158,0.9736842105263158,0.9802631578947368,0.9776315789473685,0.003223012819451533
0.06607532501220703,0.013063336728115667,0.010371541976928711,0.006324453521135469,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),20,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 20, 'scl': NonScaler()}",0.9473684210526315,0.8157894736842105,0.8157894736842105,0.8421052631578947,0.9210526315789473,0.868421052631579,0.05520046569316586,62,0.9868421052631579,0.9868421052631579,0.993421052631579,0.993421052631579,0.993421052631579,0.9907894736842104,0.0032230128194515872
0.08264503479003907,0.014045614502852855,0.00577850341796875,0.004103377179180766,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),25,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 25, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8421052631578947,0.9210526315789473,0.8631578947368421,0.06092545738310643,68,0.993421052631579,0.993421052631579,0.993421052631579,0.993421052631579,0.993421052631579,0.993421052631579,0.0
0.09320764541625977,0.016106541879423023,0.00380401611328125,0.00016884152669992256,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),30,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 30, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8421052631578947,0.9210526315789473,0.8631578947368421,0.06092545738310643,68,0.993421052631579,0.993421052631579,0.993421052631579,0.993421052631579,0.9868421052631579,0.9921052631578947,0.002631578947368452
0.07980756759643555,0.019000452167451002,0.009375715255737304,0.004782618272221042,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),35,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 35, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8421052631578947,0.9210526315789473,0.8631578947368421,0.06092545738310643,68,0.993421052631579,0.993421052631579,0.993421052631579,0.993421052631579,0.9868421052631579,0.9921052631578947,0.002631578947368452
0.12898354530334472,0.01168008428158457,0.017103052139282225,0.004716789686996759,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),40,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 40, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8578947368421053,0.06359497880839247,77,1.0,1.0,1.0,1.0,0.993421052631579,0.9986842105263157,0.002631578947368407
0.12282390594482422,0.01398990475775204,0.017249107360839844,0.006502003170088703,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),45,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 45, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8578947368421053,0.06359497880839247,77,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.1438039779663086,0.005932625826181296,0.009696578979492188,0.00500498366826699,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),50,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 50, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8421052631578947,0.9210526315789473,0.8631578947368421,0.06092545738310643,68,0.993421052631579,0.993421052631579,0.993421052631579,0.993421052631579,0.9868421052631579,0.9921052631578947,0.002631578947368452
0.09583559036254882,0.011757497099527689,0.0011444091796875,3.6100383592670774e-05,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.001,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.001, 'scl': NonScaler()}",0.9473684210526315,0.868421052631579,0.8421052631578947,0.868421052631579,0.9473684210526315,0.8947368421052632,0.04403473823863553,6,0.8947368421052632,0.9210526315789473,0.9276315789473685,0.9276315789473685,0.9013157894736842,0.9144736842105263,0.013800116423291488
0.10410704612731933,0.013689751624229753,0.0048888206481933595,0.004530869781180921,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.01,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.01, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8157894736842105,0.868421052631579,0.9473684210526315,0.8947368421052632,0.049930699897395445,6,0.9078947368421053,0.9144736842105263,0.9407894736842105,0.9210526315789473,0.9144736842105263,0.9197368421052632,0.011318849035582385
0.0998694896697998,0.01119589596779222,0.0032969951629638673,0.0035183083069881107,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.1,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.1, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9473684210526315,0.8631578947368421,0.06942582083301534,68,0.993421052631579,1.0,1.0,1.0,0.993421052631579,0.9973684210526315,0.003223012819451533
0.10392041206359863,0.004585039219264793,0.0014658927917480468,0.000602435612765165,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.2,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.2, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8578947368421053,0.06359497880839247,77,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.0994255542755127,0.006976127306728916,0.0022608757019042967,0.0015262920997386083,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.5,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.5, 'scl': NonScaler()}",0.9473684210526315,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8578947368421053,0.06359497880839247,77,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.1396111011505127,0.016497233059018162,0.015926694869995116,0.004180524694363236,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.001,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.001, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8157894736842105,0.8421052631578947,0.9473684210526315,0.8894736842105264,0.05367388961676615,22,0.8881578947368421,0.9013157894736842,0.9144736842105263,0.9144736842105263,0.8881578947368421,0.9013157894736843,0.011768778828946249
0.14096331596374512,0.00848627190928296,0.012212610244750977,0.004430050750340907,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.01,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.01, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8157894736842105,0.8421052631578947,0.9473684210526315,0.8894736842105264,0.05367388961676615,22,0.8881578947368421,0.9013157894736842,0.9144736842105263,0.9144736842105263,0.8881578947368421,0.9013157894736843,0.011768778828946249
0.1478363037109375,0.004192172128283168,0.012358665466308594,0.004454586207723899,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.1,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.1, 'scl': NonScaler()}",0.8947368421052632,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.03938586722919939,28,0.8947368421052632,0.9144736842105263,0.9276315789473685,0.9144736842105263,0.9013157894736842,0.9105263157894736,0.011470786693528108
0.13762884140014647,0.0069447453862320945,0.020741891860961915,0.009110896006462721,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.2,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.2, 'scl': NonScaler()}",0.9210526315789473,0.8947368421052632,0.8157894736842105,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.048808518397345804,28,0.9013157894736842,0.9276315789473685,0.9407894736842105,0.9210526315789473,0.9144736842105263,0.9210526315789475,0.013157894736842113
0.15170955657958984,0.015305107497738757,0.016576480865478516,0.007689401570813399,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.5,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.5, 'scl': NonScaler()}",0.868421052631579,0.8947368421052632,0.7894736842105263,0.868421052631579,0.9210526315789473,0.8684210526315788,0.044034738238635546,66,0.9078947368421053,0.9276315789473685,0.9342105263157895,0.9276315789473685,0.9144736842105263,0.9223684210526317,0.00966903845835465
1.2311135292053224,0.01077396506288308,0.06612701416015625,0.004739990414489856,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",4,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 4, 'scl': NonScaler()}",0.868421052631579,0.8947368421052632,0.8157894736842105,0.8421052631578947,0.9473684210526315,0.8736842105263157,0.04527539614232961,46,0.8947368421052632,0.9276315789473685,0.9407894736842105,0.9144736842105263,0.9144736842105263,0.9184210526315789,0.015344610249592897
1.2256110668182374,0.011872634214741974,0.0706697940826416,0.011674224341619412,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",8,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 8, 'scl': NonScaler()}",0.868421052631579,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8421052631578949,0.047075115315785045,94,0.9802631578947368,1.0,1.0,1.0,1.0,0.9960526315789473,0.007894736842105267
1.225431489944458,0.01496511988744677,0.07378215789794922,0.002327146378493779,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",16,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 16, 'scl': NonScaler()}",0.868421052631579,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8421052631578949,0.047075115315785045,94,1.0,1.0,1.0,1.0,1.0,1.0,0.0
1.208361768722534,0.0195240039625223,0.07413725852966309,0.003530995394677759,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",32,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 32, 'scl': NonScaler()}",0.868421052631579,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8421052631578949,0.047075115315785045,94,1.0,1.0,1.0,1.0,1.0,1.0,0.0
1.2309023857116699,0.04723089619468588,0.08052935600280761,0.007237714716975978,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",64,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 64, 'scl': NonScaler()}",0.868421052631579,0.7894736842105263,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8421052631578949,0.047075115315785045,94,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.042689847946166995,0.01075589369098178,0.004088926315307617,0.003915489153997642,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",4,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 4, 'scl': NonScaler()}",0.8421052631578947,0.868421052631579,0.8157894736842105,0.8947368421052632,0.9210526315789473,0.868421052631579,0.03721614637823935,62,0.868421052631579,0.868421052631579,0.881578947368421,0.8552631578947368,0.8552631578947368,0.8657894736842104,0.009846466807299841
0.039567184448242185,0.009401115365207368,0.0018135547637939454,9.473322753956113e-05,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",8,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 8, 'scl': NonScaler()}",0.9210526315789473,0.8947368421052632,0.8421052631578947,0.868421052631579,0.9210526315789473,0.8894736842105264,0.030689220499185793,22,0.9078947368421053,0.9078947368421053,0.9078947368421053,0.9210526315789473,0.9013157894736842,0.9092105263157896,0.006446025638903093
0.03450789451599121,0.006991460299202286,0.0018564224243164062,5.851330145569224e-05,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",16,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 16, 'scl': NonScaler()}",0.8947368421052632,0.7368421052631579,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8368421052631578,0.06531407182100452,98,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.0325963020324707,0.006699837956229262,0.003841209411621094,0.004004908906164109,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",32,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 32, 'scl': NonScaler()}",0.9210526315789473,0.7368421052631579,0.8157894736842105,0.8157894736842105,0.9473684210526315,0.8473684210526317,0.07699336230698839,91,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.034707260131835935,0.006555324040230644,0.005879592895507812,0.005069871385967746,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",64,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 64, 'scl': NonScaler()}",0.9210526315789473,0.7368421052631579,0.8157894736842105,0.8157894736842105,0.9473684210526315,0.8473684210526317,0.07699336230698839,91,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.04087319374084473,0.004590363012224029,0.0012099742889404297,0.00015678729160713902,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.9473684210526315,0.868421052631579,0.8157894736842105,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.054187527057826305,28,0.9144736842105263,0.9342105263157895,0.9473684210526315,0.9144736842105263,0.9210526315789473,0.9263157894736842,0.012757052256358743
0.03503761291503906,0.0022426915776953852,0.005224752426147461,0.007934866207364295,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8947368421052632,0.047075115315785045,6,0.8881578947368421,0.9078947368421053,0.9210526315789473,0.9144736842105263,0.8947368421052632,0.9052631578947368,0.012202129599336437
0.037924575805664065,0.005975352164132011,0.005059719085693359,0.008187067937423664,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8947368421052632,0.047075115315785045,6,0.8881578947368421,0.9078947368421053,0.9210526315789473,0.9144736842105263,0.8947368421052632,0.9052631578947368,0.012202129599336437
0.06889710426330567,0.007790360156764647,0.0029880523681640623,0.0037034432258984205,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.9473684210526315,0.868421052631579,0.8157894736842105,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.054187527057826305,28,0.9144736842105263,0.9342105263157895,0.9473684210526315,0.9144736842105263,0.9078947368421053,0.9236842105263158,0.014769700210949742
0.04496159553527832,0.014236718001317842,0.004643821716308593,0.007118321770239516,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8947368421052632,0.047075115315785045,6,0.8881578947368421,0.9078947368421053,0.9210526315789473,0.9144736842105263,0.8947368421052632,0.9052631578947368,0.012202129599336437
0.04670462608337402,0.008160896999620079,0.0010235309600830078,8.31355705290041e-05,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8947368421052632,0.047075115315785045,6,0.8881578947368421,0.9078947368421053,0.9210526315789473,0.9144736842105263,0.8947368421052632,0.9052631578947368,0.012202129599336437
0.04656209945678711,0.009308561476332786,0.0013461589813232421,0.000279599452001456,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.9473684210526315,0.868421052631579,0.8157894736842105,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.054187527057826305,28,0.9144736842105263,0.9342105263157895,0.9473684210526315,0.9144736842105263,0.9078947368421053,0.9236842105263158,0.014769700210949742
0.039151906967163086,0.00841496532774299,0.002402925491333008,0.0027148192284003714,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8947368421052632,0.047075115315785045,6,0.8881578947368421,0.9078947368421053,0.9210526315789473,0.9144736842105263,0.8947368421052632,0.9052631578947368,0.012202129599336437
0.036356878280639646,0.007796620998192302,0.0010054588317871093,3.0713421532912196e-05,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8947368421052632,0.047075115315785045,6,0.8881578947368421,0.9078947368421053,0.9210526315789473,0.9144736842105263,0.8947368421052632,0.9052631578947368,0.012202129599336437
0.03629484176635742,0.015295734283694544,0.0031407833099365234,0.003998322724352301,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.9473684210526315,0.868421052631579,0.8157894736842105,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.054187527057826305,28,0.9144736842105263,0.9342105263157895,0.9473684210526315,0.9144736842105263,0.9078947368421053,0.9236842105263158,0.014769700210949742
0.03273119926452637,0.005958881415140433,0.0030480384826660155,0.0040459165519842995,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8947368421052632,0.047075115315785045,6,0.8881578947368421,0.9078947368421053,0.9210526315789473,0.9144736842105263,0.8947368421052632,0.9052631578947368,0.012202129599336437
0.04206438064575195,0.010055735430010999,0.001183938980102539,0.00021005931929328234,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8947368421052632,0.047075115315785045,6,0.8881578947368421,0.9078947368421053,0.9210526315789473,0.9144736842105263,0.8947368421052632,0.9052631578947368,0.012202129599336437
0.047002649307250975,0.008527308278256375,0.006175470352172851,0.00616575909057027,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.9473684210526315,0.868421052631579,0.8157894736842105,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.054187527057826305,28,0.9144736842105263,0.9342105263157895,0.9473684210526315,0.9144736842105263,0.9078947368421053,0.9236842105263158,0.014769700210949742
0.04067397117614746,0.007247447098499092,0.004253005981445313,0.006442051605477864,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8947368421052632,0.047075115315785045,6,0.8881578947368421,0.9078947368421053,0.9210526315789473,0.9144736842105263,0.8947368421052632,0.9052631578947368,0.012202129599336437
0.03018922805786133,0.010422702417007193,0.0019168376922607422,0.0018632111446278278,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8947368421052632,0.047075115315785045,6,0.8881578947368421,0.9078947368421053,0.9210526315789473,0.9144736842105263,0.8947368421052632,0.9052631578947368,0.012202129599336437
0.052473592758178714,0.02148519558238623,0.006425380706787109,0.006275261804839603,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",32,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 32, 'scl': NonScaler()}",0.868421052631579,0.868421052631579,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8736842105263157,0.038676153833418596,46,0.8881578947368421,0.9144736842105263,0.9276315789473685,0.9144736842105263,0.8947368421052632,0.9078947368421053,0.01441375151329385
0.04928421974182129,0.008330561725681371,0.0052206993103027345,0.004238341718948567,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",38,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 38, 'scl': NonScaler()}",0.868421052631579,0.868421052631579,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8736842105263157,0.038676153833418596,46,0.8881578947368421,0.9144736842105263,0.9276315789473685,0.9144736842105263,0.8947368421052632,0.9078947368421053,0.01441375151329385
0.03124103546142578,0.006189586996944506,0.006816196441650391,0.004020976075365319,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",45,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 45, 'scl': NonScaler()}",0.868421052631579,0.868421052631579,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8736842105263157,0.038676153833418596,46,0.8881578947368421,0.9144736842105263,0.9276315789473685,0.9144736842105263,0.8947368421052632,0.9078947368421053,0.01441375151329385
0.04165682792663574,0.0107048516865103,0.008245086669921875,0.007104822351603271,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",53,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 53, 'scl': NonScaler()}",0.868421052631579,0.868421052631579,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8736842105263157,0.038676153833418596,46,0.8881578947368421,0.9144736842105263,0.9276315789473685,0.9144736842105263,0.8947368421052632,0.9078947368421053,0.01441375151329385
0.039344406127929686,0.008722849450039068,0.011601448059082031,0.007725494634061649,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",64,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 64, 'scl': NonScaler()}",0.868421052631579,0.868421052631579,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8736842105263157,0.038676153833418596,46,0.8881578947368421,0.9144736842105263,0.9276315789473685,0.9144736842105263,0.8947368421052632,0.9078947368421053,0.01441375151329385
0.020106744766235352,0.009289363125565853,0.0044438838958740234,0.0034613988502202745,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': NonScaler()}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.868421052631579,0.9473684210526315,0.9,0.04210526315789472,1,0.8881578947368421,0.9013157894736842,0.9078947368421053,0.9078947368421053,0.8881578947368421,0.898684210526316,0.008924118398849035
0.09564638137817383,0.020893861728184398,0.004768753051757812,0.0033855960519549827,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.5,0.6842105263157895,0.7631578947368421,0.8421052631578947,0.7052631578947368,0.11458705819514337,180,0.75,0.5,0.7631578947368421,0.743421052631579,0.7236842105263158,0.6960526315789475,0.09885073668943659
0.09017210006713867,0.020618289556590105,0.002840089797973633,0.0001358541951529562,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.868421052631579,0.9473684210526315,0.9,0.04210526315789472,1,0.8881578947368421,0.9013157894736842,0.9078947368421053,0.8881578947368421,0.8881578947368421,0.8947368421052632,0.008321783316232567
0.09194793701171874,0.01381680886316052,0.0038092613220214845,0.0007320526429147863,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': MaxAbsScaler(copy=True)}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.868421052631579,0.9473684210526315,0.9,0.04210526315789472,1,0.8881578947368421,0.9013157894736842,0.9078947368421053,0.8881578947368421,0.8881578947368421,0.8947368421052632,0.008321783316232567
0.08483490943908692,0.009448646449857373,0.004481792449951172,0.002520807711895812,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.868421052631579,0.9473684210526315,0.9,0.04210526315789472,1,0.8881578947368421,0.9013157894736842,0.9078947368421053,0.8881578947368421,0.8881578947368421,0.8947368421052632,0.008321783316232567
0.08098015785217286,0.015645137824405728,0.0027609825134277343,0.00016545635124039714,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.868421052631579,0.8947368421052632,0.8421052631578947,0.868421052631579,0.9210526315789473,0.8789473684210527,0.026836944808383077,41,0.881578947368421,0.875,0.881578947368421,0.881578947368421,0.868421052631579,0.8776315789473683,0.005263157894736814
0.09685173034667968,0.010248166595146022,0.00300445556640625,8.911480533497902e-05,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8947368421052632,0.047075115315785045,6,0.8881578947368421,0.9013157894736842,0.9078947368421053,0.9078947368421053,0.8881578947368421,0.898684210526316,0.008924118398849035
0.08732976913452148,0.011908922185197056,0.004685068130493164,0.0005566272861768428,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.868421052631579,0.8947368421052632,0.8421052631578947,0.868421052631579,0.8947368421052632,0.8736842105263157,0.019692933614599704,46,0.875,0.8881578947368421,0.8947368421052632,0.8947368421052632,0.8618421052631579,0.8828947368421053,0.01275705225635878
0.07753338813781738,0.014365557337178385,0.003146934509277344,0.0004674676284569091,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.868421052631579,0.8947368421052632,0.8421052631578947,0.868421052631579,0.8947368421052632,0.8736842105263157,0.019692933614599704,46,0.875,0.8881578947368421,0.8947368421052632,0.8947368421052632,0.875,0.8855263157894736,0.008924118398849042
0.08994636535644532,0.011384962271317812,0.0031251430511474608,0.0004444042602118877,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': Normalizer(copy=True, norm='l2')}",0.7631578947368421,0.5,0.7105263157894737,0.7631578947368421,0.5263157894736842,0.6526315789473685,0.11578947368421054,195,0.7631578947368421,0.5131578947368421,0.7763157894736842,0.7697368421052632,0.5131578947368421,0.6671052631578948,0.12576634889840546
0.10259580612182617,0.00921540726503019,0.002754497528076172,0.00011246620602777178,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9473684210526315,0.8947368421052632,0.8421052631578947,0.868421052631579,0.9473684210526315,0.9,0.04210526315789472,1,0.8881578947368421,0.9013157894736842,0.9078947368421053,0.9078947368421053,0.8881578947368421,0.898684210526316,0.008924118398849035
0.01997714042663574,0.005559209464788231,0.0028453350067138674,0.0003227566415595811,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': NonScaler()}",0.9210526315789473,0.868421052631579,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.04275809686650505,28,0.875,0.8881578947368421,0.9078947368421053,0.8947368421052632,0.881578947368421,0.8894736842105264,0.011318849035582423
0.016600990295410158,0.006661651668908076,0.005004692077636719,0.003953007096887086,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.7105263157894737,0.6842105263157895,0.7631578947368421,0.8421052631578947,0.7473684210526315,0.054187527057826305,155,0.75,0.756578947368421,0.7631578947368421,0.743421052631579,0.7236842105263158,0.7473684210526317,0.013546881764456573
0.017803192138671875,0.010070628056119663,0.005306673049926758,0.004664188337086166,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.9210526315789473,0.868421052631579,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.04275809686650505,28,0.875,0.8881578947368421,0.8947368421052632,0.875,0.868421052631579,0.8802631578947369,0.00966903845835465
0.021527957916259766,0.005755121949641855,0.002824831008911133,0.00018663198043993815,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': MaxAbsScaler(copy=True)}",0.9210526315789473,0.868421052631579,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.04275809686650505,28,0.875,0.8881578947368421,0.8947368421052632,0.875,0.868421052631579,0.8802631578947369,0.00966903845835465
0.019148540496826173,0.00530059276741332,0.007517290115356445,0.0038793611399859946,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9210526315789473,0.868421052631579,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.04275809686650505,28,0.875,0.8881578947368421,0.8947368421052632,0.875,0.868421052631579,0.8802631578947369,0.00966903845835465
0.028192806243896484,0.005571858074686306,0.0038565635681152345,0.0013566786571599227,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.8421052631578947,0.7894736842105263,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8526315789473685,0.051568205111224785,88,0.875,0.8552631578947368,0.8881578947368421,0.875,0.8618421052631579,0.8710526315789473,0.011470786693528108
0.02192716598510742,0.009155403710471596,0.003544187545776367,0.000473606288650522,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9210526315789473,0.868421052631579,0.8421052631578947,0.8157894736842105,0.9473684210526315,0.8789473684210527,0.048808518397345804,41,0.875,0.8881578947368421,0.9078947368421053,0.8947368421052632,0.868421052631579,0.8868421052631579,0.014048787173725416
0.015891265869140626,0.008502286526107208,0.006591653823852539,0.004131003081254011,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8421052631578947,0.868421052631579,0.8157894736842105,0.868421052631579,0.9210526315789473,0.8631578947368421,0.034911839898477896,68,0.8618421052631579,0.868421052631579,0.881578947368421,0.8881578947368421,0.8618421052631579,0.8723684210526315,0.010689524216626283
0.02546582221984863,0.0056471784072748025,0.0030218124389648437,0.00011611377427436205,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.8421052631578947,0.868421052631579,0.8157894736842105,0.868421052631579,0.9210526315789473,0.8631578947368421,0.034911839898477896,68,0.8618421052631579,0.868421052631579,0.8881578947368421,0.8947368421052632,0.8618421052631579,0.875,0.013800116423291488
0.03450474739074707,0.009325842747840023,0.003110790252685547,0.0001977407877339879,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': Normalizer(copy=True, norm='l2')}",0.7631578947368421,0.5,0.7105263157894737,0.7368421052631579,0.868421052631579,0.7157894736842104,0.12047919097115366,177,0.756578947368421,0.506578947368421,0.7697368421052632,0.7631578947368421,0.7302631578947368,0.7052631578947368,0.10024208923547848
0.028244400024414064,0.003480675789302491,0.0027862548828125,9.331870089730797e-05,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9210526315789473,0.868421052631579,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8842105263157896,0.04275809686650505,28,0.875,0.8881578947368421,0.9078947368421053,0.8947368421052632,0.881578947368421,0.8894736842105264,0.011318849035582423
0.022292423248291015,0.008064324982213572,0.0026719093322753905,0.00022424128113835034,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': NonScaler()}",0.9210526315789473,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8894736842105264,0.042105263157894736,22,0.875,0.8947368421052632,0.8947368421052632,0.8947368421052632,0.875,0.8868421052631579,0.009669038458354654
0.019286680221557616,0.0041641057208864135,0.002955770492553711,0.000313888489687178,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.7105263157894737,0.6842105263157895,0.7631578947368421,0.8421052631578947,0.7473684210526315,0.054187527057826305,155,0.75,0.756578947368421,0.7631578947368421,0.743421052631579,0.7236842105263158,0.7473684210526317,0.013546881764456573
0.014513540267944335,0.003603416101006214,0.002902984619140625,0.0001318019653741124,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.9210526315789473,0.8947368421052632,0.8421052631578947,0.868421052631579,0.9473684210526315,0.8947368421052632,0.037216146378239334,6,0.875,0.8947368421052632,0.8947368421052632,0.8881578947368421,0.875,0.8855263157894736,0.008924118398849042
0.024022436141967772,0.011614581811657948,0.0029207706451416016,0.0003231144287781751,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': MaxAbsScaler(copy=True)}",0.9210526315789473,0.8947368421052632,0.8421052631578947,0.868421052631579,0.9473684210526315,0.8947368421052632,0.037216146378239334,6,0.875,0.8947368421052632,0.8947368421052632,0.8881578947368421,0.875,0.8855263157894736,0.008924118398849042
0.022579145431518555,0.00626851967436441,0.0028448581695556642,7.37609287702867e-05,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9210526315789473,0.8947368421052632,0.8421052631578947,0.868421052631579,0.9473684210526315,0.8947368421052632,0.037216146378239334,6,0.868421052631579,0.8947368421052632,0.8947368421052632,0.8881578947368421,0.875,0.8842105263157893,0.01068952421662626
0.00835719108581543,0.0036561551919565387,0.006552791595458985,0.006893888876367991,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.868421052631579,0.8157894736842105,0.8421052631578947,0.868421052631579,0.8947368421052632,0.8578947368421052,0.026836944808383095,84,0.881578947368421,0.875,0.8881578947368421,0.881578947368421,0.8552631578947368,0.8763157894736843,0.011318849035582407
0.020411109924316405,0.0032269530654646657,0.004818964004516602,0.0026369485515922,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9210526315789473,0.8947368421052632,0.8421052631578947,0.8157894736842105,0.9473684210526315,0.8842105263157896,0.048808518397345804,28,0.875,0.9013157894736842,0.8947368421052632,0.9013157894736842,0.881578947368421,0.8907894736842105,0.01068952421662626
0.010755538940429688,0.0039549141726105555,0.006246328353881836,0.004226570303221011,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.868421052631579,0.8947368421052632,0.8157894736842105,0.868421052631579,0.9210526315789473,0.8736842105263157,0.03491183989847789,46,0.875,0.875,0.8947368421052632,0.868421052631579,0.8618421052631579,0.875,0.011008684559658897
0.019640207290649414,0.009574379295850333,0.0033135414123535156,0.0005414098001757693,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.868421052631579,0.8947368421052632,0.8157894736842105,0.868421052631579,0.9210526315789473,0.8736842105263157,0.03491183989847789,46,0.875,0.875,0.8947368421052632,0.868421052631579,0.8618421052631579,0.875,0.011008684559658897
0.014821767807006836,0.004882186627416235,0.0029932975769042967,0.00015205920540582211,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': Normalizer(copy=True, norm='l2')}",0.7631578947368421,0.5,0.7105263157894737,0.7368421052631579,0.868421052631579,0.7157894736842104,0.12047919097115366,177,0.756578947368421,0.506578947368421,0.7697368421052632,0.7631578947368421,0.7368421052631579,0.7065789473684211,0.10060413080850147
0.022187471389770508,0.00667784460359803,0.004353141784667969,0.001632047823646607,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9210526315789473,0.8947368421052632,0.8421052631578947,0.8421052631578947,0.9473684210526315,0.8894736842105264,0.042105263157894736,22,0.875,0.8947368421052632,0.8947368421052632,0.8947368421052632,0.875,0.8868421052631579,0.009669038458354654
0.027946996688842773,0.0042959779977543005,0.0033526897430419924,0.0010721932033587406,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': NonScaler()}",0.9473684210526315,0.8157894736842105,0.8421052631578947,0.868421052631579,0.8947368421052632,0.8736842105263157,0.04527539614232961,46,0.8881578947368421,0.881578947368421,0.9144736842105263,0.9078947368421053,0.868421052631579,0.8921052631578947,0.016952761482533066
0.025661325454711913,0.004066426592201867,0.005914735794067383,0.005284509989764293,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.7105263157894737,0.6842105263157895,0.7631578947368421,0.8421052631578947,0.7473684210526315,0.054187527057826305,155,0.75,0.756578947368421,0.7631578947368421,0.743421052631579,0.7236842105263158,0.7473684210526317,0.013546881764456573
0.01954641342163086,0.0050759524201178605,0.0029815196990966796,0.0004098683354580306,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.9473684210526315,0.8157894736842105,0.8421052631578947,0.868421052631579,0.8947368421052632,0.8736842105263157,0.04527539614232961,46,0.8881578947368421,0.881578947368421,0.9144736842105263,0.8881578947368421,0.868421052631579,0.8881578947368421,0.015002308224988655
0.01181015968322754,0.006255030413870424,0.0038466453552246094,0.0018272311739519738,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': MaxAbsScaler(copy=True)}",0.9473684210526315,0.8157894736842105,0.8421052631578947,0.868421052631579,0.8947368421052632,0.8736842105263157,0.04527539614232961,46,0.8881578947368421,0.881578947368421,0.9144736842105263,0.8881578947368421,0.868421052631579,0.8881578947368421,0.015002308224988655
0.02445807456970215,0.010200355711494793,0.006819581985473633,0.007843960864341375,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9473684210526315,0.8157894736842105,0.8421052631578947,0.868421052631579,0.8947368421052632,0.8736842105263157,0.04527539614232961,46,0.8881578947368421,0.881578947368421,0.9144736842105263,0.8881578947368421,0.868421052631579,0.8881578947368421,0.015002308224988655
0.017926692962646484,0.010007674680563084,0.0029523372650146484,0.00022099357498045146,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.868421052631579,0.8157894736842105,0.8421052631578947,0.868421052631579,0.8947368421052632,0.8578947368421052,0.026836944808383095,84,0.8881578947368421,0.875,0.868421052631579,0.8881578947368421,0.8552631578947368,0.875,0.01248267497434888
0.022955799102783205,0.009088758449138869,0.005461978912353516,0.004758364866840271,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9473684210526315,0.8157894736842105,0.8421052631578947,0.8421052631578947,0.8947368421052632,0.868421052631579,0.047075115315785045,62,0.8881578947368421,0.881578947368421,0.9144736842105263,0.9078947368421053,0.868421052631579,0.8921052631578947,0.016952761482533066
0.009942770004272461,0.0056147670482546855,0.007303857803344726,0.005309575325816817,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8421052631578947,0.868421052631579,0.8421052631578947,0.8421052631578947,0.9210526315789473,0.8631578947368421,0.030689220499185807,68,0.8618421052631579,0.875,0.881578947368421,0.868421052631579,0.868421052631579,0.8710526315789473,0.006709236202095765
0.02099323272705078,0.012481869846043936,0.004574108123779297,0.0027195639397544586,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.8421052631578947,0.868421052631579,0.8421052631578947,0.8157894736842105,0.9210526315789473,0.8578947368421052,0.035696473595396155,84,0.868421052631579,0.875,0.881578947368421,0.868421052631579,0.868421052631579,0.8723684210526315,0.005263157894736814
0.022824430465698244,0.007999429360531319,0.003257560729980469,0.000869303178119105,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': Normalizer(copy=True, norm='l2')}",0.7631578947368421,0.7105263157894737,0.7105263157894737,0.7368421052631579,0.868421052631579,0.7578947368421053,0.05860804592452657,138,0.756578947368421,0.7697368421052632,0.756578947368421,0.75,0.7302631578947368,0.7526315789473684,0.0128920512778062
0.025280857086181642,0.013598255247916307,0.002800464630126953,0.00011784188900170488,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.9473684210526315,0.8157894736842105,0.8421052631578947,0.868421052631579,0.8947368421052632,0.8736842105263157,0.04527539614232961,46,0.8881578947368421,0.881578947368421,0.9144736842105263,0.9078947368421053,0.868421052631579,0.8921052631578947,0.016952761482533066
0.018372011184692384,0.0075143784781581315,0.0010115146636962891,0.00011952982723742715,"GaussianNB(priors=None, var_smoothing=1e-09)",,NonScaler(),,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': NonScaler()}",0.7368421052631579,0.6052631578947368,0.6052631578947368,0.7368421052631579,0.7105263157894737,0.6789473684210525,0.06092545738310644,186,0.756578947368421,0.6578947368421053,0.6578947368421053,0.7302631578947368,0.631578947368421,0.6868421052631579,0.04791353014745557
0.018036317825317384,0.004976923097886094,0.0011204719543457032,4.6644229339053095e-05,"GaussianNB(priors=None, var_smoothing=1e-09)",,"Binarizer(copy=True, threshold=0)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.631578947368421,0.6578947368421053,0.7105263157894737,0.868421052631579,0.7210526315789473,0.08254940600714802,175,0.75,0.743421052631579,0.7368421052631579,0.7236842105263158,0.6842105263157895,0.7276315789473684,0.023389985308725228
0.021385860443115235,0.001996408522887745,0.002471590042114258,0.0026300741481620695,"GaussianNB(priors=None, var_smoothing=1e-09)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.7368421052631579,0.6052631578947368,0.6052631578947368,0.7368421052631579,0.7105263157894737,0.6789473684210525,0.06092545738310644,186,0.756578947368421,0.6578947368421053,0.6578947368421053,0.7302631578947368,0.631578947368421,0.6868421052631579,0.04791353014745557
0.008944559097290038,0.003997035072852314,0.0011281967163085938,1.3410064873372247e-05,"GaussianNB(priors=None, var_smoothing=1e-09)",,MaxAbsScaler(copy=True),,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': MaxAbsScaler(copy=True)}",0.7368421052631579,0.6052631578947368,0.6052631578947368,0.7368421052631579,0.7105263157894737,0.6789473684210525,0.06092545738310644,186,0.756578947368421,0.6578947368421053,0.6578947368421053,0.7302631578947368,0.631578947368421,0.6868421052631579,0.04791353014745557
0.016234445571899413,0.0053050254895100814,0.0014989852905273437,0.00031309326791726484,"GaussianNB(priors=None, var_smoothing=1e-09)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.7368421052631579,0.6052631578947368,0.6052631578947368,0.7368421052631579,0.7105263157894737,0.6789473684210525,0.06092545738310644,186,0.756578947368421,0.6578947368421053,0.6578947368421053,0.7302631578947368,0.631578947368421,0.6868421052631579,0.04791353014745557
0.014621496200561523,0.0010952900636071463,0.0026875972747802735,0.0027625205449303093,"GaussianNB(priors=None, var_smoothing=1e-09)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.7368421052631579,0.6052631578947368,0.6052631578947368,0.7368421052631579,0.7105263157894737,0.6789473684210525,0.06092545738310644,186,0.756578947368421,0.6578947368421053,0.6578947368421053,0.7302631578947368,0.631578947368421,0.6868421052631579,0.04791353014745557
0.01903533935546875,0.008722791131908048,0.0026961803436279298,0.0029164088963942823,"GaussianNB(priors=None, var_smoothing=1e-09)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.7368421052631579,0.7631578947368421,0.8157894736842105,0.8421052631578947,0.868421052631579,0.8052631578947368,0.04880851839734581,109,0.75,0.8421052631578947,0.868421052631579,0.868421052631579,0.7302631578947368,0.8118421052631579,0.059662021309234925
0.009193611145019532,0.005024187471730933,0.004528951644897461,0.0025249222889042974,"GaussianNB(priors=None, var_smoothing=1e-09)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7368421052631579,0.7105263157894737,0.6842105263157895,0.7894736842105263,0.8421052631578947,0.7526315789473683,0.05668594533825792,154,0.756578947368421,0.7631578947368421,0.7697368421052632,0.7368421052631579,0.7302631578947368,0.7513157894736843,0.015231364345776627
0.01923527717590332,0.006428044863116241,0.0014792442321777343,0.0003037839532529963,"GaussianNB(priors=None, var_smoothing=1e-09)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7894736842105263,0.7631578947368421,0.7631578947368421,0.8157894736842105,0.9210526315789473,0.8105263157894737,0.05860804592452652,107,0.8157894736842105,0.8289473684210527,0.8223684210526315,0.8355263157894737,0.8092105263157895,0.8223684210526315,0.009304036594559834
0.015630483627319336,0.006871821975054076,0.001193094253540039,7.460016379156295e-05,"GaussianNB(priors=None, var_smoothing=1e-09)",,"Normalizer(copy=True, norm='l2')",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': Normalizer(copy=True, norm='l2')}",0.7368421052631579,0.7105263157894737,0.7105263157894737,0.7631578947368421,0.868421052631579,0.7578947368421053,0.058608045924526564,138,0.756578947368421,0.7828947368421053,0.7828947368421053,0.7697368421052632,0.743421052631579,0.7671052631578948,0.01534461024959291
0.02729477882385254,0.0037344877035310675,0.001234722137451172,0.00013097479886490384,"GaussianNB(priors=None, var_smoothing=1e-09)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.7368421052631579,0.6052631578947368,0.6052631578947368,0.7368421052631579,0.7105263157894737,0.6789473684210525,0.06092545738310644,186,0.756578947368421,0.6578947368421053,0.6578947368421053,0.7302631578947368,0.631578947368421,0.6868421052631579,0.04791353014745557
0.01873307228088379,0.009603560107281138,0.0029518604278564453,0.004222488122232359,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': NonScaler()}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.01251392364501953,0.0034398868250791396,0.0011450767517089844,0.0002620030527305916,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': Binarizer(copy=True, threshold=0)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.019683408737182616,0.004951764445200652,0.0013170719146728515,0.00010482833027916843,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.01775469779968262,0.005348118145404381,0.0010291099548339843,5.297950527260051e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': MaxAbsScaler(copy=True)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.017861652374267577,0.007138570721401968,0.0011374950408935547,0.0001480703379403156,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.025070714950561523,0.009707726070542252,0.0011678218841552734,0.00015914517127433108,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.014506053924560548,0.003755019951374555,0.0013546466827392579,0.00017264846615326444,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.017695045471191405,0.009309019323773343,0.00560455322265625,0.004549871775528088,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.017779541015625,0.0019483227232038284,0.0013798236846923827,0.0002359522377916087,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.014521312713623048,0.008630106226551068,0.002015829086303711,0.0011918406601128036,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': Normalizer(copy=True, norm='l2')}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.028862714767456055,0.011745065974717138,0.003918075561523437,0.005702829992308518,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.021090984344482422,0.007289214082309319,0.0009906291961669922,0.00020312115587596826,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': NonScaler()}",0.7894736842105263,0.7631578947368421,0.8157894736842105,0.6052631578947368,0.8157894736842105,0.7578947368421053,0.07877173445839876,138,0.7894736842105263,0.8026315789473685,0.8092105263157895,0.6381578947368421,0.7828947368421053,0.7644736842105263,0.06383952353004317
0.021694755554199217,0.007712043692397576,0.00101776123046875,6.230884259695938e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.7105263157894737,0.6842105263157895,0.7631578947368421,0.8421052631578947,0.7473684210526315,0.054187527057826305,155,0.75,0.756578947368421,0.7631578947368421,0.743421052631579,0.7236842105263158,0.7473684210526317,0.013546881764456573
0.021225881576538087,0.009830879598653799,0.0012024879455566407,0.00023985035139476734,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.6842105263157895,0.7894736842105263,0.7894736842105263,0.8947368421052632,0.7894736842105263,0.7894736842105263,0.0665742665298606,114,0.756578947368421,0.75,0.7631578947368421,0.8421052631578947,0.7368421052631579,0.7697368421052632,0.037216146378239334
0.007501649856567383,0.0004089342068803241,0.0010128498077392578,3.404810977417596e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': MaxAbsScaler(copy=True)}",0.6842105263157895,0.7894736842105263,0.7894736842105263,0.8947368421052632,0.7894736842105263,0.7894736842105263,0.0665742665298606,114,0.756578947368421,0.75,0.7631578947368421,0.8421052631578947,0.7368421052631579,0.7697368421052632,0.037216146378239334
0.014738941192626953,0.007127866290296669,0.0024004459381103517,0.002604300274365298,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.7894736842105263,0.7631578947368421,0.7894736842105263,0.8947368421052632,0.8157894736842105,0.8105263157894737,0.04527539614232961,107,0.7828947368421053,0.7960526315789473,0.8026315789473685,0.8421052631578947,0.7763157894736842,0.8,0.023016915374389327
0.009829139709472657,0.0008336375575247348,0.0010520458221435548,2.7270166580443936e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.7368421052631579,0.7105263157894737,0.6842105263157895,0.8947368421052632,0.8421052631578947,0.7736842105263158,0.08085416576703797,125,0.75,0.756578947368421,0.7631578947368421,0.8552631578947368,0.7236842105263158,0.7697368421052632,0.044814174647174736
0.024336576461791992,0.008560586320635012,0.0011913299560546875,4.511554901339163e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.8421052631578947,0.7631578947368421,0.7631578947368421,0.7894736842105263,0.868421052631579,0.8052631578947368,0.04275809686650504,109,0.8157894736842105,0.8355263157894737,0.7828947368421053,0.8618421052631579,0.8618421052631579,0.8315789473684211,0.02988899129368562
0.025644636154174803,0.01305572635362265,0.007862997055053712,0.006340006613168294,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8421052631578947,0.8421052631578947,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8473684210526315,0.038676153833418596,93,0.8486842105263158,0.8552631578947368,0.8618421052631579,0.881578947368421,0.8355263157894737,0.8565789473684211,0.015231364345776599
0.015897798538208007,0.005454798068388025,0.0024044990539550783,0.002178795202000483,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.8421052631578947,0.868421052631579,0.8157894736842105,0.8157894736842105,0.9210526315789473,0.8526315789473685,0.03938586722919939,88,0.8486842105263158,0.8618421052631579,0.8618421052631579,0.868421052631579,0.8421052631578947,0.8565789473684211,0.00966903845835466
0.018118810653686524,0.008703623772664322,0.002589893341064453,0.0029489852215794916,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': Normalizer(copy=True, norm='l2')}",0.7631578947368421,0.7105263157894737,0.7105263157894737,0.7631578947368421,0.868421052631579,0.7631578947368421,0.057655006053175396,132,0.7631578947368421,0.7763157894736842,0.7763157894736842,0.7631578947368421,0.7368421052631579,0.7631578947368421,0.01441375151329385
0.02189979553222656,0.010427404811077762,0.0010815143585205078,5.298740146539681e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.7105263157894737,0.7894736842105263,0.7894736842105263,0.6052631578947368,0.7631578947368421,0.7315789473684211,0.06942582083301536,165,0.7697368421052632,0.75,0.7828947368421053,0.631578947368421,0.7171052631578947,0.7302631578947368,0.054091591555511784
0.02583465576171875,0.012056330125575698,0.0024303913116455076,0.002962709328051119,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': NonScaler()}",0.7105263157894737,0.7631578947368421,0.7894736842105263,0.7631578947368421,0.8157894736842105,0.768421052631579,0.03491183989847789,128,0.7697368421052632,0.7894736842105263,0.7894736842105263,0.7894736842105263,0.756578947368421,0.7789473684210527,0.013546881764456595
0.01854982376098633,0.005201020814157858,0.0010549068450927735,5.387090876876568e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.7105263157894737,0.6842105263157895,0.7631578947368421,0.8421052631578947,0.7473684210526315,0.054187527057826305,155,0.75,0.756578947368421,0.7631578947368421,0.743421052631579,0.7236842105263158,0.7473684210526317,0.013546881764456573
0.01815481185913086,0.0030989651218489723,0.0031400203704833986,0.003967437937206395,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.7894736842105263,0.7631578947368421,0.8157894736842105,0.8947368421052632,0.8157894736842105,0.8157894736842106,0.044034738238635546,103,0.7828947368421053,0.8026315789473685,0.8092105263157895,0.8421052631578947,0.7828947368421053,0.8039473684210527,0.021780191259535293
0.022647523880004884,0.00643258256235878,0.001127767562866211,0.00010219727223476474,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': MaxAbsScaler(copy=True)}",0.7894736842105263,0.7631578947368421,0.8157894736842105,0.8947368421052632,0.8157894736842105,0.8157894736842106,0.044034738238635546,103,0.7828947368421053,0.8026315789473685,0.8092105263157895,0.8421052631578947,0.7828947368421053,0.8039473684210527,0.021780191259535293
0.022113943099975587,0.0075476832942275,0.0010832786560058595,0.00010467575955217433,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.7894736842105263,0.7631578947368421,0.8157894736842105,0.8947368421052632,0.8157894736842105,0.8157894736842106,0.044034738238635546,103,0.7894736842105263,0.8026315789473685,0.8092105263157895,0.8421052631578947,0.7828947368421053,0.8052631578947368,0.020637351501786975
0.02096395492553711,0.00426187399221178,0.0010629653930664062,0.00010858667852957597,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.7368421052631579,0.7105263157894737,0.6842105263157895,0.8947368421052632,0.8421052631578947,0.7736842105263158,0.08085416576703797,125,0.75,0.756578947368421,0.7631578947368421,0.8486842105263158,0.7236842105263158,0.768421052631579,0.04231035576529876
0.01577725410461426,0.003956596599292226,0.0011965274810791016,7.890345358157149e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.8421052631578947,0.7894736842105263,0.8157894736842105,0.8421052631578947,0.8421052631578947,0.8263157894736842,0.021052631578947344,100,0.8223684210526315,0.8486842105263158,0.868421052631579,0.8355263157894737,0.8289473684210527,0.8407894736842106,0.016328517955251153
0.019463443756103517,0.004843981106445884,0.0027750492095947265,0.00045137458287830096,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8421052631578947,0.868421052631579,0.8157894736842105,0.868421052631579,0.9210526315789473,0.8631578947368421,0.034911839898477896,68,0.8486842105263158,0.8618421052631579,0.868421052631579,0.8947368421052632,0.8486842105263158,0.8644736842105264,0.016952761482533055
0.022554731369018553,0.0023832160388943062,0.0027632713317871094,0.0031899345384598134,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.868421052631579,0.8947368421052632,0.8421052631578947,0.868421052631579,0.9210526315789473,0.8789473684210527,0.026836944808383077,41,0.875,0.8881578947368421,0.875,0.9013157894736842,0.868421052631579,0.881578947368421,0.011768778828946249
0.02377176284790039,0.008081231249418893,0.0010921478271484375,4.704268636747322e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': Normalizer(copy=True, norm='l2')}",0.7631578947368421,0.7105263157894737,0.7105263157894737,0.7631578947368421,0.868421052631579,0.7631578947368421,0.057655006053175396,132,0.7631578947368421,0.7763157894736842,0.7763157894736842,0.7631578947368421,0.743421052631579,0.7644736842105264,0.012059409723567975
0.029253292083740234,0.006995962904318461,0.0013364791870117188,0.00026313314021713324,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.7368421052631579,0.7631578947368421,0.7894736842105263,0.7631578947368421,0.8157894736842105,0.7736842105263159,0.026836944808383077,123,0.7763157894736842,0.7894736842105263,0.7894736842105263,0.7894736842105263,0.7763157894736842,0.7842105263157896,0.006446025638903121
0.019881391525268556,0.005504415705172432,0.0012734889984130859,0.0008169314221605539,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': NonScaler()}",0.7631578947368421,0.6842105263157895,0.7105263157894737,0.7368421052631579,0.868421052631579,0.7526315789473685,0.0635949788083925,149,0.75,0.7697368421052632,0.7631578947368421,0.743421052631579,0.7236842105263158,0.75,0.016115064097257745
0.015558528900146484,0.008226512893547405,0.0011680126190185547,0.0002233118065226249,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.7105263157894737,0.6842105263157895,0.7631578947368421,0.8421052631578947,0.7473684210526315,0.054187527057826305,155,0.75,0.756578947368421,0.7631578947368421,0.743421052631579,0.7236842105263158,0.7473684210526317,0.013546881764456573
0.013443851470947265,0.003526714876341947,0.004190492630004883,0.0038411943433573925,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.7105263157894737,0.6578947368421053,0.6578947368421053,0.7631578947368421,0.868421052631579,0.7315789473684211,0.07877173445839877,165,0.743421052631579,0.756578947368421,0.75,0.7631578947368421,0.6973684210526315,0.7421052631578947,0.023315848877196538
0.013121414184570312,0.004946086879673845,0.0011800289154052734,0.0003187286930456004,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': MaxAbsScaler(copy=True)}",0.7105263157894737,0.6578947368421053,0.6578947368421053,0.7631578947368421,0.868421052631579,0.7315789473684211,0.07877173445839877,165,0.743421052631579,0.756578947368421,0.75,0.7631578947368421,0.6973684210526315,0.7421052631578947,0.023315848877196538
0.014787960052490234,0.002608407075002921,0.0017396926879882813,0.001442352713598318,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.6578947368421053,0.7631578947368421,0.7631578947368421,0.8947368421052632,0.7894736842105263,0.7736842105263158,0.07554052681267011,125,0.756578947368421,0.743421052631579,0.756578947368421,0.8421052631578947,0.7302631578947368,0.7657894736842106,0.039385867229199366
0.019116687774658202,0.005225451020449241,0.0011280536651611327,0.00014221076481379341,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.7368421052631579,0.7105263157894737,0.7105263157894737,0.7631578947368421,0.8421052631578947,0.7526315789473684,0.048808518397345804,151,0.75,0.7631578947368421,0.7631578947368421,0.75,0.7236842105263158,0.75,0.01441375151329385
0.011057329177856446,0.003929925104267836,0.0024693489074707033,0.002225712430637508,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.7368421052631579,0.631578947368421,0.6842105263157895,0.7105263157894737,0.868421052631579,0.726315789473684,0.07912261251775217,173,0.7236842105263158,0.75,0.7368421052631579,0.7236842105263158,0.6907894736842105,0.7250000000000001,0.019692933614599693
0.021121644973754884,0.007928026108022025,0.00460968017578125,0.0032273100529468662,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7368421052631579,0.7105263157894737,0.7105263157894737,0.7631578947368421,0.8421052631578947,0.7526315789473684,0.048808518397345804,151,0.756578947368421,0.7631578947368421,0.7631578947368421,0.75,0.7302631578947368,0.7526315789473684,0.012202129599336467
0.01845660209655762,0.006760963208937378,0.001309680938720703,0.0001692130679252507,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7368421052631579,0.7105263157894737,0.7105263157894737,0.7631578947368421,0.8421052631578947,0.7526315789473684,0.048808518397345804,151,0.756578947368421,0.7631578947368421,0.7631578947368421,0.75,0.7302631578947368,0.7526315789473684,0.012202129599336467
0.01778697967529297,0.00752808231448778,0.0046217918395996095,0.0038678770591823734,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': Normalizer(copy=True, norm='l2')}",0.7631578947368421,0.7105263157894737,0.7105263157894737,0.7368421052631579,0.868421052631579,0.7578947368421053,0.05860804592452657,138,0.756578947368421,0.7697368421052632,0.7697368421052632,0.7631578947368421,0.7302631578947368,0.7578947368421052,0.014652011481131644
0.025907230377197266,0.013394381047968855,0.0020691394805908204,0.0012766325232849316,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.7631578947368421,0.6842105263157895,0.7105263157894737,0.7631578947368421,0.868421052631579,0.7578947368421053,0.06315789473684212,138,0.75,0.7697368421052632,0.7631578947368421,0.7368421052631579,0.7236842105263158,0.7486842105263158,0.016850326940612767
0.022155046463012695,0.0074190888354608055,0.0011356830596923827,0.0004118032507908824,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': NonScaler()}",0.7368421052631579,0.7631578947368421,0.7894736842105263,0.7105263157894737,0.8157894736842105,0.7631578947368421,0.037216146378239355,132,0.7828947368421053,0.7894736842105263,0.7894736842105263,0.75,0.7763157894736842,0.7776315789473685,0.014652011481131646
0.023966646194458006,0.010430027461975454,0.0011518001556396484,0.00010792406154249299,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.7105263157894737,0.6842105263157895,0.7631578947368421,0.8421052631578947,0.7473684210526315,0.054187527057826305,155,0.75,0.756578947368421,0.7631578947368421,0.743421052631579,0.7236842105263158,0.7473684210526317,0.013546881764456573
0.016657495498657228,0.0088161613180664,0.001215982437133789,0.00010904343161105922,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.6842105263157895,0.7894736842105263,0.7894736842105263,0.8947368421052632,0.7894736842105263,0.7894736842105263,0.0665742665298606,114,0.7631578947368421,0.75,0.756578947368421,0.8421052631578947,0.7368421052631579,0.769736842105263,0.037216146378239334
0.02477893829345703,0.00740745036989417,0.0011929988861083985,0.00012895015147679608,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': MaxAbsScaler(copy=True)}",0.6842105263157895,0.7894736842105263,0.7894736842105263,0.8947368421052632,0.7894736842105263,0.7894736842105263,0.0665742665298606,114,0.7631578947368421,0.75,0.756578947368421,0.8421052631578947,0.7368421052631579,0.769736842105263,0.037216146378239334
0.02852020263671875,0.007229867571542432,0.003085041046142578,0.004062112009435208,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.6842105263157895,0.7631578947368421,0.7894736842105263,0.8947368421052632,0.7894736842105263,0.7842105263157896,0.06740130776245104,118,0.7697368421052632,0.7894736842105263,0.7828947368421053,0.8486842105263158,0.7368421052631579,0.7855263157894737,0.03641671711341594
0.02590031623840332,0.008152495516296933,0.0014197826385498047,0.00044603896795274313,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.7368421052631579,0.7105263157894737,0.7105263157894737,0.8947368421052632,0.8421052631578947,0.7789473684210526,0.07554052681267014,122,0.75,0.7697368421052632,0.7631578947368421,0.8486842105263158,0.7302631578947368,0.7723684210526316,0.040469885524288686
0.015089797973632812,0.008875965185453678,0.0013344287872314453,0.00028799910399750174,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.8421052631578947,0.7894736842105263,0.8157894736842105,0.8421052631578947,0.8421052631578947,0.8263157894736842,0.021052631578947344,100,0.8223684210526315,0.8552631578947368,0.868421052631579,0.8355263157894737,0.8289473684210527,0.8421052631578949,0.017155795803164883
0.026094818115234376,0.0047513497318057065,0.0027680397033691406,0.0004487480776125772,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8157894736842105,0.7368421052631579,0.7894736842105263,0.868421052631579,0.9210526315789473,0.8263157894736842,0.06359497880839249,100,0.8157894736842105,0.8289473684210527,0.8355263157894737,0.9013157894736842,0.8223684210526315,0.8407894736842106,0.03097000604194689
0.02058258056640625,0.00518650081949057,0.0013358116149902344,0.0002372748311300356,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.8421052631578947,0.868421052631579,0.8421052631578947,0.868421052631579,0.9210526315789473,0.8684210526315788,0.0288275030265877,66,0.8618421052631579,0.875,0.875,0.8947368421052632,0.8618421052631579,0.8736842105263157,0.012059409723568018
0.015191888809204102,0.011170182948009453,0.0035953521728515625,0.004958068947744769,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': Normalizer(copy=True, norm='l2')}",0.7631578947368421,0.7105263157894737,0.7105263157894737,0.7631578947368421,0.868421052631579,0.7631578947368421,0.057655006053175396,132,0.7631578947368421,0.7763157894736842,0.7763157894736842,0.7631578947368421,0.7368421052631579,0.7631578947368421,0.01441375151329385
0.021710205078125,0.002292447007226286,0.002135038375854492,0.0020074302559561297,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.7105263157894737,0.7631578947368421,0.7894736842105263,0.7105263157894737,0.8157894736842105,0.7578947368421053,0.042105263157894736,138,0.7697368421052632,0.7894736842105263,0.7894736842105263,0.75,0.7631578947368421,0.7723684210526316,0.015344610249592897
0.03307332992553711,0.006615189650070469,0.0013147830963134766,0.0007916008490375586,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': NonScaler()}",0.5263157894736842,0.5,0.5263157894736842,0.5263157894736842,0.5,0.5157894736842105,0.012892051277806186,215,0.5197368421052632,0.506578947368421,0.5526315789473685,0.5,0.506578947368421,0.5171052631578947,0.01888513170316756
0.021031713485717772,0.011030019165720955,0.001085948944091797,5.364437103237576e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.631578947368421,0.5,0.7105263157894737,0.5,0.6157894736842104,0.10069013931425784,200,0.75,0.743421052631579,0.5,0.7236842105263158,0.5,0.6434210526315789,0.1174226921964374
0.01865229606628418,0.004656233111971322,0.0031281471252441405,0.003989938822295028,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5789473684210527,0.7631578947368421,0.631578947368421,0.5,0.5789473684210527,0.6105263157894737,0.08712076503814131,201,0.5394736842105263,0.7171052631578947,0.631578947368421,0.5723684210526315,0.5394736842105263,0.6,0.06752961800187546
0.027622222900390625,0.006642446133735344,0.0012511253356933595,0.00019744758673798012,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': MaxAbsScaler(copy=True)}",0.5789473684210527,0.7631578947368421,0.631578947368421,0.5,0.5789473684210527,0.6105263157894737,0.08712076503814131,201,0.5394736842105263,0.7171052631578947,0.631578947368421,0.5723684210526315,0.5394736842105263,0.6,0.06752961800187546
0.02667374610900879,0.009482652055313715,0.0031225204467773436,0.004136247687231083,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.7368421052631579,0.5789473684210527,0.6052631578947368,0.5,0.8947368421052632,0.6631578947368422,0.13865199865599465,193,0.7631578947368421,0.6513157894736842,0.6447368421052632,0.5,0.8552631578947368,0.6828947368421052,0.12004731292586361
0.021750879287719727,0.007231291311647998,0.001665210723876953,0.001172923830449344,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.5263157894736842,0.34210526315789475,0.47368421052631576,0.47368421052631576,0.7631578947368421,0.5157894736842106,0.13785053530219785,214,0.5131578947368421,0.32894736842105265,0.4276315789473684,0.5,0.7039473684210527,0.4947368421052632,0.12338990741579135
0.024268293380737306,0.0056138958494510414,0.0032919883728027345,0.004088424806461125,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9473684210526315,0.7631578947368421,0.7894736842105263,0.7368421052631579,0.7894736842105263,0.8052631578947368,0.07368421052631578,109,0.8881578947368421,0.7960526315789473,0.7894736842105263,0.756578947368421,0.75,0.7960526315789475,0.04940785093557525
0.02593507766723633,0.003386503753774499,0.0035079479217529296,0.0021823407402016036,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6052631578947368,0.7105263157894737,0.6842105263157895,0.5263157894736842,0.868421052631579,0.6789473684210525,0.1145870581951434,186,0.5460526315789473,0.8421052631578947,0.75,0.618421052631579,0.7039473684210527,0.6921052631578948,0.10271588979617757
0.027927446365356445,0.014029848480090623,0.0011784553527832032,3.87441268175667e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7368421052631579,0.631578947368421,0.7894736842105263,0.7368421052631579,0.5,0.6789473684210526,0.1031364102224496,185,0.7171052631578947,0.743421052631579,0.8486842105263158,0.7697368421052632,0.5,0.7157894736842105,0.11653468329202385
0.026791763305664063,0.003169995562070408,0.0012724876403808593,0.0003504327955862814,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': Normalizer(copy=True, norm='l2')}",0.5,0.7105263157894737,0.7105263157894737,0.5,0.5,0.5842105263157895,0.1031364102224496,203,0.5,0.7697368421052632,0.7697368421052632,0.5,0.5,0.6078947368421053,0.13214352559751358
0.028711986541748048,0.005394145526472394,0.004141807556152344,0.005317595429244333,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.6052631578947368,0.5263157894736842,0.5,0.5263157894736842,0.6578947368421053,0.5631578947368421,0.0590788008437991,207,0.5789473684210527,0.5131578947368421,0.506578947368421,0.5,0.5855263157894737,0.5368421052631579,0.03735544622783787
0.02143545150756836,0.00675742465718792,0.0009819984436035157,0.00011282106222938626,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': NonScaler()}",0.5,0.5,0.5,0.7894736842105263,0.5263157894736842,0.5631578947368421,0.11361596392064685,207,0.506578947368421,0.506578947368421,0.506578947368421,0.7894736842105263,0.5197368421052632,0.5657894736842105,0.11195814413780343
0.012102270126342773,0.0083880275324787,0.003652667999267578,0.0050153147438709925,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.631578947368421,0.6842105263157895,0.5,0.868421052631579,0.6842105263157894,0.12116699403390883,184,0.7171052631578947,0.743421052631579,0.7631578947368421,0.5,0.6842105263157895,0.6815789473684211,0.09457222540034953
0.018127250671386718,0.005469691795775598,0.0010594367980957032,6.762462145653811e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.8157894736842105,0.5,0.8157894736842105,0.8421052631578947,0.8157894736842105,0.7578947368421053,0.12934953397310006,138,0.7894736842105263,0.506578947368421,0.8289473684210527,0.8223684210526315,0.7763157894736842,0.7447368421052631,0.12069455047861713
0.01619377136230469,0.005809956494105656,0.0010785102844238282,0.00010053064069223614,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': MaxAbsScaler(copy=True)}",0.8157894736842105,0.5,0.8157894736842105,0.8421052631578947,0.8157894736842105,0.7578947368421053,0.12934953397310006,138,0.7894736842105263,0.506578947368421,0.8289473684210527,0.8223684210526315,0.7763157894736842,0.7447368421052631,0.12069455047861713
0.027933216094970702,0.01418579412673092,0.002393627166748047,0.002440733013981943,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.8421052631578947,0.5,0.7368421052631579,0.6578947368421053,0.7631578947368421,0.7,0.11602846150025578,182,0.8223684210526315,0.5986842105263158,0.6513157894736842,0.7236842105263158,0.7039473684210527,0.7,0.0750807506194058
0.02721853256225586,0.01108383630602985,0.0011188983917236328,0.0001695037051606702,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.7368421052631579,0.7631578947368421,0.6842105263157895,0.7631578947368421,0.868421052631579,0.7631578947368421,0.06000923289995464,132,0.7631578947368421,0.7763157894736842,0.7631578947368421,0.75,0.8421052631578947,0.7789473684210526,0.03265703591050223
0.016568326950073244,0.0035012107145458017,0.001647615432739258,0.0008435265313020681,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.026211261749267578,0.00572447503702609,0.0023847579956054687,6.5046531092525e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7631578947368421,0.7105263157894737,0.7894736842105263,0.7631578947368421,0.8421052631578947,0.7736842105263159,0.04275809686650504,123,0.7697368421052632,0.7697368421052632,0.8092105263157895,0.7828947368421053,0.8355263157894737,0.7934210526315789,0.025514104512717514
0.028109216690063478,0.01584542429228846,0.0012354850769042969,0.0001526316937516682,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.868421052631579,0.8157894736842105,0.8157894736842105,0.868421052631579,0.9210526315789473,0.8578947368421052,0.03938586722919939,84,0.881578947368421,0.875,0.881578947368421,0.8552631578947368,0.881578947368421,0.875,0.010192061437387927
0.018108701705932616,0.004351268295041305,0.001096963882446289,6.644396864459193e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': Normalizer(copy=True, norm='l2')}",0.7894736842105263,0.7105263157894737,0.7105263157894737,0.7631578947368421,0.868421052631579,0.7684210526315789,0.058608045924526564,129,0.7631578947368421,0.7763157894736842,0.7763157894736842,0.7697368421052632,0.7368421052631579,0.7644736842105264,0.014652011481131643
0.02555994987487793,0.0027222985345379384,0.001134347915649414,0.0001654256895176423,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.5,0.5,0.7894736842105263,0.5263157894736842,0.5631578947368421,0.11361596392064685,207,0.506578947368421,0.506578947368421,0.506578947368421,0.7960526315789473,0.5197368421052632,0.5671052631578948,0.11458705819514338
0.019918012619018554,0.006583054446461016,0.0011508464813232422,0.0004566180028794452,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': NonScaler()}",0.5,0.5,0.5,0.5,0.5263157894736842,0.5052631578947369,0.010526315789473672,216,0.506578947368421,0.506578947368421,0.506578947368421,0.5789473684210527,0.5,0.5197368421052632,0.029714709975358477
0.015988492965698244,0.007288898718179142,0.0011037826538085938,0.0002013174971131059,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.631578947368421,0.6578947368421053,0.7631578947368421,0.868421052631579,0.7315789473684211,0.08388093395004857,165,0.7171052631578947,0.743421052631579,0.7368421052631579,0.743421052631579,0.6842105263157895,0.725,0.022561089736160854
0.017662191390991212,0.0058489266109806965,0.0011235713958740235,5.539004959960078e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5,0.5,0.5,0.7105263157894737,0.6842105263157895,0.5789473684210525,0.09704783639255671,205,0.506578947368421,0.506578947368421,0.506578947368421,0.75,0.6644736842105263,0.5868421052631578,0.10195458225163431
0.016424179077148438,0.005336247386415464,0.004654788970947265,0.004121757250305569,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': MaxAbsScaler(copy=True)}",0.5,0.5,0.5,0.7105263157894737,0.6842105263157895,0.5789473684210525,0.09704783639255671,205,0.506578947368421,0.506578947368421,0.506578947368421,0.75,0.6644736842105263,0.5868421052631578,0.10195458225163431
0.01911454200744629,0.004746811467611988,0.00261993408203125,0.002118423650048231,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.7105263157894737,0.7631578947368421,0.8157894736842105,0.6578947368421053,0.7368421052631579,0.736842105263158,0.05263157894736841,163,0.7763157894736842,0.7960526315789473,0.868421052631579,0.7302631578947368,0.6907894736842105,0.7723684210526316,0.06038312581886194
0.0188997745513916,0.005574472156405757,0.002454519271850586,0.002782420739197981,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.7368421052631579,0.7368421052631579,0.7894736842105263,0.7894736842105263,0.868421052631579,0.7842105263157894,0.04823763889427203,120,0.7631578947368421,0.6973684210526315,0.8289473684210527,0.7828947368421053,0.8421052631578947,0.7828947368421053,0.05163530755354891
0.01783747673034668,0.004290782823974112,0.0012517929077148437,5.7634327158132966e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.018228626251220702,0.006096658111357932,0.002501392364501953,0.00019152795888539647,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7631578947368421,0.868421052631579,0.7105263157894737,0.7105263157894737,0.6578947368421053,0.7421052631578947,0.0713929471907923,162,0.756578947368421,0.881578947368421,0.7763157894736842,0.7697368421052632,0.6513157894736842,0.7671052631578947,0.07309444427542709
0.021807336807250978,0.0028539783079734055,0.0012001991271972656,7.145162574472754e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.868421052631579,0.8157894736842105,0.8421052631578947,0.8947368421052632,0.9210526315789473,0.868421052631579,0.03721614637823935,62,0.8486842105263158,0.868421052631579,0.8486842105263158,0.8486842105263158,0.868421052631579,0.8565789473684211,0.009669038458354654
0.022752094268798827,0.005448050292122299,0.0012182235717773438,0.00015889889822216986,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': Normalizer(copy=True, norm='l2')}",0.7894736842105263,0.7105263157894737,0.7105263157894737,0.7631578947368421,0.868421052631579,0.7684210526315789,0.058608045924526564,129,0.7631578947368421,0.7697368421052632,0.7828947368421053,0.7631578947368421,0.7368421052631579,0.7631578947368421,0.015002308224988685
0.021521377563476562,0.003660907282329629,0.001108694076538086,0.0001081824033385104,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.5,0.5,0.5,0.5263157894736842,0.5052631578947369,0.010526315789473672,216,0.506578947368421,0.506578947368421,0.506578947368421,0.5789473684210527,0.5,0.5197368421052632,0.029714709975358477
0.011049318313598632,0.0036347353933498033,0.0010399818420410156,0.0001583840300199504,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': NonScaler()}",0.5,0.5,0.5,0.6052631578947368,0.5,0.5210526315789473,0.042105263157894736,213,0.506578947368421,0.506578947368421,0.506578947368421,0.6447368421052632,0.506578947368421,0.5342105263157894,0.055263157894736854
0.021738433837890626,0.0074889284587902364,0.0010692119598388673,8.584825018191748e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.631578947368421,0.6578947368421053,0.7105263157894737,0.868421052631579,0.7210526315789473,0.08254940600714802,175,0.7171052631578947,0.743421052631579,0.7368421052631579,0.7236842105263158,0.6842105263157895,0.7210526315789474,0.020637351501787
0.019022750854492187,0.004668458526584637,0.0010325908660888672,5.273676692705936e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5,0.5,0.5,0.7631578947368421,0.5,0.5526315789473684,0.10526315789473686,210,0.506578947368421,0.506578947368421,0.506578947368421,0.7631578947368421,0.506578947368421,0.5578947368421053,0.10263157894736845
0.017987728118896484,0.00619683733342699,0.0013526439666748046,0.00049576953567619,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': MaxAbsScaler(copy=True)}",0.631578947368421,0.7631578947368421,0.5,0.8421052631578947,0.5,0.6473684210526316,0.13785053530219785,198,0.631578947368421,0.8486842105263158,0.506578947368421,0.8092105263157895,0.506578947368421,0.6605263157894736,0.14542896715419054
0.016765928268432616,0.004989496989649055,0.0023093223571777344,0.0025454111377498233,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.7105263157894737,0.7631578947368421,0.8157894736842105,0.8947368421052632,0.6052631578947368,0.7578947368421053,0.09761703679469162,138,0.7631578947368421,0.7171052631578947,0.8881578947368421,0.8618421052631579,0.5526315789473685,0.756578947368421,0.11965728994094375
0.01796860694885254,0.005226798814654428,0.0014057636260986328,0.0005475952209034692,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.7368421052631579,0.8157894736842105,0.7894736842105263,0.47368421052631576,0.8421052631578947,0.7315789473684211,0.13356397410999496,165,0.7631578947368421,0.8618421052631579,0.8618421052631579,0.5131578947368421,0.8223684210526315,0.7644736842105263,0.13074737223462804
0.014077377319335938,0.00949527501854929,0.0024201393127441405,0.002349150169413607,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.020821475982666017,0.009321256857348763,0.0036103248596191405,0.0021692756637696343,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8421052631578947,0.7105263157894737,0.7894736842105263,0.7631578947368421,0.6842105263157895,0.7578947368421052,0.05619514869490162,148,0.7960526315789473,0.7171052631578947,0.8092105263157895,0.7763157894736842,0.5986842105263158,0.7394736842105263,0.07712816257764654
0.010922670364379883,0.005035705329139952,0.0021924972534179688,0.0020120244325969585,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.8421052631578947,0.6842105263157895,0.7894736842105263,0.7894736842105263,0.8157894736842105,0.7842105263157896,0.05367388961676614,118,0.8618421052631579,0.75,0.881578947368421,0.881578947368421,0.7697368421052632,0.8289473684210525,0.05720280294548461
0.020241785049438476,0.007886705277410165,0.0011412620544433594,0.0001286962554212967,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': Normalizer(copy=True, norm='l2')}",0.7631578947368421,0.7105263157894737,0.7105263157894737,0.7631578947368421,0.868421052631579,0.7631578947368421,0.057655006053175396,132,0.7631578947368421,0.7697368421052632,0.7763157894736842,0.7631578947368421,0.7368421052631579,0.7618421052631579,0.01341847240419155
0.017138195037841798,0.00775468408065438,0.0010775089263916015,0.0001164922643928305,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.631578947368421,0.5,0.5263157894736842,0.5,0.531578947368421,0.05102820902543503,212,0.506578947368421,0.5460526315789473,0.506578947368421,0.5,0.506578947368421,0.5131578947368421,0.01664356663246515
0.03162164688110351,0.006866353101105547,0.0009652614593505859,7.4841350286852e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': NonScaler()}",0.5,0.7631578947368421,0.5263157894736842,0.47368421052631576,0.9473684210526315,0.6421052631578947,0.1842856989474905,199,0.506578947368421,0.75,0.5657894736842105,0.5263157894736842,0.8289473684210527,0.6355263157894736,0.12956351184306497
0.019750213623046874,0.006820087760288552,0.0010539054870605468,3.27113765998372e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.631578947368421,0.6842105263157895,0.7631578947368421,0.5,0.6631578947368421,0.09326339550878607,194,0.75,0.743421052631579,0.7631578947368421,0.743421052631579,0.5,0.7,0.10025935895551968
0.018361854553222656,0.006588436902684061,0.0034510135650634766,0.003054884644595981,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.631578947368421,0.6578947368421053,0.5,0.47368421052631576,0.5,0.5526315789473684,0.07627040392731285,210,0.6776315789473685,0.5657894736842105,0.506578947368421,0.5131578947368421,0.506578947368421,0.5539473684210525,0.06571047889044093
0.01826004981994629,0.004827310971709391,0.0010768413543701173,8.983105849726227e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': MaxAbsScaler(copy=True)}",0.631578947368421,0.5,0.7105263157894737,0.7368421052631579,0.9210526315789473,0.7,0.13785053530219785,182,0.6710526315789473,0.506578947368421,0.6513157894736842,0.7171052631578947,0.881578947368421,0.6855263157894737,0.12069455047861713
0.016806983947753908,0.005593029469753497,0.0010773658752441407,0.000149599814114344,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.631578947368421,0.7631578947368421,0.8157894736842105,0.7368421052631579,0.8157894736842105,0.7526315789473685,0.06781104593013225,149,0.6578947368421053,0.7960526315789473,0.8355263157894737,0.7368421052631579,0.756578947368421,0.756578947368421,0.059864806137249066
0.01246333122253418,0.009541095686929279,0.001051044464111328,0.0001290863096777429,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.7368421052631579,0.8157894736842105,0.8157894736842105,0.7631578947368421,0.8421052631578947,0.7947368421052631,0.038676153833418596,113,0.756578947368421,0.8552631578947368,0.868421052631579,0.743421052631579,0.7236842105263158,0.7894736842105263,0.060153312898223475
0.017417287826538085,0.005723291656069328,0.0011989116668701173,5.7975751284719447e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.8157894736842105,0.868421052631579,0.7894736842105263,0.868421052631579,0.5,0.7684210526315789,0.13764944032233709,129,0.7894736842105263,0.8881578947368421,0.8157894736842105,0.868421052631579,0.5,0.7723684210526317,0.14070951984520896
0.02378873825073242,0.00916262913964364,0.002559947967529297,0.00024187215973625603,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6842105263157895,0.631578947368421,0.631578947368421,0.8157894736842105,0.9210526315789473,0.7368421052631579,0.11410254415094105,164,0.6052631578947368,0.6907894736842105,0.6381578947368421,0.8355263157894737,0.8881578947368421,0.731578947368421,0.11105762024215365
0.021971845626831056,0.008609027229295756,0.001285552978515625,0.00015337346927581056,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.868421052631579,0.8421052631578947,0.7631578947368421,0.7105263157894737,0.7894736842105263,0.7947368421052632,0.05619514869490164,112,0.8486842105263158,0.875,0.75,0.7236842105263158,0.7236842105263158,0.7842105263157896,0.0646479920870434
0.022198581695556642,0.008079844085966941,0.0011042118072509765,4.521603166912634e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': Normalizer(copy=True, norm='l2')}",0.7631578947368421,0.7105263157894737,0.7105263157894737,0.5,0.868421052631579,0.7105263157894737,0.12001846579990927,179,0.7631578947368421,0.7697368421052632,0.7763157894736842,0.5,0.7368421052631579,0.7092105263157895,0.10546034162902042
0.015321731567382812,0.003996229934457894,0.0010598182678222656,5.431662931976427e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.5,0.5263157894736842,0.8947368421052632,0.5,0.5842105263157895,0.1555973210430998,203,0.506578947368421,0.506578947368421,0.5592105263157895,0.8618421052631579,0.506578947368421,0.5881578947368421,0.13835199397994646
0.024063587188720703,0.007738213888723678,0.0009058952331542969,7.84452343652319e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': NonScaler()}",0.5,0.5,0.8421052631578947,0.868421052631579,0.9473684210526315,0.731578947368421,0.19223139334473338,172,0.506578947368421,0.506578947368421,0.881578947368421,0.868421052631579,0.8026315789473685,0.7131578947368421,0.17077913357718494
0.014695453643798827,0.00896658332236003,0.0011243820190429688,9.024891198729067e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.631578947368421,0.6578947368421053,0.7631578947368421,0.868421052631579,0.7315789473684211,0.08388093395004857,165,0.7171052631578947,0.743421052631579,0.7368421052631579,0.743421052631579,0.6842105263157895,0.725,0.022561089736160854
0.01467442512512207,0.007866884984557496,0.001060628890991211,9.679625185536634e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5,0.5263157894736842,0.8157894736842105,0.47368421052631576,0.9473684210526315,0.6526315789473685,0.1922313933447334,195,0.506578947368421,0.506578947368421,0.8947368421052632,0.5394736842105263,0.8223684210526315,0.6539473684210526,0.16904694556866204
0.014670133590698242,0.006244595194668622,0.0010972976684570312,0.00010348910994313887,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': MaxAbsScaler(copy=True)}",0.5,0.5263157894736842,0.8157894736842105,0.47368421052631576,0.9473684210526315,0.6526315789473685,0.1922313933447334,195,0.506578947368421,0.506578947368421,0.8947368421052632,0.5394736842105263,0.8223684210526315,0.6539473684210526,0.16904694556866204
0.018026065826416016,0.0033563975507649563,0.001186037063598633,0.0002973422701395653,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9210526315789473,0.7368421052631579,0.8157894736842105,0.6842105263157895,0.9210526315789473,0.8157894736842106,0.09561001118202604,103,0.881578947368421,0.6907894736842105,0.875,0.6842105263157895,0.868421052631579,0.8,0.09197359009105945
0.02230691909790039,0.004981065608917987,0.0009874343872070313,1.9324910529378678e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.7368421052631579,0.7631578947368421,0.7368421052631579,0.8421052631578947,0.5789473684210527,0.7315789473684211,0.08551619373301009,165,0.756578947368421,0.743421052631579,0.75,0.868421052631579,0.5131578947368421,0.7263157894736841,0.116103044307662
0.01610846519470215,0.004974377279618078,0.002289104461669922,0.0019995425682368456,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.8947368421052632,0.868421052631579,0.8421052631578947,0.868421052631579,0.8947368421052632,0.8736842105263157,0.019692933614599704,46,0.8486842105263158,0.875,0.8881578947368421,0.868421052631579,0.868421052631579,0.8697368421052631,0.01275705225635876
0.01890702247619629,0.00632623103198083,0.0032281398773193358,0.0011862945819607928,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7105263157894737,0.7368421052631579,0.7894736842105263,0.8157894736842105,0.868421052631579,0.7842105263157894,0.05619514869490166,120,0.7039473684210527,0.7171052631578947,0.8289473684210527,0.8289473684210527,0.743421052631579,0.7644736842105264,0.05415556744014916
0.016917037963867187,0.005648992658687538,0.0013281822204589844,0.0003745666025145986,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.8421052631578947,0.631578947368421,0.7368421052631579,0.5,0.8947368421052632,0.7210526315789474,0.1427858943815846,174,0.8223684210526315,0.743421052631579,0.75,0.5,0.7302631578947368,0.7092105263157895,0.10940850792624948
0.011009502410888671,0.004198525095094487,0.0010579586029052734,3.190129682268959e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': Normalizer(copy=True, norm='l2')}",0.7368421052631579,0.7105263157894737,0.7105263157894737,0.7631578947368421,0.868421052631579,0.7578947368421053,0.058608045924526564,138,0.75,0.7763157894736842,0.7763157894736842,0.7631578947368421,0.7368421052631579,0.7605263157894736,0.015344610249592898
0.010939264297485351,0.00034151617220072497,0.001063394546508789,6.0063578950700725e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.7631578947368421,0.8421052631578947,0.5,0.9210526315789473,0.7052631578947368,0.17487629185090683,180,0.506578947368421,0.7763157894736842,0.881578947368421,0.5,0.868421052631579,0.7065789473684211,0.16991524691955714
