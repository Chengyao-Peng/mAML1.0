mean_fit_time,std_fit_time,mean_score_time,std_score_time,param_clf,param_clf__max_depth,param_scl,param_clf__n_estimators,param_clf__learning_rate,param_clf__min_child_weight,param_clf__n_neighbors,param_clf__C,param_clf__loss,params,split0_test_score,split1_test_score,split2_test_score,split3_test_score,split4_test_score,mean_test_score,std_test_score,rank_test_score,split0_train_score,split1_train_score,split2_train_score,split3_train_score,split4_train_score,mean_train_score,std_train_score
0.3460089683532715,0.012036533574711865,0.0009882926940917968,9.088588786360978e-05,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",4,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 4, 'scl': NonScaler()}",0.65625,0.59375,0.53125,0.5666666666666667,0.5333333333333333,0.5762499999999999,0.04618426259139699,197,0.8790322580645161,0.8548387096774194,0.8870967741935484,0.8888888888888888,0.8253968253968254,0.8670506912442397,0.024110111137316738
0.01857132911682129,0.0033189569332280817,0.0039920806884765625,0.004275010066405947,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",8,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 8, 'scl': NonScaler()}",0.6875,0.6875,0.53125,0.7,0.7,0.6612500000000001,0.06523994175349943,125,0.9758064516129032,0.9838709677419355,0.9919354838709677,1.0,0.9920634920634921,0.9887352790578596,0.008234419885343257
0.018897867202758788,0.004536983882757846,0.000984525680541992,0.000139954313484608,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",16,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 16, 'scl': NonScaler()}",0.71875,0.6875,0.59375,0.7,0.7333333333333333,0.6866666666666668,0.04902876140026835,89,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.02440509796142578,0.0021461923739643594,0.0009242534637451172,3.494100535682133e-05,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",32,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 32, 'scl': NonScaler()}",0.71875,0.6875,0.59375,0.7,0.7333333333333333,0.6866666666666668,0.04902876140026835,89,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.025046396255493163,0.0018836984742066736,0.002139854431152344,0.0023034889334030413,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",64,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 64, 'scl': NonScaler()}",0.71875,0.6875,0.59375,0.7,0.7333333333333333,0.6866666666666668,0.04902876140026835,89,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.036783599853515626,0.002934422927481838,0.005940151214599609,0.005262446079830173,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),5,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 5, 'scl': NonScaler()}",0.6875,0.6875,0.53125,0.7333333333333333,0.9333333333333333,0.7145833333333333,0.12905909499140306,38,0.9758064516129032,0.967741935483871,0.9758064516129032,0.9603174603174603,0.9365079365079365,0.9632360471070148,0.014555021222882032
0.049515056610107425,0.015615681848915723,0.004851675033569336,0.0032831409934864285,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),10,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 10, 'scl': NonScaler()}",0.6875,0.71875,0.625,0.7333333333333333,0.8333333333333334,0.7195833333333334,0.06797671169844371,30,0.9919354838709677,0.9758064516129032,1.0,0.9841269841269841,0.9682539682539683,0.9840245775729647,0.011261054656364707
0.0996671199798584,0.040535745300148605,0.004271268844604492,0.003224677705697627,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),15,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 15, 'scl': NonScaler()}",0.71875,0.71875,0.625,0.8,0.8666666666666667,0.7458333333333333,0.08197857104823865,15,0.9919354838709677,0.9919354838709677,1.0,1.0,0.9841269841269841,0.9935995903737839,0.005953137941943905
0.10337266921997071,0.034852543883810476,0.010403871536254883,0.008930736931172346,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),20,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 20, 'scl': NonScaler()}",0.71875,0.75,0.65625,0.7666666666666667,0.8333333333333334,0.745,0.05807382753396272,17,0.9919354838709677,0.9838709677419355,1.0,1.0,1.0,0.9951612903225806,0.0064516129032258
0.10733118057250976,0.014225879183748904,0.007986211776733398,0.004427681898456258,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),25,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 25, 'scl': NonScaler()}",0.71875,0.8125,0.625,0.7666666666666667,0.8666666666666667,0.7579166666666667,0.08256310717667226,7,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.12572894096374512,0.003948233869278275,0.008848428726196289,0.005601229869476327,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),30,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 30, 'scl': NonScaler()}",0.71875,0.8125,0.5625,0.7666666666666667,0.8666666666666667,0.7454166666666666,0.10375251000979849,16,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.15016260147094726,0.019057744491101387,0.011385631561279298,0.005859555917094453,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),35,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 35, 'scl': NonScaler()}",0.6875,0.84375,0.625,0.7666666666666667,0.8333333333333334,0.75125,0.08430269535693652,11,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.1828397750854492,0.0351017828348371,0.012646102905273437,0.006764818144306193,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),40,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 40, 'scl': NonScaler()}",0.75,0.84375,0.5625,0.7666666666666667,0.8666666666666667,0.7579166666666667,0.10725747837175116,7,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.1946868419647217,0.015501954987012108,0.014661884307861328,0.004816950787015547,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),45,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 45, 'scl': NonScaler()}",0.75,0.8125,0.5625,0.7666666666666667,0.8666666666666667,0.7516666666666667,0.1028955781362834,10,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.20429954528808594,0.011153482521935995,0.012698602676391602,0.006669647210563439,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),50,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 50, 'scl': NonScaler()}",0.75,0.84375,0.5625,0.7666666666666667,0.8666666666666667,0.7579166666666667,0.10725747837175116,7,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.15831313133239747,0.01751964608033181,0.003360414505004883,0.0039651087020068235,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.001,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.001, 'scl': NonScaler()}",0.65625,0.59375,0.4375,0.6666666666666666,0.7,0.6108333333333332,0.09323841900084844,176,0.8387096774193549,0.7903225806451613,0.8467741935483871,0.8809523809523809,0.8571428571428571,0.8427803379416282,0.02982523859314688
0.160286283493042,0.020457457180696956,0.004791736602783203,0.004893842159368821,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.01,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.01, 'scl': NonScaler()}",0.625,0.71875,0.5625,0.6666666666666666,0.8333333333333334,0.68125,0.09166666666666667,97,0.9516129032258065,0.9435483870967742,0.9435483870967742,0.9365079365079365,0.9523809523809523,0.9455197132616489,0.005885370679013521
0.14693818092346192,0.010489407400357083,0.001206207275390625,4.70955817902344e-05,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.1,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.1, 'scl': NonScaler()}",0.71875,0.78125,0.5625,0.7666666666666667,0.8666666666666667,0.7391666666666666,0.10041061530867476,20,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.15782971382141114,0.010081892774842522,0.001324033737182617,0.0001497109671975875,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.2,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.2, 'scl': NonScaler()}",0.78125,0.75,0.625,0.7666666666666667,0.8333333333333334,0.75125,0.06901589993939401,11,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.1316549301147461,0.016042053284556792,0.0034319400787353516,0.003959157039839593,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.5,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.5, 'scl': NonScaler()}",0.71875,0.75,0.53125,0.7666666666666667,0.8333333333333334,0.72,0.10153851212443704,29,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.16292357444763184,0.010288516883272236,0.01671462059020996,0.004338593984086495,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.001,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.001, 'scl': NonScaler()}",0.5625,0.53125,0.59375,0.5,0.5666666666666667,0.5508333333333333,0.03223718522314117,210,0.6774193548387096,0.6290322580645161,0.6854838709677419,0.6825396825396826,0.6111111111111112,0.6571172555043522,0.030881943946986155
0.15533046722412108,0.004844078952561313,0.01884770393371582,0.005671037778018085,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.01,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.01, 'scl': NonScaler()}",0.5,0.6875,0.53125,0.5333333333333333,0.7666666666666667,0.60375,0.10443631765073129,185,0.75,0.782258064516129,0.7661290322580645,0.7857142857142857,0.746031746031746,0.766026625704045,0.01617233436618742
0.17661852836608888,0.01930914746566775,0.012478160858154296,0.004821726220707195,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.1,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.1, 'scl': NonScaler()}",0.5625,0.75,0.59375,0.8,0.7666666666666667,0.6945833333333333,0.09694643423618587,60,0.9274193548387096,0.9193548387096774,0.9354838709677419,0.9603174603174603,0.9126984126984127,0.9310547875064005,0.016510496473293924
0.15953512191772462,0.009707206654280478,0.020903396606445312,0.006323429053354902,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.2,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.2, 'scl': NonScaler()}",0.625,0.71875,0.59375,0.7666666666666667,0.8333333333333334,0.7075,0.08855122497427377,46,0.967741935483871,0.967741935483871,0.967741935483871,0.9523809523809523,0.9444444444444444,0.9600102406554021,0.009796298954374956
0.1663595199584961,0.016323416080890597,0.01598672866821289,0.004738330837225571,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.5,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.5, 'scl': NonScaler()}",0.71875,0.71875,0.53125,0.8,0.8,0.7137499999999999,0.09821850640281597,39,1.0,1.0,1.0,1.0,0.9920634920634921,0.9984126984126984,0.0031746031746031633
1.3099803447723388,0.04470320518162822,0.07111830711364746,0.004079437236351589,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",4,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 4, 'scl': NonScaler()}",0.65625,0.84375,0.75,0.7,0.8,0.75,0.06719840027857808,14,0.9596774193548387,0.9596774193548387,0.9596774193548387,0.9444444444444444,0.9682539682539683,0.9583461341525858,0.0077037538147473805
1.367426300048828,0.05618919745017626,0.08118262290954589,0.006821985655244327,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",8,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 8, 'scl': NonScaler()}",0.6875,0.8125,0.75,0.7333333333333333,0.8666666666666667,0.77,0.0627716319508883,5,0.9838709677419355,0.9838709677419355,0.9838709677419355,1.0,1.0,0.9903225806451612,0.0079015798154296
1.3703879833221435,0.0377796792167524,0.07849202156066895,0.008325299953444299,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",16,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 16, 'scl': NonScaler()}",0.71875,0.8125,0.71875,0.7333333333333333,0.9,0.7766666666666666,0.07082598001047671,1,1.0,1.0,1.0,1.0,1.0,1.0,0.0
1.3376315593719483,0.04940345939010791,0.07501087188720704,0.0038749950217368445,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",32,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 32, 'scl': NonScaler()}",0.71875,0.8125,0.71875,0.7333333333333333,0.9,0.7766666666666666,0.07082598001047671,1,1.0,1.0,1.0,1.0,1.0,1.0,0.0
1.3066121578216552,0.05650975639062308,0.07715978622436523,0.00848175818078978,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",64,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 64, 'scl': NonScaler()}",0.71875,0.8125,0.71875,0.7333333333333333,0.9,0.7766666666666666,0.07082598001047671,1,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.04142684936523437,0.0070894376289636196,0.005734491348266602,0.004642015057949155,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",4,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 4, 'scl': NonScaler()}",0.5625,0.71875,0.71875,0.7666666666666667,0.8,0.7133333333333333,0.08144314649564513,40,0.9032258064516129,0.9193548387096774,0.9354838709677419,0.9285714285714286,0.8968253968253969,0.9166922683051716,0.01467900703498385
0.042218589782714845,0.006646504654406191,0.007967615127563476,0.004931675519504797,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",8,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 8, 'scl': NonScaler()}",0.65625,0.75,0.65625,0.6333333333333333,0.8,0.6991666666666667,0.06445013145405094,56,0.9838709677419355,0.9919354838709677,0.9596774193548387,0.9841269841269841,0.9761904761904762,0.9791602662570404,0.010940440177768922
0.0389134407043457,0.0049642033321679446,0.00596013069152832,0.005024202216504871,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",16,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 16, 'scl': NonScaler()}",0.625,0.71875,0.59375,0.7333333333333333,0.7333333333333333,0.6808333333333334,0.059415556324361136,98,0.9919354838709677,1.0,0.9919354838709677,1.0,1.0,0.9967741935483871,0.0039507899077148
0.044776105880737306,0.008207213496444528,0.002446556091308594,0.0005704368983263988,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",32,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 32, 'scl': NonScaler()}",0.71875,0.78125,0.625,0.6666666666666666,0.8333333333333334,0.725,0.07528879583163607,26,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.03718090057373047,0.010478507514965237,0.006002092361450195,0.00503090151431052,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",64,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 64, 'scl': NonScaler()}",0.71875,0.78125,0.625,0.6666666666666666,0.8333333333333334,0.725,0.07528879583163607,26,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.10440030097961425,0.010105143598939475,0.0046173095703125,0.005888526659988182,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.59375,0.8125,0.625,0.8666666666666667,0.8,0.7395833333333334,0.10909985232702096,19,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.10568251609802246,0.004575488447216772,0.003908967971801758,0.0033085441269655232,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.46875,0.75,0.59375,0.7666666666666667,0.7666666666666667,0.6691666666666667,0.11949982566235542,116,0.9838709677419355,0.9758064516129032,0.9919354838709677,0.9841269841269841,1.0,0.987147977470558,0.00820475597387887
0.11475105285644531,0.01467703148355756,0.0027330398559570314,0.0023240302944411676,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.5,0.75,0.5625,0.7666666666666667,0.8,0.6758333333333333,0.12077297342994879,106,0.9193548387096774,0.8951612903225806,0.9193548387096774,0.9047619047619048,0.9285714285714286,0.9134408602150538,0.011902531875766835
0.15104570388793945,0.007270010533824923,0.0041255950927734375,0.003310045038904816,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.59375,0.75,0.59375,0.8,0.7666666666666667,0.7008333333333333,0.08890342763046007,52,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.11281371116638184,0.009748423168258464,0.001645946502685547,8.340679313788876e-05,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.5,0.78125,0.53125,0.8333333333333334,0.8,0.6891666666666667,0.14301685021159025,75,0.9758064516129032,0.9838709677419355,0.9919354838709677,0.9920634920634921,1.0,0.9887352790578596,0.008234419885343257
0.09435563087463379,0.006772833264014388,0.0036179542541503905,0.003990630410061457,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.5,0.75,0.5625,0.7666666666666667,0.8,0.6758333333333333,0.12077297342994879,106,0.9193548387096774,0.8951612903225806,0.9193548387096774,0.9047619047619048,0.9285714285714286,0.9134408602150538,0.011902531875766835
0.16195669174194335,0.01461965323059669,0.0018914222717285156,0.00027218391277034206,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.5625,0.75,0.5625,0.7666666666666667,0.7666666666666667,0.6816666666666666,0.0974893156539047,94,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.11662473678588867,0.009668916691366825,0.0037293434143066406,0.004096757948663412,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.5,0.78125,0.53125,0.8333333333333334,0.8,0.6891666666666667,0.14301685021159025,75,0.9758064516129032,0.9838709677419355,0.9919354838709677,0.9920634920634921,1.0,0.9887352790578596,0.008234419885343257
0.10984506607055664,0.020974970233381126,0.0017026901245117188,0.0001372680428983245,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.5,0.75,0.5625,0.7666666666666667,0.8,0.6758333333333333,0.12077297342994879,106,0.9193548387096774,0.8951612903225806,0.9193548387096774,0.9047619047619048,0.9285714285714286,0.9134408602150538,0.011902531875766835
0.16691126823425292,0.018389348361168994,0.0055023193359375,0.0046300725136145145,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.5625,0.75,0.5625,0.7666666666666667,0.7666666666666667,0.6816666666666666,0.0974893156539047,94,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.11275687217712402,0.011914029422735102,0.002965402603149414,0.001914555716302248,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.5,0.78125,0.53125,0.8333333333333334,0.8,0.6891666666666667,0.14301685021159025,75,0.9758064516129032,0.9838709677419355,0.9919354838709677,0.9920634920634921,1.0,0.9887352790578596,0.008234419885343257
0.10631122589111328,0.0074028110431602736,0.006346893310546875,0.004515749189515487,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.5,0.75,0.5625,0.7666666666666667,0.8,0.6758333333333333,0.12077297342994879,106,0.9193548387096774,0.8951612903225806,0.9193548387096774,0.9047619047619048,0.9285714285714286,0.9134408602150538,0.011902531875766835
0.1503385543823242,0.0024945290403918493,0.004554271697998047,0.003952459348775152,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.5625,0.75,0.5625,0.7666666666666667,0.7666666666666667,0.6816666666666666,0.0974893156539047,94,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.10618233680725098,0.013405168927844715,0.0047188282012939455,0.004020963799017644,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.5,0.78125,0.53125,0.8333333333333334,0.8,0.6891666666666667,0.14301685021159025,75,0.9758064516129032,0.9838709677419355,0.9919354838709677,0.9920634920634921,1.0,0.9887352790578596,0.008234419885343257
0.09726362228393555,0.010920865171059013,0.0058481693267822266,0.0051162232412273806,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.5,0.75,0.5625,0.7666666666666667,0.8,0.6758333333333333,0.12077297342994879,106,0.9193548387096774,0.8951612903225806,0.9193548387096774,0.9047619047619048,0.9285714285714286,0.9134408602150538,0.011902531875766835
0.07371349334716797,0.008189229394034653,0.019034767150878908,0.0027812165184733003,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",32,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 32, 'scl': NonScaler()}",0.53125,0.78125,0.59375,0.7666666666666667,0.8,0.6945833333333333,0.11014983482107958,60,0.9838709677419355,0.9919354838709677,1.0,1.0,1.0,0.9951612903225806,0.0064516129032258
0.06749849319458008,0.0043549067799522785,0.02061924934387207,0.006637785420369858,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",38,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 38, 'scl': NonScaler()}",0.53125,0.78125,0.59375,0.7666666666666667,0.8,0.6945833333333333,0.11014983482107958,60,0.9838709677419355,0.9919354838709677,1.0,1.0,1.0,0.9951612903225806,0.0064516129032258
0.08540163040161133,0.01032956501279811,0.022240161895751953,0.005638167735749227,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",45,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 45, 'scl': NonScaler()}",0.53125,0.78125,0.59375,0.7666666666666667,0.8,0.6945833333333333,0.11014983482107958,60,0.9838709677419355,0.9919354838709677,1.0,1.0,1.0,0.9951612903225806,0.0064516129032258
0.07812957763671875,0.01588499145393324,0.02199411392211914,0.007464017497732061,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",53,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 53, 'scl': NonScaler()}",0.53125,0.78125,0.59375,0.7666666666666667,0.8,0.6945833333333333,0.11014983482107958,60,0.9838709677419355,0.9919354838709677,1.0,1.0,1.0,0.9951612903225806,0.0064516129032258
0.07088589668273926,0.011321215474569424,0.02273082733154297,0.007154794897732839,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",64,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 64, 'scl': NonScaler()}",0.53125,0.78125,0.59375,0.7666666666666667,0.8,0.6945833333333333,0.11014983482107958,60,0.9838709677419355,0.9919354838709677,1.0,1.0,1.0,0.9951612903225806,0.0064516129032258
0.028937768936157227,0.004886505535272899,0.0031585216522216795,0.0008692629625624099,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': NonScaler()}",0.65625,0.59375,0.6875,0.5333333333333333,0.7,0.6341666666666667,0.06239713757679736,160,0.7661290322580645,0.7580645161290323,0.7741935483870968,0.7777777777777778,0.7619047619047619,0.7676139272913466,0.007383576459851215
0.3556480884552002,0.04002964138559009,0.0028524398803710938,7.01649311128031e-05,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': Binarizer(copy=True, threshold=0)}",0.625,0.875,0.59375,0.6,0.9333333333333333,0.7254166666666666,0.14748116640589892,23,0.8225806451612904,0.7338709677419355,0.8145161290322581,0.8333333333333334,0.7619047619047619,0.7932411674347158,0.03854244837522826
0.3132042407989502,0.08218744335794739,0.0032706260681152344,0.0010149606437769084,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5625,0.625,0.59375,0.6333333333333333,0.7333333333333333,0.6295833333333334,0.05759050847723663,165,0.782258064516129,0.7661290322580645,0.7419354838709677,0.8015873015873016,0.7619047619047619,0.7707629288274449,0.02006609977999914
0.36152353286743166,0.025336686976583877,0.003113460540771484,0.000391522026935031,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': MaxAbsScaler(copy=True)}",0.5625,0.625,0.59375,0.6333333333333333,0.7333333333333333,0.6295833333333334,0.05759050847723663,165,0.782258064516129,0.7661290322580645,0.7419354838709677,0.8015873015873016,0.7619047619047619,0.7707629288274449,0.02006609977999914
0.34738922119140625,0.009868269801128161,0.002861499786376953,0.00010277627360369205,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.625,0.59375,0.625,0.7666666666666667,0.7333333333333333,0.66875,0.06813487441179526,117,0.782258064516129,0.75,0.7661290322580645,0.8015873015873016,0.7777777777777778,0.7755504352278546,0.017143274655533478
0.34961776733398436,0.07399168805368649,0.003045797348022461,0.00039931853716575693,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.625,0.53125,0.625,0.5,0.7,0.5962500000000001,0.07198090024443983,191,0.8467741935483871,0.7338709677419355,0.7258064516129032,0.7777777777777778,0.7301587301587301,0.7628776241679468,0.045927841029624786
0.5365917205810546,0.026623519948828365,0.005486679077148437,0.0009377818371593165,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5625,0.53125,0.6875,0.5,0.7,0.5962500000000001,0.0821203385282842,191,0.75,0.7258064516129032,0.75,0.7301587301587301,0.6984126984126984,0.7308755760368664,0.019034366277466068
0.4238171100616455,0.03234661799797974,0.06941661834716797,0.008074955142138062,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.59375,0.8125,0.59375,0.6,0.8,0.68,0.10318369541744472,100,0.8387096774193549,0.7741935483870968,0.8629032258064516,0.8095238095238095,0.7698412698412699,0.8110343061955965,0.036090719788219996
0.38239593505859376,0.010427932159900353,0.006755542755126953,0.0023733123134566936,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.6875,0.8125,0.625,0.6333333333333333,0.8,0.7116666666666667,0.08025134128335662,44,0.8306451612903226,0.782258064516129,0.8870967741935484,0.8174603174603174,0.7777777777777778,0.819047619047619,0.0395585165281472
0.3321279525756836,0.021231082552261624,0.003304004669189453,0.0007301098496985191,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': Normalizer(copy=True, norm='l2')}",0.6875,0.71875,0.75,0.7,0.7666666666666667,0.7245833333333334,0.02976761849915294,28,0.7903225806451613,0.7661290322580645,0.8306451612903226,0.8174603174603174,0.7936507936507936,0.799641577060932,0.022470218440051485
0.3642528533935547,0.026896618069890618,0.002816581726074219,0.00013466919745481372,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.65625,0.59375,0.75,0.5333333333333333,0.7,0.6466666666666667,0.07649664117535561,152,0.7419354838709677,0.7419354838709677,0.7903225806451613,0.7936507936507936,0.7857142857142857,0.7707117255504352,0.023630520369722786
0.029391956329345704,0.00791533771952468,0.0030643463134765623,0.0006347174272269345,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': NonScaler()}",0.65625,0.5625,0.65625,0.4666666666666667,0.7333333333333333,0.615,0.0918312915683489,174,0.6693548387096774,0.6693548387096774,0.6774193548387096,0.6904761904761905,0.6666666666666666,0.6746543778801842,0.008694235017232346
0.023238086700439455,0.005340480481295254,0.0032389163970947266,0.00018991670370892218,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': Binarizer(copy=True, threshold=0)}",0.625,0.78125,0.53125,0.5666666666666667,0.8,0.6608333333333333,0.11028215076692048,127,0.717741935483871,0.6854838709677419,0.75,0.6984126984126984,0.7142857142857143,0.7131848438300052,0.021738881763646446
0.022235345840454102,0.008752275518851828,0.004794979095458984,0.0036440906495661916,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.59375,0.65625,0.53125,0.5666666666666667,0.7,0.6095833333333334,0.06096162271826795,177,0.7258064516129032,0.7903225806451613,0.75,0.8015873015873016,0.7619047619047619,0.7659242191500256,0.02737264165849689
0.024907541275024415,0.003990125064348122,0.004399633407592774,0.0023708745754678013,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': MaxAbsScaler(copy=True)}",0.59375,0.65625,0.53125,0.5666666666666667,0.7,0.6095833333333334,0.06096162271826795,177,0.7258064516129032,0.7903225806451613,0.75,0.8015873015873016,0.7619047619047619,0.7659242191500256,0.02737264165849689
0.031096887588500977,0.010912033233655633,0.003232717514038086,0.0005816548118975617,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5625,0.75,0.5625,0.6333333333333333,0.7333333333333333,0.6483333333333333,0.08064841391290138,150,0.782258064516129,0.7338709677419355,0.7580645161290323,0.8015873015873016,0.7619047619047619,0.767537122375832,0.02293898238042649
0.02538161277770996,0.005516424948848445,0.003259897232055664,0.000367472166825707,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6875,0.59375,0.625,0.5333333333333333,0.7,0.6279166666666667,0.06142972497994038,167,0.6935483870967742,0.6612903225806451,0.6693548387096774,0.7222222222222222,0.6428571428571429,0.6778545826932925,0.027518081655432097
0.029325294494628906,0.00427357348736488,0.005930900573730469,0.0008550533113776371,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.53125,0.59375,0.53125,0.43333333333333335,0.7,0.5579166666666667,0.0876526446327269,208,0.6774193548387096,0.6693548387096774,0.6854838709677419,0.6587301587301587,0.6428571428571429,0.6667690732206861,0.01487792254528449
0.021874761581420897,0.006240576934563153,0.06569361686706543,0.0014691678470418923,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.65625,0.75,0.53125,0.6,0.7333333333333333,0.6541666666666667,0.08185140669394618,139,0.717741935483871,0.6935483870967742,0.7741935483870968,0.7301587301587301,0.7380952380952381,0.730747567844342,0.02643790360313492
0.030249261856079103,0.005695194420421799,0.005280113220214844,0.0002600191580840032,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.5625,0.78125,0.53125,0.6,0.8666666666666667,0.6683333333333333,0.13171808067906918,118,0.717741935483871,0.6854838709677419,0.75,0.7380952380952381,0.7142857142857143,0.7211213517665132,0.022137143324092338
0.03216328620910645,0.0064397418352675935,0.00932464599609375,0.008816229057983056,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': Normalizer(copy=True, norm='l2')}",0.65625,0.78125,0.625,0.6333333333333333,0.6666666666666666,0.6725,0.056417959118627396,115,0.6935483870967742,0.7096774193548387,0.7580645161290323,0.753968253968254,0.7301587301587301,0.7290834613415258,0.024898379910628855
0.02593221664428711,0.010859479543202849,0.005305767059326172,0.0026426428837981446,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.625,0.65625,0.6875,0.5,0.7333333333333333,0.6404166666666666,0.07881060278357925,156,0.6854838709677419,0.6693548387096774,0.6935483870967742,0.6984126984126984,0.6587301587301587,0.68110599078341,0.014914882668181818
0.02028546333312988,0.010870394490897304,0.0061779975891113285,0.003936798028934427,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': NonScaler()}",0.6875,0.59375,0.5625,0.43333333333333335,0.7333333333333333,0.6020833333333334,0.1045326902616274,186,0.6129032258064516,0.6774193548387096,0.6290322580645161,0.6825396825396826,0.6507936507936508,0.6505376344086021,0.02692825075934289
0.025693798065185548,0.009804250915124145,0.006105470657348633,0.00585130035543259,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': Binarizer(copy=True, threshold=0)}",0.5625,0.78125,0.5625,0.5666666666666667,0.8,0.6545833333333333,0.11124609855830651,136,0.7096774193548387,0.6854838709677419,0.7580645161290323,0.7063492063492064,0.7142857142857143,0.7147721454173068,0.023787270265908222
0.030890512466430663,0.010451499605769278,0.0037837505340576174,0.0008460209744587916,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5,0.6875,0.5625,0.6,0.7333333333333333,0.6166666666666667,0.08420378719379418,172,0.7741935483870968,0.7096774193548387,0.75,0.7777777777777778,0.7301587301587301,0.7483614951356887,0.02593490208070259
0.022000598907470702,0.008597669283501735,0.0035621166229248048,0.0012158109620602005,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': MaxAbsScaler(copy=True)}",0.5,0.6875,0.5625,0.6,0.7333333333333333,0.6166666666666667,0.08420378719379418,172,0.7741935483870968,0.7096774193548387,0.75,0.7777777777777778,0.7301587301587301,0.7483614951356887,0.02593490208070259
0.024184513092041015,0.0017261732308067744,0.0035547733306884764,0.000713646340109314,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.625,0.65625,0.625,0.7,0.6666666666666666,0.6545833333333333,0.02814890959009088,136,0.7661290322580645,0.7258064516129032,0.782258064516129,0.7777777777777778,0.7380952380952381,0.7580133128520226,0.022263506334025403
0.02229733467102051,0.0046933414493959425,0.004097175598144531,0.001720672480952153,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.71875,0.59375,0.6875,0.5666666666666667,0.7,0.6533333333333333,0.06113225644271425,142,0.6854838709677419,0.6209677419354839,0.6854838709677419,0.7380952380952381,0.6666666666666666,0.6793394777265744,0.037671225603978016
0.023506975173950194,0.004072205056041758,0.005366039276123047,0.00028689736518592955,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.53125,0.6875,0.59375,0.4,0.6666666666666666,0.5758333333333333,0.10387124775947919,198,0.5967741935483871,0.5483870967741935,0.5806451612903226,0.626984126984127,0.6587301587301587,0.6023041474654377,0.0379466377008295
0.024097728729248046,0.006354453862735979,0.07467713356018066,0.010567180660567478,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.59375,0.78125,0.53125,0.6,0.8,0.6612500000000001,0.10849827187563865,125,0.7016129032258065,0.6935483870967742,0.7903225806451613,0.753968253968254,0.7619047619047619,0.7402713773681515,0.03698174183971709
0.023828935623168946,0.0017049923640319405,0.005164289474487304,9.53888392262965e-05,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.5625,0.78125,0.5625,0.6,0.8333333333333334,0.6679166666666667,0.11579735652327207,120,0.7016129032258065,0.6774193548387096,0.75,0.7301587301587301,0.7301587301587301,0.7178699436763953,0.025435843085309443
0.016467523574829102,0.002879203867287536,0.0030857086181640624,8.54660075162602e-05,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': Normalizer(copy=True, norm='l2')}",0.6875,0.65625,0.6875,0.5333333333333333,0.6,0.6329166666666667,0.05916666666666667,164,0.7016129032258065,0.6935483870967742,0.717741935483871,0.7301587301587301,0.7142857142857143,0.7114695340501793,0.012766210255058327
0.030662679672241212,0.010514128957316304,0.0028964519500732423,0.0001041128483184857,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.6875,0.5625,0.59375,0.43333333333333335,0.7333333333333333,0.6020833333333334,0.1045326902616274,186,0.6290322580645161,0.6935483870967742,0.6290322580645161,0.6666666666666666,0.6587301587301587,0.6554019457245264,0.02442884681541268
0.019384336471557618,0.0037366367881181825,0.004422426223754883,0.0033281674423694713,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': NonScaler()}",0.59375,0.6875,0.5625,0.4666666666666667,0.7333333333333333,0.60875,0.09410027157830687,182,0.6532258064516129,0.6612903225806451,0.6693548387096774,0.6428571428571429,0.6746031746031746,0.6602662570404506,0.011329990585437173
0.015210819244384766,0.003860441737717021,0.005910015106201172,0.0045258297716605665,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': Binarizer(copy=True, threshold=0)}",0.5625,0.75,0.5625,0.5666666666666667,0.7666666666666667,0.6416666666666666,0.09541575690978231,153,0.6370967741935484,0.6451612903225806,0.717741935483871,0.6746031746031746,0.7063492063492064,0.6761904761904762,0.0320303612592047
0.019635343551635744,0.0017230168674769572,0.0035187721252441405,0.000703924003409459,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.59375,0.625,0.71875,0.5666666666666667,0.6666666666666666,0.6341666666666665,0.05382262535402746,161,0.7419354838709677,0.7096774193548387,0.7741935483870968,0.8253968253968254,0.7142857142857143,0.7530977982590885,0.04286836695646496
0.021099853515625,0.009586968546818833,0.0030220985412597657,3.6707047085397314e-05,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': MaxAbsScaler(copy=True)}",0.59375,0.625,0.71875,0.5666666666666667,0.6666666666666666,0.6341666666666665,0.05382262535402746,161,0.7419354838709677,0.7096774193548387,0.7741935483870968,0.8253968253968254,0.7142857142857143,0.7530977982590885,0.04286836695646496
0.025355815887451172,0.004637670749603546,0.004569196701049804,0.002356750539834258,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.65625,0.78125,0.78125,0.6,0.6333333333333333,0.6904166666666667,0.07629211041196274,74,0.7338709677419355,0.7338709677419355,0.7661290322580645,0.7698412698412699,0.7142857142857143,0.743599590373784,0.021188662160806553
0.026925945281982423,0.0054776052218301965,0.004874610900878906,0.003837985859561513,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.71875,0.59375,0.65625,0.6,0.5,0.61375,0.07260767865728804,175,0.6290322580645161,0.5967741935483871,0.6209677419354839,0.7063492063492064,0.6190476190476191,0.6344342037890425,0.0375161766895928
0.018170785903930665,0.0025896188418278814,0.0071751117706298825,0.004135150573967782,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.59375,0.65625,0.5625,0.4,0.6666666666666666,0.5758333333333333,0.0960559009697536,198,0.6129032258064516,0.5483870967741935,0.6048387096774194,0.6349206349206349,0.6111111111111112,0.6024321556579622,0.02886911413470124
0.017394018173217774,0.008286515556131486,0.06302742958068848,0.013279250654324518,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.59375,0.78125,0.5,0.5666666666666667,0.8333333333333334,0.655,0.12909003102916627,132,0.6774193548387096,0.6774193548387096,0.7258064516129032,0.6746031746031746,0.7222222222222222,0.6954941116231439,0.023336901109858407
0.028714895248413086,0.0057336336681468765,0.0054891109466552734,0.00035415514642080185,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.5625,0.75,0.5625,0.5666666666666667,0.8333333333333334,0.655,0.11466739340854973,132,0.7016129032258065,0.6451612903225806,0.717741935483871,0.6825396825396826,0.6666666666666666,0.6827444956477214,0.025502444805479373
0.02956833839416504,0.010198678586288696,0.0058326244354248045,0.0049594488264148,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': Normalizer(copy=True, norm='l2')}",0.65625,0.65625,0.625,0.6,0.6,0.6275000000000001,0.025186802099512365,169,0.6774193548387096,0.6532258064516129,0.6693548387096774,0.6984126984126984,0.7063492063492064,0.680952380952381,0.019316364146441858
0.026531314849853514,0.0044066420031147096,0.003097057342529297,0.0003543673016422016,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5625,0.65625,0.5625,0.4666666666666667,0.7333333333333333,0.5962500000000001,0.09106240229156656,191,0.6532258064516129,0.6532258064516129,0.6451612903225806,0.6587301587301587,0.6587301587301587,0.6538146441372248,0.004977922444315563
0.026792049407958984,0.008978775458955354,0.0015006065368652344,0.0005244573641387887,"GaussianNB(priors=None, var_smoothing=1e-09)",,NonScaler(),,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': NonScaler()}",0.6875,0.71875,0.59375,0.7666666666666667,0.7666666666666667,0.7066666666666667,0.06397427868552591,47,0.8306451612903226,0.7903225806451613,0.8467741935483871,0.8253968253968254,0.8174603174603174,0.8221198156682027,0.018568972712871508
0.03628358840942383,0.012597364338537493,0.0012238502502441406,3.4276068560472304e-05,"GaussianNB(priors=None, var_smoothing=1e-09)",,"Binarizer(copy=True, threshold=0)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': Binarizer(copy=True, threshold=0)}",0.75,0.8125,0.625,0.7666666666666667,0.9,0.7708333333333333,0.08959786703810409,4,0.8225806451612904,0.7903225806451613,0.8225806451612904,0.8174603174603174,0.8174603174603174,0.8140809011776753,0.012097851039936418
0.028006792068481445,0.001100120152318915,0.0033310890197753907,0.003665167386083804,"GaussianNB(priors=None, var_smoothing=1e-09)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.6875,0.71875,0.53125,0.7666666666666667,0.7666666666666667,0.6941666666666666,0.08683677216479205,66,0.8306451612903226,0.7903225806451613,0.8467741935483871,0.8253968253968254,0.8174603174603174,0.8221198156682027,0.018568972712871508
0.022322750091552733,0.005227348825852079,0.001184558868408203,0.0001169786223071783,"GaussianNB(priors=None, var_smoothing=1e-09)",,MaxAbsScaler(copy=True),,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': MaxAbsScaler(copy=True)}",0.6875,0.71875,0.53125,0.7666666666666667,0.7666666666666667,0.6941666666666666,0.08683677216479205,66,0.8306451612903226,0.7903225806451613,0.8467741935483871,0.8253968253968254,0.8174603174603174,0.8221198156682027,0.018568972712871508
0.012819862365722657,0.008131938592595617,0.0013347625732421874,0.0002169908565767771,"GaussianNB(priors=None, var_smoothing=1e-09)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.6875,0.71875,0.53125,0.7666666666666667,0.7666666666666667,0.6941666666666666,0.08683677216479205,66,0.8306451612903226,0.7903225806451613,0.8467741935483871,0.8253968253968254,0.8174603174603174,0.8221198156682027,0.018568972712871508
0.01820235252380371,0.005958818680329096,0.0012043952941894532,8.28655455590931e-05,"GaussianNB(priors=None, var_smoothing=1e-09)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.59375,0.75,0.65625,0.7333333333333333,0.7666666666666667,0.7,0.06520533805687317,53,0.782258064516129,0.782258064516129,0.8145161290322581,0.8412698412698413,0.8174603174603174,0.807552483358935,0.02264125884895476
0.02023344039916992,0.002806626078867681,0.005530405044555664,0.0034373432709242273,"GaussianNB(priors=None, var_smoothing=1e-09)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.78125,0.78125,0.65625,0.7333333333333333,0.7666666666666667,0.74375,0.04712203424207312,18,0.8225806451612904,0.7983870967741935,0.8145161290322581,0.8015873015873016,0.8015873015873016,0.807731694828469,0.009266590773874882
0.021937084197998048,0.004115365624580214,0.0627209186553955,0.004265068772986621,"GaussianNB(priors=None, var_smoothing=1e-09)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.75,0.8125,0.59375,0.7666666666666667,0.9,0.7645833333333333,0.10003471619615086,6,0.8145161290322581,0.782258064516129,0.8064516129032258,0.8412698412698413,0.8095238095238095,0.8108038914490528,0.018854177149465856
0.02291579246520996,0.009181212390531022,0.004602861404418945,0.0023952081067551345,"GaussianNB(priors=None, var_smoothing=1e-09)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.75,0.84375,0.5625,0.7333333333333333,0.8666666666666667,0.75125,0.10754198146667086,11,0.8145161290322581,0.7741935483870968,0.7983870967741935,0.8253968253968254,0.8015873015873016,0.8028161802355351,0.01724619560782547
0.019622659683227538,0.008252369784894359,0.0019079685211181641,0.0013696953404433506,"GaussianNB(priors=None, var_smoothing=1e-09)",,"Normalizer(copy=True, norm='l2')",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': Normalizer(copy=True, norm='l2')}",0.75,0.6875,0.59375,0.7,0.8333333333333334,0.7129166666666668,0.07859884081701066,41,0.8387096774193549,0.7903225806451613,0.8145161290322581,0.7777777777777778,0.7619047619047619,0.7966461853558627,0.02717220468070874
0.028356647491455077,0.0045993270281246695,0.0023299217224121093,0.0020132702169534927,"GaussianNB(priors=None, var_smoothing=1e-09)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.6875,0.75,0.59375,0.7666666666666667,0.7666666666666667,0.7129166666666666,0.06633249580710802,42,0.8306451612903226,0.7903225806451613,0.8467741935483871,0.8253968253968254,0.8174603174603174,0.8221198156682027,0.018568972712871508
0.03070521354675293,0.0054028369506004936,0.0010500431060791015,8.749739672675047e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': NonScaler()}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.023686885833740234,0.005230824079578124,0.0012487411499023438,0.00023696127880208732,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': Binarizer(copy=True, threshold=0)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.02180819511413574,0.0025570029227246793,0.0010611057281494141,2.7830955208506527e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.02224559783935547,0.003070628389768839,0.0011433124542236327,0.0001632748919179102,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': MaxAbsScaler(copy=True)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.02349824905395508,0.0038927966386740863,0.001031208038330078,3.474549790566914e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.02831611633300781,0.0039988800500977955,0.0012908935546875,0.00029633826199391766,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.625,0.5,0.5,0.5,0.5,0.525,0.049999999999999996,213,0.6532258064516129,0.5,0.5,0.5,0.5,0.5306451612903226,0.06129032258064515
0.023310518264770506,0.005318828270063185,0.0034908294677734376,0.0001958321851026951,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.026773452758789062,0.010154186745924654,0.06811842918395997,0.008632868337001,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.01907515525817871,0.004412461054750681,0.0058154106140136715,0.003227898538997104,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.02391510009765625,0.003553121281298153,0.0011614322662353515,4.5086106931632116e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': Normalizer(copy=True, norm='l2')}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.027301454544067384,0.006668904422839344,0.0011151790618896484,7.942761722874473e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.023636341094970703,0.00400736090508206,0.001388692855834961,0.0008935537197382695,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': NonScaler()}",0.46875,0.5,0.46875,0.4666666666666667,0.6,0.5008333333333334,0.051109223998978666,216,0.5564516129032258,0.5564516129032258,0.5241935483870968,0.5634920634920635,0.6507936507936508,0.5702764976958525,0.04250866637873268
0.03295745849609375,0.013743917238471383,0.0011032581329345702,2.951718299539953e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': Binarizer(copy=True, threshold=0)}",0.625,0.84375,0.53125,0.7,0.7,0.68,0.10272840405652178,100,0.9193548387096774,0.8306451612903226,0.9354838709677419,0.8650793650793651,0.8571428571428571,0.8815412186379928,0.039487620650184144
0.026348209381103514,0.006055586247830505,0.002411222457885742,0.0021113121624618675,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.625,0.75,0.71875,0.7333333333333333,0.7666666666666667,0.71875,0.04954655498731583,34,0.8467741935483871,0.8145161290322581,0.8709677419354839,0.873015873015873,0.8492063492063492,0.8508960573476703,0.021144752665402153
0.024919748306274414,0.005135290348965552,0.0011681556701660157,0.00016838649349718504,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': MaxAbsScaler(copy=True)}",0.625,0.75,0.71875,0.7333333333333333,0.7666666666666667,0.71875,0.04954655498731583,34,0.8467741935483871,0.8145161290322581,0.8709677419354839,0.873015873015873,0.8492063492063492,0.8508960573476703,0.021144752665402153
0.03205728530883789,0.008552385040876714,0.0020714282989501955,0.00191084808592591,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.65625,0.8125,0.5625,0.7333333333333333,0.8333333333333334,0.7195833333333334,0.10044691798822568,30,0.9032258064516129,0.8951612903225806,0.9274193548387096,0.8888888888888888,0.9126984126984127,0.9054787506400409,0.013566597883630295
0.04776873588562012,0.013792567259277445,0.0031971454620361326,0.002692612264420326,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.71875,0.71875,0.5625,0.6666666666666666,0.7,0.6733333333333332,0.058591689778594976,113,0.6854838709677419,0.6612903225806451,0.6370967741935484,0.8492063492063492,0.7777777777777778,0.7221710189452125,0.07939788397563334
0.03192720413208008,0.009401184732541033,0.0061741828918457035,0.005311340252805655,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.46875,0.53125,0.5333333333333333,0.7,0.5466666666666666,0.08021888458738653,211,0.5725806451612904,0.5806451612903226,0.5403225806451613,0.5634920634920635,0.5,0.5514080901177676,0.029033725493482578
0.043950366973876956,0.01670709233928534,0.06863040924072265,0.02297558392467016,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.71875,0.875,0.5,0.7666666666666667,0.7666666666666667,0.7254166666666666,0.12380259824952518,23,0.9112903225806451,0.8951612903225806,0.9838709677419355,0.9444444444444444,0.9206349206349206,0.9310803891449053,0.030842760479169885
0.033240318298339844,0.004545551415724123,0.007419300079345703,0.0050442858065510784,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.625,0.84375,0.5625,0.8,0.7333333333333333,0.7129166666666666,0.10533016872883308,42,0.9112903225806451,0.8548387096774194,0.9112903225806451,0.8333333333333334,0.8571428571428571,0.87357910906298,0.031891524455074066
0.02464427947998047,0.004008704318010855,0.0011496543884277344,0.0001120588627064853,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': Normalizer(copy=True, norm='l2')}",0.65625,0.6875,0.5,0.5666666666666667,0.8666666666666667,0.6554166666666666,0.12464950862317911,131,0.6774193548387096,0.7096774193548387,0.7258064516129032,0.7380952380952381,0.6984126984126984,0.7098822324628777,0.02114230368587492
0.025897693634033204,0.003845073594704427,0.0011614322662353515,0.00010073353974769817,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.46875,0.46875,0.46875,0.4666666666666667,0.6,0.4945833333333334,0.05271450886088614,231,0.5564516129032258,0.5564516129032258,0.5403225806451613,0.5714285714285714,0.6507936507936508,0.575089605734767,0.03911010405925071
0.052751922607421876,0.009281018464224005,0.005678749084472657,0.00439512958040002,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': NonScaler()}",0.71875,0.78125,0.5625,0.7,0.7666666666666667,0.7058333333333333,0.07763205595056151,48,0.8064516129032258,0.8064516129032258,0.8225806451612904,0.7936507936507936,0.746031746031746,0.7950332821300563,0.026163621995644697
0.042221784591674805,0.011948762895671155,0.001610708236694336,0.0007196760504767065,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': Binarizer(copy=True, threshold=0)}",0.6875,0.8125,0.53125,0.7,0.7333333333333333,0.6929166666666667,0.09181427509440516,73,0.9032258064516129,0.8548387096774194,0.9838709677419355,0.9444444444444444,0.8968253968253969,0.916641065028162,0.044011472871892
0.0440885066986084,0.004672928005688046,0.003370332717895508,0.003985790154541659,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.59375,0.75,0.53125,0.7,0.8666666666666667,0.6883333333333334,0.11778187230828199,79,0.9112903225806451,0.9032258064516129,0.9435483870967742,0.9285714285714286,0.9285714285714286,0.9230414746543779,0.014229859591377462
0.040591764450073245,0.004637216997940656,0.001290273666381836,0.00023233801355675217,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': MaxAbsScaler(copy=True)}",0.59375,0.75,0.53125,0.7,0.8666666666666667,0.6883333333333334,0.11778187230828199,79,0.9112903225806451,0.9032258064516129,0.9435483870967742,0.9285714285714286,0.9285714285714286,0.9230414746543779,0.014229859591377462
0.038067960739135744,0.003922058173207245,0.0014466285705566407,0.0003277840709459032,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.59375,0.75,0.5625,0.7,0.8333333333333334,0.6879166666666667,0.09974272460240452,81,0.9032258064516129,0.8951612903225806,0.9274193548387096,0.8968253968253969,0.9365079365079365,0.9118279569892472,0.016905884532097053
0.03471608161926269,0.007394066667980588,0.0011311054229736328,9.871996434203265e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.71875,0.71875,0.5625,0.6666666666666666,0.7,0.6733333333333332,0.058591689778594976,113,0.6854838709677419,0.6612903225806451,0.6370967741935484,0.8492063492063492,0.7777777777777778,0.7221710189452125,0.07939788397563334
0.03671298027038574,0.002400988670814315,0.0057204246520996095,0.0028959718094498923,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5625,0.5,0.5333333333333333,0.7,0.5591666666666667,0.07418071028089294,207,0.6209677419354839,0.6209677419354839,0.6612903225806451,0.6349206349206349,0.6825396825396826,0.644137224782386,0.02419740864366722
0.03073601722717285,0.008263783644358326,0.057538414001464845,0.020531335357818408,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.71875,0.84375,0.53125,0.7666666666666667,0.7666666666666667,0.7254166666666666,0.10502479865885646,23,0.9112903225806451,0.8951612903225806,0.9919354838709677,0.9444444444444444,0.9285714285714286,0.9342805939580133,0.033223056006102175
0.03586468696594238,0.008965045343441095,0.006604814529418945,0.0039470030298349905,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.65625,0.84375,0.5,0.7333333333333333,0.7666666666666667,0.7,0.11673361174533713,53,0.9354838709677419,0.8951612903225806,0.9919354838709677,0.9523809523809523,0.9285714285714286,0.9407066052227343,0.03165313116877017
0.04859075546264648,0.015490160070688548,0.002566623687744141,0.0028139731711260777,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': Normalizer(copy=True, norm='l2')}",0.6875,0.78125,0.59375,0.7,0.8333333333333334,0.7191666666666667,0.0824473737874315,32,0.8951612903225806,0.8951612903225806,0.9112903225806451,0.8809523809523809,0.8809523809523809,0.8927035330261137,0.011258144055936567
0.05428919792175293,0.012119896302895923,0.001276683807373047,7.987049444352098e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.71875,0.78125,0.59375,0.7,0.8,0.71875,0.0727796331400482,34,0.8064516129032258,0.8064516129032258,0.8145161290322581,0.7936507936507936,0.7619047619047619,0.7965949820788529,0.018587917967154526
0.02403850555419922,0.006821840003246083,0.0008890628814697266,4.1052328586637276e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': NonScaler()}",0.59375,0.5625,0.625,0.5333333333333333,0.5333333333333333,0.5695833333333333,0.035590260840104374,202,0.6451612903225806,0.6370967741935484,0.6129032258064516,0.6349206349206349,0.5793650793650794,0.621889400921659,0.02379801405455472
0.021032047271728516,0.003687440216748261,0.0012824058532714844,0.000433362778863128,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': Binarizer(copy=True, threshold=0)}",0.53125,0.53125,0.59375,0.6333333333333333,0.7333333333333333,0.6045833333333334,0.07520111922925968,184,0.6048387096774194,0.6532258064516129,0.6612903225806451,0.5952380952380952,0.7380952380952381,0.6505376344086022,0.05086376173517009
0.020981550216674805,0.0031826264384637176,0.001149749755859375,0.00016198450933130795,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.625,0.6875,0.6875,0.7666666666666667,0.6333333333333333,0.6799999999999999,0.05064857133007584,102,0.75,0.7741935483870968,0.8145161290322581,0.7619047619047619,0.7777777777777778,0.775678443420379,0.02174430822389364
0.015331649780273437,0.006960864405481006,0.0015684127807617187,0.000538749744287251,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': MaxAbsScaler(copy=True)}",0.625,0.6875,0.6875,0.7666666666666667,0.6333333333333333,0.6799999999999999,0.05064857133007584,102,0.75,0.7741935483870968,0.8145161290322581,0.7619047619047619,0.7777777777777778,0.775678443420379,0.02174430822389364
0.02453322410583496,0.0068092882971691445,0.0015265941619873047,0.0007851676576827108,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.65625,0.84375,0.71875,0.7,0.6666666666666666,0.7170833333333333,0.0672035672002941,37,0.8306451612903226,0.782258064516129,0.7983870967741935,0.8174603174603174,0.7936507936507936,0.8044802867383511,0.017328092236770815
0.022098350524902343,0.00408590135922036,0.0015089035034179688,0.0007342449269895144,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.65625,0.6875,0.5625,0.6333333333333333,0.6666666666666666,0.64125,0.0430680985314085,155,0.7338709677419355,0.6935483870967742,0.7096774193548387,0.8095238095238095,0.7380952380952381,0.7369431643625193,0.03976240249974278
0.037917566299438474,0.008818850860944577,0.005327415466308594,0.002879301943679394,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.59375,0.5625,0.59375,0.5,0.6,0.5700000000000001,0.03737479096931513,201,0.5725806451612904,0.5725806451612904,0.5564516129032258,0.5873015873015873,0.5714285714285714,0.572068612391193,0.009765942915837803
0.025001335144042968,0.010111362525814526,0.05392799377441406,0.020946859478126197,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6875,0.75,0.6875,0.6333333333333333,0.7666666666666667,0.705,0.04811733344417352,49,0.8225806451612904,0.7741935483870968,0.8467741935483871,0.8174603174603174,0.8253968253968254,0.8172811059907833,0.02375020828363259
0.036142730712890626,0.013261426700127527,0.008092880249023438,0.006560278439494216,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.625,0.5625,0.5625,0.7,0.7333333333333333,0.6366666666666667,0.06999007866198687,158,0.6612903225806451,0.6854838709677419,0.7096774193548387,0.6587301587301587,0.8095238095238095,0.7049411162314388,0.05546061859796328
0.020847177505493163,0.010553751815974406,0.001239442825317383,0.00021207670200527857,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': Normalizer(copy=True, norm='l2')}",0.59375,0.5625,0.625,0.5333333333333333,0.7333333333333333,0.6095833333333334,0.06904105059069324,177,0.6451612903225806,0.6370967741935484,0.6129032258064516,0.6507936507936508,0.6031746031746031,0.6298259088581669,0.018570702224552288
0.034176063537597653,0.0038927777112485133,0.0010693073272705078,7.209471918105072e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.59375,0.5625,0.625,0.5333333333333333,0.7333333333333333,0.6095833333333334,0.06904105059069324,177,0.6370967741935484,0.6370967741935484,0.6048387096774194,0.6349206349206349,0.7222222222222222,0.6472350230414746,0.03944043549970491
0.0235288143157959,0.006690237537452456,0.001735544204711914,0.001773429060367569,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': NonScaler()}",0.65625,0.59375,0.46875,0.5333333333333333,0.7,0.5904166666666667,0.08296376384368725,194,0.6693548387096774,0.6693548387096774,0.7016129032258065,0.6587301587301587,0.7301587301587301,0.68584229390681,0.026424983905216824
0.022990894317626954,0.005992628969592571,0.0011826515197753905,0.00011185603735667508,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': Binarizer(copy=True, threshold=0)}",0.65625,0.78125,0.5,0.7,0.7,0.6675000000000001,0.09298857456698645,121,0.9193548387096774,0.8629032258064516,0.9838709677419355,0.9365079365079365,0.8968253968253969,0.9198924731182796,0.04037195751159429
0.02515521049499512,0.008093271870862052,0.0010690689086914062,6.765712700095347e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.625,0.75,0.59375,0.7333333333333333,0.7333333333333333,0.6870833333333334,0.06450129197672451,86,0.8951612903225806,0.8790322580645161,0.9112903225806451,0.8888888888888888,0.9047619047619048,0.8958269329237071,0.011398164590486808
0.027275991439819337,0.0036950862955397105,0.0010831832885742187,5.303050937839033e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': MaxAbsScaler(copy=True)}",0.625,0.75,0.59375,0.7333333333333333,0.7333333333333333,0.6870833333333334,0.06450129197672451,86,0.8951612903225806,0.8790322580645161,0.9112903225806451,0.8888888888888888,0.9047619047619048,0.8958269329237071,0.011398164590486808
0.040913724899291994,0.009782237441011782,0.0014902591705322266,0.00030798382347762144,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.53125,0.75,0.59375,0.6333333333333333,0.8,0.6616666666666667,0.09936080436693559,124,0.9435483870967742,0.9435483870967742,0.9919354838709677,0.9365079365079365,0.9285714285714286,0.9488223246287764,0.022253612200906433
0.03654766082763672,0.008563696665163944,0.001226949691772461,0.00014833494279287892,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.625,0.8125,0.40625,0.7333333333333333,0.6666666666666666,0.6487499999999999,0.13686469392960496,149,0.7338709677419355,0.7741935483870968,0.7741935483870968,0.8015873015873016,0.7698412698412699,0.7707373271889401,0.021612696398028614
0.030209970474243165,0.010087516325716101,0.003547811508178711,0.00022946881486887412,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.46875,0.5,0.53125,0.5333333333333333,0.7333333333333333,0.5533333333333333,0.09304456817389538,209,0.5887096774193549,0.5725806451612904,0.5403225806451613,0.5714285714285714,0.5079365079365079,0.5561955965181772,0.02877002281592641
0.049639129638671876,0.009284537772594999,0.058533859252929685,0.015122469723282258,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6875,0.8125,0.625,0.7333333333333333,0.7,0.7116666666666667,0.06142972497994038,44,0.9435483870967742,0.9112903225806451,0.9919354838709677,1.0,0.9920634920634921,0.9677675371223758,0.034610858787543025
0.03026585578918457,0.005433885317256363,0.004939556121826172,0.0034366770739808366,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.6875,0.84375,0.46875,0.7,0.7666666666666667,0.6933333333333334,0.1253148811771549,71,0.9354838709677419,0.9032258064516129,0.9919354838709677,0.9365079365079365,0.9206349206349206,0.937557603686636,0.029757034546380956
0.02692131996154785,0.00757318745217148,0.0011111259460449218,3.926330553997766e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': Normalizer(copy=True, norm='l2')}",0.71875,0.75,0.5625,0.7,0.9,0.7262500000000001,0.10799305533227589,22,0.8387096774193549,0.8306451612903226,0.8306451612903226,0.8174603174603174,0.7777777777777778,0.819047619047619,0.021731644375532547
0.03890604972839355,0.006837937206777811,0.0010822296142578125,6.131936748193186e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.625,0.53125,0.46875,0.5333333333333333,0.7666666666666667,0.585,0.10361018021625312,196,0.6451612903225806,0.6693548387096774,0.6935483870967742,0.6428571428571429,0.7222222222222222,0.6746287762416794,0.030095420271583538
0.03953847885131836,0.004734578319997671,0.0010190010070800781,8.402988324868088e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': NonScaler()}",0.625,0.46875,0.65625,0.6333333333333333,0.6,0.5966666666666667,0.06643971787350628,189,0.8951612903225806,0.532258064516129,0.8467741935483871,0.753968253968254,0.753968253968254,0.7564260112647209,0.12463837385697953
0.030864667892456055,0.009015328403602892,0.001448202133178711,0.00028938065817621736,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': Binarizer(copy=True, threshold=0)}",0.6875,0.84375,0.59375,0.7,0.5666666666666667,0.6783333333333333,0.097508902727449,105,0.9919354838709677,0.8467741935483871,1.0,0.9841269841269841,0.9206349206349206,0.948694316436252,0.05819379143681165
0.03425264358520508,0.008860574681119289,0.0011112689971923828,7.463027094654541e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.4375,0.78125,0.53125,0.6666666666666666,0.8333333333333334,0.65,0.1485754110806286,146,0.9758064516129032,0.9354838709677419,0.9516129032258065,0.9126984126984127,0.8650793650793651,0.9281362007168458,0.03766188115009005
0.025725317001342774,0.009002614027836364,0.0023583889007568358,0.002535878451930229,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': MaxAbsScaler(copy=True)}",0.4375,0.78125,0.53125,0.6666666666666666,0.8333333333333334,0.65,0.1485754110806286,146,0.9758064516129032,0.9354838709677419,0.9516129032258065,0.9126984126984127,0.8650793650793651,0.9281362007168458,0.03766188115009005
0.04709944725036621,0.00995088178396076,0.0014081478118896484,0.0002635697022251073,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.46875,0.875,0.53125,0.7,0.8333333333333334,0.6816666666666668,0.1604215367226123,93,0.9919354838709677,0.9354838709677419,0.9919354838709677,1.0,0.9365079365079365,0.9711725550435227,0.028873995078563072
0.03630366325378418,0.005167411568459092,0.0013684749603271485,0.0002331191664962339,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.5625,0.65625,0.34375,0.5666666666666667,0.7,0.5658333333333333,0.12288912120733514,204,0.6774193548387096,0.7258064516129032,0.6774193548387096,0.7222222222222222,0.6507936507936508,0.6907322068612392,0.028883822569203056
0.042100715637207034,0.006472696615978275,0.0062945842742919925,0.004338256209510903,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.53125,0.46875,0.5333333333333333,0.5666666666666667,0.5199999999999999,0.03319241044442405,214,0.6129032258064516,0.5483870967741935,0.5,0.5873015873015873,0.6190476190476191,0.5735279057859703,0.04438600597411047
0.05226430892944336,0.01802696324126628,0.05552549362182617,0.011534322884561684,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.65625,0.78125,0.625,0.7333333333333333,0.7,0.6991666666666667,0.055223661394168504,56,0.9516129032258065,0.9274193548387096,0.9919354838709677,1.0,0.9841269841269841,0.9710189452124937,0.027301071614801154
0.02761673927307129,0.0038018417644989705,0.005396270751953125,0.002431372056833659,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.6875,0.8125,0.5625,0.7,0.6333333333333333,0.6791666666666667,0.08245369070642691,104,0.9758064516129032,0.8951612903225806,1.0,1.0,0.9761904761904762,0.9694316436251921,0.038655540863206085
0.03964529037475586,0.005516149957274207,0.009481048583984375,0.00971402302969931,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': Normalizer(copy=True, norm='l2')}",0.625,0.78125,0.53125,0.5666666666666667,0.8,0.6608333333333333,0.11028215076692048,127,0.9516129032258065,0.9516129032258065,0.967741935483871,0.6984126984126984,0.8253968253968254,0.8789554531490016,0.10383203979812396
0.052169275283813474,0.010802296002531773,0.0012394905090332032,3.8450168660832384e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5625,0.78125,0.625,0.7,0.8,0.69375,0.0904848053542693,69,0.8225806451612904,0.8387096774193549,0.6370967741935484,0.8809523809523809,0.746031746031746,0.7850742447516641,0.0859043132904671
0.0319669246673584,0.0053961225401412466,0.001157999038696289,0.00048425068420088354,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': NonScaler()}",0.5,0.5,0.5,0.6666666666666666,0.5,0.5333333333333333,0.06666666666666665,212,0.5241935483870968,0.5241935483870968,0.532258064516129,0.7222222222222222,0.5238095238095238,0.5653353814644138,0.07850769059316551
0.022972297668457032,0.0038593263656488365,0.0011254310607910155,5.0208394165638244e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': Binarizer(copy=True, threshold=0)}",0.6875,0.65625,0.625,0.6666666666666666,0.6333333333333333,0.6537499999999999,0.02260776661041756,140,0.9193548387096774,0.8629032258064516,0.9919354838709677,0.9126984126984127,0.8095238095238095,0.8992831541218639,0.0609057222594262
0.021779870986938475,0.006678082350667596,0.0031024456024169923,0.0037897844109232486,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.59375,0.6875,0.5625,0.7666666666666667,0.8666666666666667,0.6954166666666667,0.1117754445305408,58,0.9193548387096774,0.782258064516129,0.9596774193548387,0.7936507936507936,0.9444444444444444,0.8798771121351766,0.0762364437612341
0.022762489318847657,0.009629027370544352,0.0013303756713867188,0.00032177344536554384,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': MaxAbsScaler(copy=True)}",0.59375,0.6875,0.5625,0.7666666666666667,0.8666666666666667,0.6954166666666667,0.1117754445305408,58,0.9193548387096774,0.782258064516129,0.9596774193548387,0.7936507936507936,0.9444444444444444,0.8798771121351766,0.0762364437612341
0.02087740898132324,0.0037004261598506272,0.0011580944061279296,0.00010253047889448822,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.59375,0.75,0.59375,0.6333333333333333,0.8666666666666667,0.6875,0.10631942176500231,84,0.9112903225806451,0.8870967741935484,0.9435483870967742,0.8968253968253969,0.8253968253968254,0.8928315412186381,0.03875359182993321
0.02565464973449707,0.0041639136200632984,0.0010912895202636718,4.1221020990925134e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6875,0.75,0.625,0.6666666666666666,0.5333333333333333,0.6525,0.07195677714974301,145,0.7016129032258065,0.6612903225806451,0.6290322580645161,0.7857142857142857,0.746031746031746,0.7047363031233999,0.05637580786118368
0.026556110382080077,0.005433030524547674,0.003903961181640625,0.0006856318382576121,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5806451612903226,0.5,0.5634920634920635,0.5,0.5288274449564773,0.035720515820544224
0.02095952033996582,0.007460338913835527,0.058658695220947264,0.012719141801108702,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.65625,0.84375,0.5,0.5333333333333333,0.7333333333333333,0.6533333333333333,0.12694733159858068,142,0.8387096774193549,0.7983870967741935,0.8709677419354839,0.7936507936507936,0.9126984126984127,0.8428827444956477,0.04490892282555727
0.024358558654785156,0.0026054966731170644,0.005601406097412109,0.004931997526247632,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.59375,0.78125,0.59375,0.7,0.7666666666666667,0.6870833333333334,0.08098139361057644,86,0.9193548387096774,0.8467741935483871,0.967741935483871,0.8492063492063492,0.9206349206349206,0.9007424475166411,0.046474949910645644
0.024947261810302733,0.0046716899717166764,0.0014322280883789062,0.000492888729657896,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': Normalizer(copy=True, norm='l2')}",0.6875,0.65625,0.625,0.6,0.6,0.63375,0.03391164991562635,163,0.7419354838709677,0.782258064516129,0.8548387096774194,0.7857142857142857,0.7063492063492064,0.7742191500256016,0.04968871108040775
0.02920565605163574,0.007508521331054058,0.002046823501586914,0.001564975020212028,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.53125,0.5,0.5333333333333333,0.5,0.5129166666666667,0.01583333333333333,215,0.5080645161290323,0.5403225806451613,0.5403225806451613,0.5634920634920635,0.5238095238095238,0.5352022529441884,0.018541844185246948
0.031222057342529298,0.00430167893124951,0.0011312007904052735,0.000369744298351744,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': NonScaler()}",0.59375,0.59375,0.53125,0.6333333333333333,0.5,0.5704166666666667,0.04804150404713731,200,0.5645161290322581,0.6290322580645161,0.6370967741935484,0.7063492063492064,0.5317460317460317,0.6137480798771121,0.06083067833705234
0.02295370101928711,0.003158359875535101,0.0010799884796142579,4.672867909216515e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': Binarizer(copy=True, threshold=0)}",0.65625,0.65625,0.5625,0.6666666666666666,0.6666666666666666,0.6416666666666666,0.03985651347856039,153,0.9112903225806451,0.8629032258064516,0.9354838709677419,0.8888888888888888,0.8412698412698413,0.8879672299027137,0.03350073937070602
0.029779052734375,0.004438578726959824,0.0010906219482421874,5.15417958246419e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.59375,0.75,0.5625,0.7,0.8333333333333334,0.6879166666666667,0.09974272460240452,81,0.9274193548387096,0.9274193548387096,0.9274193548387096,0.9285714285714286,0.9206349206349206,0.9262928827444957,0.002863952669160201
0.028767204284667967,0.010840301479298294,0.0011233806610107422,8.307647407301219e-06,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': MaxAbsScaler(copy=True)}",0.59375,0.75,0.5625,0.7,0.8333333333333334,0.6879166666666667,0.09974272460240452,81,0.9274193548387096,0.9274193548387096,0.9274193548387096,0.9285714285714286,0.9206349206349206,0.9262928827444957,0.002863952669160201
0.020833158493041994,0.007822116199051252,0.006228208541870117,0.00725437397983615,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5,0.8125,0.65625,0.6333333333333333,0.8,0.6804166666666667,0.11584232579003431,99,0.9193548387096774,0.9193548387096774,0.9193548387096774,0.8492063492063492,0.8968253968253969,0.9008192524321557,0.02724168327383041
0.027222108840942384,0.005176369192616825,0.0011583328247070312,6.184903300248415e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6875,0.6875,0.46875,0.6,0.5666666666666667,0.6020833333333334,0.08201033132748853,186,0.6854838709677419,0.6854838709677419,0.6209677419354839,0.7619047619047619,0.7380952380952381,0.6983870967741935,0.04886301924129875
0.024156951904296876,0.006135704836706763,0.006037187576293945,0.004633244150874983,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.023645973205566405,0.00954053105063982,0.06545872688293457,0.016400468742250054,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6875,0.6875,0.46875,0.7,0.7333333333333333,0.6554166666666668,0.09482806077902843,130,0.8790322580645161,0.7338709677419355,0.9274193548387096,0.8968253968253969,0.9126984126984127,0.8699692780337941,0.06993200849677174
0.02785491943359375,0.01055374112070955,0.004806137084960938,0.001992281710501001,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.71875,0.78125,0.5,0.7,0.7666666666666667,0.6933333333333334,0.10116852002695526,71,0.9032258064516129,0.8709677419354839,1.0,0.9444444444444444,0.9047619047619048,0.9246799795186893,0.044284885162570085
0.028117036819458006,0.003944920546841455,0.0011967658996582032,0.00016089616293717848,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': Normalizer(copy=True, norm='l2')}",0.71875,0.71875,0.53125,0.6,0.6666666666666666,0.6470833333333333,0.07251197219157061,151,0.7741935483870968,0.8629032258064516,0.8870967741935484,0.7063492063492064,0.7380952380952381,0.7937275985663084,0.07016351250587502
0.034085559844970706,0.006350137027791578,0.001078653335571289,5.24543414932031e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.59375,0.53125,0.53125,0.6666666666666666,0.5,0.5645833333333333,0.05943892757369626,206,0.5645161290322581,0.6209677419354839,0.6209677419354839,0.7619047619047619,0.5238095238095238,0.6184331797235023,0.08057000374652581
0.032037973403930664,0.003702225720221601,0.0008851051330566406,0.00010647738508344711,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': NonScaler()}",0.59375,0.75,0.5,0.7,0.5,0.60875,0.10213349107907749,182,0.5967741935483871,0.7016129032258065,0.7661290322580645,0.7142857142857143,0.5238095238095238,0.6605222734254992,0.08773360648829431
0.024264717102050783,0.006605187808939604,0.0010979175567626953,8.711763986272872e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': Binarizer(copy=True, threshold=0)}",0.65625,0.71875,0.5625,0.6666666666666666,0.5,0.6208333333333333,0.07867169828541334,171,0.9274193548387096,0.8387096774193549,0.9274193548387096,0.8968253968253969,0.6984126984126984,0.8577572964669737,0.08600631830191534
0.02500185966491699,0.0054699860002047195,0.0014829158782958985,0.0006609886587930534,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.65625,0.8125,0.625,0.7333333333333333,0.8333333333333334,0.7320833333333334,0.08238628526642042,21,0.7096774193548387,0.9032258064516129,0.9193548387096774,0.8095238095238095,0.8888888888888888,0.8461341525857655,0.07798647390043248
0.0221097469329834,0.0031191352605108758,0.002850961685180664,0.003296422483475053,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': MaxAbsScaler(copy=True)}",0.625,0.75,0.6875,0.7,0.8333333333333334,0.7191666666666667,0.06960204339273701,32,0.9274193548387096,0.8064516129032258,0.7983870967741935,0.8015873015873016,0.8650793650793651,0.8397849462365592,0.05020667346800566
0.02173638343811035,0.003290493289917386,0.0015292644500732421,0.0008432895732065964,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5,0.8125,0.625,0.7,0.8,0.6875,0.11618950038622251,84,0.9193548387096774,0.8951612903225806,0.9435483870967742,0.8968253968253969,0.9047619047619048,0.9119303635432667,0.017975376949903324
0.02456951141357422,0.007431827158273254,0.0020769596099853515,0.001845382705073212,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6875,0.6875,0.46875,0.5333333333333333,0.4666666666666667,0.56875,0.0998783982873396,203,0.6774193548387096,0.6854838709677419,0.6209677419354839,0.7936507936507936,0.7301587301587301,0.7015360983102918,0.057680019970304724
0.029053163528442384,0.005762293878099169,0.004003095626831055,0.000613104238178414,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,218,0.5,0.5,0.5,0.6111111111111112,0.5,0.5222222222222223,0.04444444444444447
0.03147878646850586,0.005027515538929777,0.06133236885070801,0.015118604131520975,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6875,0.8125,0.53125,0.6,0.7,0.66625,0.09549214627392139,122,0.8790322580645161,0.8387096774193549,0.9274193548387096,0.746031746031746,0.8492063492063492,0.8480798771121352,0.059591431013542244
0.026541614532470705,0.011474515718838146,0.003323936462402344,0.0002430075844151889,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.65625,0.71875,0.53125,0.7333333333333333,0.7333333333333333,0.6745833333333333,0.07711598407593588,111,0.8629032258064516,0.8064516129032258,1.0,0.8888888888888888,0.9126984126984127,0.8941884280593959,0.06362909085796152
0.020531606674194337,0.0023842290225877852,0.0013247013092041015,0.00025740999220684615,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': Normalizer(copy=True, norm='l2')}",0.625,0.71875,0.5625,0.6666666666666666,0.6,0.6345833333333333,0.05403188359149109,159,0.8790322580645161,0.8467741935483871,0.8548387096774194,0.8650793650793651,0.6746031746031746,0.8240655401945725,0.07550515681781585
0.03357949256896973,0.009117929541709995,0.0011872291564941407,9.507164384491821e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.59375,0.625,0.5,0.7333333333333333,0.5,0.5904166666666667,0.08715806203546392,194,0.5725806451612904,0.6209677419354839,0.5080645161290323,0.7380952380952381,0.5238095238095238,0.5927035330261137,0.08276797896703779
0.031313753128051756,0.009075437665092511,0.0009679794311523438,9.165140140083535e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': NonScaler()}",0.75,0.59375,0.625,0.6333333333333333,0.6,0.6404166666666666,0.05675850401285941,156,0.7580645161290323,0.6290322580645161,0.8225806451612904,0.6111111111111112,0.5555555555555556,0.6752688172043012,0.09913747836542172
0.029607582092285156,0.0079572518478788,0.0020791053771972655,0.0010212598495793444,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': Binarizer(copy=True, threshold=0)}",0.6875,0.71875,0.5625,0.6666666666666666,0.6333333333333333,0.6537499999999999,0.05343090033970147,140,0.8951612903225806,0.8548387096774194,0.8951612903225806,0.9206349206349206,0.8015873015873016,0.8734767025089605,0.041664855635829154
0.02863755226135254,0.006267999357708004,0.0013735294342041016,0.0005227415074315873,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.53125,0.6875,0.625,0.6666666666666666,0.8,0.6620833333333334,0.08738484485945554,123,0.8790322580645161,0.8387096774193549,0.9274193548387096,0.9206349206349206,0.7063492063492064,0.8544290834613415,0.08061123808006981
0.016656494140625,0.006818457952379321,0.0024983882904052734,0.00281399192351054,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': MaxAbsScaler(copy=True)}",0.59375,0.71875,0.5625,0.7,0.7666666666666667,0.6683333333333333,0.07743052441454283,118,0.9032258064516129,0.8225806451612904,0.9354838709677419,0.8809523809523809,0.8571428571428571,0.8798771121351766,0.03856983493591891
0.023782110214233397,0.0020891704923451343,0.001191568374633789,0.0001618702660121261,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.53125,0.78125,0.625,0.6666666666666666,0.7666666666666667,0.6741666666666666,0.09265190230103212,112,0.9193548387096774,0.8951612903225806,0.9435483870967742,0.8253968253968254,0.873015873015873,0.891295442908346,0.04052015575169576
0.018035411834716797,0.008119186919447102,0.0011468887329101562,0.00015729632825697718,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.71875,0.65625,0.5625,0.6666666666666666,0.5333333333333333,0.6275,0.06896305371557858,170,0.6612903225806451,0.6209677419354839,0.5725806451612904,0.753968253968254,0.6984126984126984,0.6614439324116743,0.06238985358459035
0.03266839981079102,0.0022765557117578436,0.00556488037109375,0.0023003899916911996,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.46875,0.5,0.5,0.5,0.5333333333333333,0.5004166666666666,0.020429417786885437,217,0.5564516129032258,0.5,0.5,0.6190476190476191,0.6190476190476191,0.5589093701996928,0.053253894345047584
0.0257080078125,0.010468437460880097,0.06263198852539062,0.015253607342179565,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6875,0.71875,0.5,0.6,0.7666666666666667,0.6545833333333333,0.09448691855372246,136,0.9193548387096774,0.8387096774193549,0.8870967741935484,0.753968253968254,0.9126984126984127,0.8623655913978494,0.061159436949175576
0.027176856994628906,0.006413805973536688,0.007307815551757813,0.003736402396388089,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.625,0.78125,0.5625,0.7333333333333333,0.7666666666666667,0.69375,0.08543190920909535,69,0.8870967741935484,0.8870967741935484,0.9193548387096774,0.8412698412698413,0.8650793650793651,0.8799795186891961,0.02596990636121296
0.024997663497924805,0.0031324641919682236,0.0012414932250976562,9.649367500748431e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': Normalizer(copy=True, norm='l2')}",0.59375,0.65625,0.625,0.5666666666666667,0.8333333333333334,0.655,0.09408366548509425,132,0.6451612903225806,0.8306451612903226,0.8467741935483871,0.626984126984127,0.7301587301587301,0.7359447004608295,0.09099325843204156
0.041388320922851565,0.013764364200353455,0.0039975643157958984,0.005390346728530114,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.65625,0.59375,0.65625,0.7333333333333333,0.5,0.6279166666666667,0.07777951386951307,167,0.8064516129032258,0.6209677419354839,0.7258064516129032,0.7698412698412699,0.6190476190476191,0.7084229390681004,0.07657725261655636
0.028624963760375977,0.010047489012641847,0.0011045455932617188,0.0004688562408067251,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': NonScaler()}",0.6875,0.71875,0.59375,0.6333333333333333,0.8666666666666667,0.7,0.09382867069528614,53,0.8387096774193549,0.782258064516129,0.8709677419354839,0.7777777777777778,0.7936507936507936,0.8126728110599079,0.036278849697871644
0.026466226577758788,0.005781953669201642,0.0010966777801513672,6.0663245005754385e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': Binarizer(copy=True, threshold=0)}",0.6875,0.59375,0.53125,0.6666666666666666,0.5666666666666667,0.6091666666666666,0.05925755929274621,181,0.8548387096774194,0.7580645161290323,0.8951612903225806,0.9206349206349206,0.7936507936507936,0.8444700460829493,0.06087152300903139
0.02510824203491211,0.011967393562836626,0.0028708934783935546,0.003294583970920796,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.65625,0.75,0.5,0.7666666666666667,0.8333333333333334,0.70125,0.11543697173975263,50,0.7983870967741935,0.8548387096774194,0.8951612903225806,0.8253968253968254,0.8492063492063492,0.8445980542754736,0.032208346832528205
0.027997493743896484,0.009598000915967816,0.0011479377746582032,0.00014965649487821883,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': MaxAbsScaler(copy=True)}",0.65625,0.75,0.5,0.7666666666666667,0.8333333333333334,0.70125,0.11543697173975263,50,0.7983870967741935,0.8548387096774194,0.8951612903225806,0.8253968253968254,0.8492063492063492,0.8445980542754736,0.032208346832528205
0.017020368576049806,0.007306421792744762,0.0031249523162841797,0.003080649093673624,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5625,0.71875,0.5625,0.6,0.8,0.64875,0.09490126448051155,148,0.8951612903225806,0.8387096774193549,0.9435483870967742,0.8571428571428571,0.8888888888888888,0.8846902201740912,0.03595726203293117
0.024649715423583983,0.0029953375608219182,0.0011507511138916016,0.00014737991368762613,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6875,0.75,0.625,0.6666666666666666,0.5666666666666667,0.6591666666666667,0.06137317546507323,129,0.7016129032258065,0.6612903225806451,0.6290322580645161,0.7857142857142857,0.7222222222222222,0.6999743983614951,0.053625038250676
0.02773895263671875,0.0017201361981513123,0.004476070404052734,0.001682783902493654,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.53125,0.5625,0.5,0.5666666666666667,0.6666666666666666,0.5654166666666666,0.05605057240266744,205,0.717741935483871,0.5887096774193549,0.5,0.7936507936507936,0.6031746031746031,0.6406554019457246,0.10318627254196114
0.020101261138916016,0.009074681026571751,0.04300813674926758,0.008106811131636417,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.65625,0.84375,0.5,0.5333333333333333,0.7333333333333333,0.6533333333333333,0.12694733159858068,142,0.8387096774193549,0.8629032258064516,0.8709677419354839,0.7936507936507936,0.9126984126984127,0.8557859703020994,0.039172816011776315
0.021953392028808593,0.007220003555319827,0.005060005187988281,0.003263954135427235,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.65625,0.71875,0.5,0.6666666666666666,0.7333333333333333,0.655,0.08290096166175905,132,0.9354838709677419,0.8709677419354839,1.0,0.8809523809523809,0.8968253968253969,0.9168458781362008,0.0470232898742332
0.02290210723876953,0.006062440502022543,0.001168060302734375,1.45489260571742e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': Normalizer(copy=True, norm='l2')}",0.6875,0.6875,0.625,0.5666666666666667,0.8666666666666667,0.6866666666666666,0.10060235252385173,92,0.8629032258064516,0.75,0.8064516129032258,0.7301587301587301,0.873015873015873,0.8045058883768561,0.057629930870856064
0.025043010711669922,0.014069997354045242,0.0011017322540283203,0.00010672761823171491,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.6875,0.5625,0.7,0.5333333333333333,0.5966666666666667,0.08179411823461254,189,0.5080645161290323,0.7661290322580645,0.8467741935483871,0.8333333333333334,0.5,0.6908602150537635,0.15499357548066992
