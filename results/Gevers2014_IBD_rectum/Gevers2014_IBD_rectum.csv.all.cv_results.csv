mean_fit_time,std_fit_time,mean_score_time,std_score_time,param_clf,param_clf__max_depth,param_scl,param_clf__n_estimators,param_clf__learning_rate,param_clf__min_child_weight,param_clf__n_neighbors,param_clf__C,param_clf__loss,params,split0_test_score,split1_test_score,split2_test_score,split3_test_score,split4_test_score,mean_test_score,std_test_score,rank_test_score,split0_train_score,split1_train_score,split2_train_score,split3_train_score,split4_train_score,mean_train_score,std_train_score
0.3416773319244385,0.015608930956820873,0.001341390609741211,0.0008704396133824709,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",4,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 4, 'scl': NonScaler()}",0.6052631578947368,0.5526315789473685,0.6944444444444444,0.6388888888888888,0.7222222222222222,0.6426900584795321,0.06087632224352141,132,0.910958904109589,0.8767123287671232,0.8783783783783784,0.8581081081081081,0.9256756756756757,0.8899666790077749,0.024660661018316647
0.030289554595947267,0.01153887087291491,0.0011493206024169923,0.0003213901052789002,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",8,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 8, 'scl': NonScaler()}",0.6052631578947368,0.631578947368421,0.6388888888888888,0.6666666666666666,0.7222222222222222,0.6529239766081871,0.03978757589046562,115,0.9794520547945206,1.0,0.972972972972973,0.918918918918919,0.9864864864864865,0.9715660866345799,0.02781006239648763
0.02127227783203125,0.007807137322082352,0.0009975910186767578,0.0001282998052044411,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",16,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 16, 'scl': NonScaler()}",0.6052631578947368,0.631578947368421,0.6111111111111112,0.6944444444444444,0.7222222222222222,0.6529239766081872,0.04690773012901865,111,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.02384605407714844,0.005264595967856966,0.0010466575622558594,0.0001422171920453875,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",32,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 32, 'scl': NonScaler()}",0.6052631578947368,0.631578947368421,0.6111111111111112,0.6944444444444444,0.7222222222222222,0.6529239766081872,0.04690773012901865,111,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.02548971176147461,0.004480431204171507,0.000951385498046875,0.00010928964114619481,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",64,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 64, 'scl': NonScaler()}",0.6052631578947368,0.631578947368421,0.6111111111111112,0.6944444444444444,0.7222222222222222,0.6529239766081872,0.04690773012901865,111,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.03856935501098633,0.004958755163442301,0.0035142898559570312,0.003560594693339937,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),5,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 5, 'scl': NonScaler()}",0.7368421052631579,0.6842105263157895,0.8888888888888888,0.8333333333333334,0.75,0.7786549707602339,0.07298001945250016,9,0.9657534246575342,0.952054794520548,0.9797297297297297,0.9864864864864865,0.9662162162162162,0.9700481303221029,0.012007007255803408
0.05784478187561035,0.011035241279217428,0.004707527160644531,0.005279478926514039,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),10,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 10, 'scl': NonScaler()}",0.7368421052631579,0.7368421052631579,0.7777777777777778,0.8333333333333334,0.7222222222222222,0.7614035087719299,0.040456679664159036,33,0.9931506849315068,0.9726027397260274,0.9864864864864865,1.0,0.9864864864864865,0.9877452795261015,0.009075926541352862
0.0805161476135254,0.008000525257575285,0.0032249927520751954,0.0014233327476613298,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),15,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 15, 'scl': NonScaler()}",0.7105263157894737,0.7368421052631579,0.7777777777777778,0.9166666666666666,0.75,0.7783625730994151,0.07246862340490427,10,0.9931506849315068,0.9931506849315068,0.9932432432432432,1.0,0.9864864864864865,0.9932062199185487,0.004273588753945368
0.10478711128234863,0.01291693487481862,0.010406732559204102,0.005673150215627123,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),20,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 20, 'scl': NonScaler()}",0.7368421052631579,0.7894736842105263,0.7777777777777778,0.8888888888888888,0.75,0.7885964912280701,0.053562271532352705,4,0.9931506849315068,0.9931506849315068,1.0,1.0,0.9932432432432432,0.9959089226212514,0.003340521668554486
0.11756887435913085,0.010111135676295489,0.009176301956176757,0.004811131702164856,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),25,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 25, 'scl': NonScaler()}",0.7368421052631579,0.7631578947368421,0.6944444444444444,0.9166666666666666,0.75,0.7722222222222223,0.07581730952257101,13,1.0,1.0,1.0,1.0,0.9932432432432432,0.9986486486486486,0.0027027027027027193
0.13198065757751465,0.00989897393628562,0.008591270446777344,0.005668230359228002,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),30,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 30, 'scl': NonScaler()}",0.7105263157894737,0.7894736842105263,0.7222222222222222,0.8888888888888888,0.75,0.7722222222222223,0.06435671850381636,13,1.0,1.0,1.0,1.0,0.9932432432432432,0.9986486486486486,0.0027027027027027193
0.13422927856445313,0.04361117855591606,0.008674287796020507,0.004900322016166029,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),35,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 35, 'scl': NonScaler()}",0.7105263157894737,0.7894736842105263,0.75,0.9166666666666666,0.7222222222222222,0.7777777777777778,0.07457573535004004,11,1.0,0.9931506849315068,1.0,1.0,0.9932432432432432,0.99727878563495,0.003332921861511131
0.18854498863220215,0.027566361561248063,0.005666303634643555,0.0018052008999570204,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),40,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 40, 'scl': NonScaler()}",0.7105263157894737,0.7894736842105263,0.75,0.8611111111111112,0.75,0.7722222222222223,0.05097624289839585,13,1.0,0.9931506849315068,1.0,1.0,0.9932432432432432,0.99727878563495,0.003332921861511131
0.19937262535095215,0.026455046787633864,0.011629104614257812,0.004828595131187926,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),45,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 45, 'scl': NonScaler()}",0.7105263157894737,0.7894736842105263,0.7222222222222222,0.8888888888888888,0.75,0.7722222222222223,0.06435671850381636,13,1.0,1.0,1.0,1.0,0.9932432432432432,0.9986486486486486,0.0027027027027027193
0.21023883819580078,0.020714372513643615,0.01300063133239746,0.004100602632052403,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),50,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 50, 'scl': NonScaler()}",0.7368421052631579,0.7894736842105263,0.7222222222222222,0.8888888888888888,0.7777777777777778,0.7830409356725145,0.05849122690081865,8,1.0,0.9931506849315068,1.0,1.0,1.0,0.9986301369863014,0.0027397260273972716
0.17831029891967773,0.010111867989621543,0.002195596694946289,0.0014361622148014567,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.001,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.001, 'scl': NonScaler()}",0.6052631578947368,0.6052631578947368,0.6944444444444444,0.6944444444444444,0.6944444444444444,0.6587719298245615,0.04368972933034323,106,0.8972602739726028,0.8561643835616438,0.8445945945945946,0.8378378378378378,0.8918918918918919,0.8655497963717143,0.02447292171764186
0.1760035991668701,0.015688877729755538,0.001169109344482422,3.693275404575829e-05,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.01,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.01, 'scl': NonScaler()}",0.631578947368421,0.7105263157894737,0.7777777777777778,0.7222222222222222,0.6944444444444444,0.7073099415204679,0.04711505410423255,75,0.9178082191780822,0.952054794520548,0.9324324324324325,0.9054054054054054,0.9594594594594594,0.9334320621991855,0.02027229039212014
0.1607311725616455,0.01378498213816967,0.001265573501586914,0.0001051849595608109,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.1,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.1, 'scl': NonScaler()}",0.7105263157894737,0.6842105263157895,0.7777777777777778,0.8333333333333334,0.7777777777777778,0.7567251461988305,0.05319387738604365,37,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.15788741111755372,0.018311575182337534,0.0032720088958740233,0.004103493203369481,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.2,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.2, 'scl': NonScaler()}",0.6052631578947368,0.7368421052631579,0.7222222222222222,0.8333333333333334,0.8055555555555556,0.7406432748538012,0.07935566931858697,49,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.1560889720916748,0.013541069758481366,0.0014415740966796874,0.0004728403577289839,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.5,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.5, 'scl': NonScaler()}",0.631578947368421,0.6578947368421053,0.7222222222222222,0.8888888888888888,0.75,0.7301169590643275,0.09010213872996556,58,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.16562881469726562,0.005955885659263956,0.016492319107055665,0.006509791876322298,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.001,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.001, 'scl': NonScaler()}",0.5526315789473685,0.5789473684210527,0.6944444444444444,0.5833333333333334,0.5833333333333334,0.5985380116959065,0.04929828029939187,164,0.7191780821917808,0.7191780821917808,0.668918918918919,0.6891891891891891,0.7162162162162162,0.7025360977415771,0.0202450567510303
0.17227492332458497,0.004136978042228984,0.019286155700683594,0.004531731048278224,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.01,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.01, 'scl': NonScaler()}",0.6052631578947368,0.6052631578947368,0.75,0.75,0.5833333333333334,0.6587719298245613,0.07491659464139008,107,0.773972602739726,0.7534246575342466,0.7905405405405406,0.7432432432432432,0.7837837837837838,0.768992965568308,0.017962647309834722
0.16790261268615722,0.014147193746510026,0.020476818084716797,0.003152487571893765,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.1,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.1, 'scl': NonScaler()}",0.6578947368421053,0.8157894736842105,0.8055555555555556,0.8611111111111112,0.6666666666666666,0.7614035087719297,0.08311194558828426,34,0.8698630136986302,0.910958904109589,0.8716216216216216,0.8243243243243243,0.8851351351351351,0.87238059977786,0.02816836393994353
0.1744786262512207,0.012605958220919531,0.02088441848754883,0.0070331259491966435,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.2,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.2, 'scl': NonScaler()}",0.6842105263157895,0.7631578947368421,0.75,0.8333333333333334,0.6666666666666666,0.7394736842105264,0.05972647203701476,53,0.9178082191780822,0.9315068493150684,0.918918918918919,0.8986486486486487,0.9256756756756757,0.9185116623472787,0.01109412434306249
0.18742017745971679,0.022627764407549433,0.014314365386962891,0.00499958960465078,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.5,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.5, 'scl': NonScaler()}",0.5526315789473685,0.6842105263157895,0.6944444444444444,0.7222222222222222,0.75,0.6807017543859649,0.06801373235148418,91,0.9863013698630136,1.0,0.9864864864864865,0.9864864864864865,0.9864864864864865,0.9891521658644946,0.005424390895068473
1.3647605895996093,0.12461566874666165,0.06640892028808594,0.0035235127353134684,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",4,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 4, 'scl': NonScaler()}",0.7368421052631579,0.8157894736842105,0.8333333333333334,0.8611111111111112,0.6944444444444444,0.7883040935672515,0.06251705420344761,6,0.9383561643835616,0.958904109589041,0.9459459459459459,0.9324324324324325,0.9459459459459459,0.9443169196593854,0.008886677708056326
1.4437815189361571,0.1269152217645658,0.0770723819732666,0.006770584099474644,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",8,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 8, 'scl': NonScaler()}",0.6842105263157895,0.7894736842105263,0.8055555555555556,0.8888888888888888,0.75,0.783625730994152,0.06724510521698798,7,1.0,0.9931506849315068,0.9932432432432432,0.9932432432432432,0.9797297297297297,0.9918733802295445,0.00661656637553746
1.4040894508361816,0.04041424321130871,0.07661795616149902,0.007547534867680839,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",16,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 16, 'scl': NonScaler()}",0.7368421052631579,0.7894736842105263,0.7777777777777778,0.8888888888888888,0.8333333333333334,0.8052631578947368,0.051898731537622894,1,1.0,1.0,1.0,1.0,1.0,1.0,0.0
1.379217767715454,0.052860616680356465,0.08627495765686036,0.009360341185967269,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",32,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 32, 'scl': NonScaler()}",0.7368421052631579,0.7894736842105263,0.7777777777777778,0.8888888888888888,0.8333333333333334,0.8052631578947368,0.051898731537622894,1,1.0,1.0,1.0,1.0,1.0,1.0,0.0
1.3624956130981445,0.08356835737168797,0.07592077255249023,0.00712034516191785,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",64,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=16, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 64, 'scl': NonScaler()}",0.7368421052631579,0.7894736842105263,0.7777777777777778,0.8888888888888888,0.8333333333333334,0.8052631578947368,0.051898731537622894,1,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.044035911560058594,0.010324342570805636,0.003947687149047851,0.004017105676182645,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",4,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 4, 'scl': NonScaler()}",0.6052631578947368,0.8157894736842105,0.8611111111111112,0.8055555555555556,0.5833333333333334,0.7342105263157894,0.11596581173547427,57,0.8767123287671232,0.8561643835616438,0.8445945945945946,0.8513513513513513,0.9054054054054054,0.8668456127360237,0.02206117991770357
0.04180312156677246,0.0067860607359939516,0.0018323898315429688,4.525322806496787e-05,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",8,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 8, 'scl': NonScaler()}",0.6052631578947368,0.7631578947368421,0.8055555555555556,0.8333333333333334,0.6111111111111112,0.7236842105263158,0.09693324242251916,62,0.952054794520548,0.9452054794520548,0.918918918918919,0.9527027027027027,0.9459459459459459,0.9429655683080341,0.012406184095061563
0.040012454986572264,0.007396529508644451,0.006150960922241211,0.0049517055131447635,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",16,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 16, 'scl': NonScaler()}",0.6842105263157895,0.6578947368421053,0.8888888888888888,0.7777777777777778,0.6944444444444444,0.7406432748538011,0.08428765149162842,50,0.9863013698630136,0.9931506849315068,0.9864864864864865,0.9864864864864865,0.9932432432432432,0.9891336542021474,0.00331849623699318
0.04213771820068359,0.012832469605041365,0.007991886138916016,0.00810734674778639,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",32,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 32, 'scl': NonScaler()}",0.7105263157894737,0.6842105263157895,0.8888888888888888,0.6944444444444444,0.7222222222222222,0.7400584795321639,0.07555184391513403,51,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.03971872329711914,0.010538186719814917,0.0018725872039794921,5.1737249170543684e-05,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",64,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 64, 'scl': NonScaler()}",0.6842105263157895,0.6842105263157895,0.8888888888888888,0.75,0.7222222222222222,0.7459064327485381,0.07567622034185027,43,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.11875195503234863,0.0074063268406363274,0.005671405792236328,0.00493238326195376,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.6842105263157895,0.7631578947368421,0.7222222222222222,0.8888888888888888,0.8055555555555556,0.7728070175438596,0.07077956335478451,12,1.0,1.0,1.0,1.0,0.9932432432432432,0.9986486486486486,0.0027027027027027193
0.10923409461975098,0.007235010900662851,0.001623058319091797,8.003447141641299e-05,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.6842105263157895,0.7894736842105263,0.6944444444444444,0.8611111111111112,0.8055555555555556,0.7669590643274855,0.06777447277109189,27,0.9794520547945206,0.9726027397260274,1.0,0.9797297297297297,0.9797297297297297,0.9823028507960014,0.009259051642623686
0.11015257835388184,0.018405924897487342,0.003669452667236328,0.004046295939669805,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.6578947368421053,0.7105263157894737,0.7777777777777778,0.8888888888888888,0.7222222222222222,0.7514619883040936,0.0785674201318386,38,0.9246575342465754,0.9246575342465754,0.9594594594594594,0.9121621621621622,0.9391891891891891,0.9320251758607924,0.016168281310297603
0.16240887641906737,0.006975706310678379,0.004120731353759765,0.003893179560359581,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.631578947368421,0.7631578947368421,0.7222222222222222,0.8611111111111112,0.8611111111111112,0.7678362573099415,0.08725706675004356,21,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.13092484474182128,0.01770738194286314,0.003695821762084961,0.0040771422751513615,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.6578947368421053,0.7894736842105263,0.6944444444444444,0.8333333333333334,0.8333333333333334,0.7616959064327486,0.07257119091222723,29,0.9794520547945206,0.9794520547945206,1.0,0.9797297297297297,0.9797297297297297,0.9836727138097002,0.008164587513090786
0.13222689628601075,0.03626531700918449,0.0062105655670166016,0.004192206117270071,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.6578947368421053,0.7105263157894737,0.8055555555555556,0.8611111111111112,0.7222222222222222,0.7514619883040936,0.07243558228002944,38,0.9246575342465754,0.9246575342465754,0.9594594594594594,0.9054054054054054,0.9391891891891891,0.930673824509441,0.01795554909311392
0.18042559623718263,0.026373237611409334,0.004235172271728515,0.004526047761459962,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.6052631578947368,0.7631578947368421,0.7222222222222222,0.8888888888888888,0.8611111111111112,0.7681286549707602,0.10186859222417158,18,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.13282861709594726,0.011487231462797412,0.005816078186035157,0.00794545792780862,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.6578947368421053,0.7894736842105263,0.6944444444444444,0.8333333333333334,0.8333333333333334,0.7616959064327486,0.07257119091222723,29,0.9794520547945206,0.9794520547945206,1.0,0.9797297297297297,0.9797297297297297,0.9836727138097002,0.008164587513090786
0.1144484043121338,0.017157327725510613,0.0041943550109863285,0.004824765907878249,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.6578947368421053,0.7105263157894737,0.8055555555555556,0.8611111111111112,0.7222222222222222,0.7514619883040936,0.07243558228002944,38,0.9246575342465754,0.9246575342465754,0.9594594594594594,0.9054054054054054,0.9391891891891891,0.930673824509441,0.01795554909311392
0.1755690097808838,0.012001719814052653,0.002925682067871094,0.0016103484497740918,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.6052631578947368,0.7631578947368421,0.7222222222222222,0.8888888888888888,0.8611111111111112,0.7681286549707602,0.10186859222417158,18,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.14883880615234374,0.033331128369224174,0.004334926605224609,0.004858065074825494,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.6578947368421053,0.7894736842105263,0.6944444444444444,0.8333333333333334,0.8333333333333334,0.7616959064327486,0.07257119091222723,29,0.9794520547945206,0.9794520547945206,1.0,0.9797297297297297,0.9797297297297297,0.9836727138097002,0.008164587513090786
0.12230730056762695,0.02313094805066422,0.004080009460449219,0.003905437759777368,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.6578947368421053,0.7105263157894737,0.8055555555555556,0.8611111111111112,0.7222222222222222,0.7514619883040936,0.07243558228002944,38,0.9246575342465754,0.9246575342465754,0.9594594594594594,0.9054054054054054,0.9391891891891891,0.930673824509441,0.01795554909311392
0.17000899314880372,0.012335869480042142,0.005887269973754883,0.004925104408287259,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.6052631578947368,0.7631578947368421,0.7222222222222222,0.8888888888888888,0.8611111111111112,0.7681286549707602,0.10186859222417158,18,1.0,1.0,1.0,1.0,1.0,1.0,0.0
0.165061616897583,0.014132178478167352,0.0028619766235351562,0.0016488150523027894,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.6578947368421053,0.7894736842105263,0.6944444444444444,0.8333333333333334,0.8333333333333334,0.7616959064327486,0.07257119091222723,29,0.9794520547945206,0.9794520547945206,1.0,0.9797297297297297,0.9797297297297297,0.9836727138097002,0.008164587513090786
0.12519497871398927,0.01181693282517635,0.006321907043457031,0.00553471490725802,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.6578947368421053,0.7105263157894737,0.8055555555555556,0.8611111111111112,0.7222222222222222,0.7514619883040936,0.07243558228002944,38,0.9246575342465754,0.9246575342465754,0.9594594594594594,0.9054054054054054,0.9391891891891891,0.930673824509441,0.01795554909311392
0.08601603507995606,0.01022189969568678,0.022040033340454103,0.004878395708806654,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",32,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 32, 'scl': NonScaler()}",0.7105263157894737,0.7105263157894737,0.75,0.8333333333333334,0.8333333333333334,0.7675438596491229,0.055617078891745136,22,1.0,1.0,1.0,1.0,0.9932432432432432,0.9986486486486486,0.0027027027027027193
0.07644867897033691,0.006089031794516098,0.022184276580810548,0.004690478204444888,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",38,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 38, 'scl': NonScaler()}",0.7105263157894737,0.7105263157894737,0.75,0.8333333333333334,0.8333333333333334,0.7675438596491229,0.055617078891745136,22,1.0,1.0,1.0,1.0,0.9932432432432432,0.9986486486486486,0.0027027027027027193
0.0761932373046875,0.00844765136031325,0.021036052703857423,0.008027438507071353,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",45,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 45, 'scl': NonScaler()}",0.7105263157894737,0.7105263157894737,0.75,0.8333333333333334,0.8333333333333334,0.7675438596491229,0.055617078891745136,22,1.0,1.0,1.0,1.0,0.9932432432432432,0.9986486486486486,0.0027027027027027193
0.0682459831237793,0.0074605708086534555,0.018899917602539062,0.00656030482371921,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",53,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 53, 'scl': NonScaler()}",0.7105263157894737,0.7105263157894737,0.75,0.8333333333333334,0.8333333333333334,0.7675438596491229,0.055617078891745136,22,1.0,1.0,1.0,1.0,0.9932432432432432,0.9986486486486486,0.0027027027027027193
0.07151923179626465,0.008711721911766872,0.024374675750732423,0.012948586574346294,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",64,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 64, 'scl': NonScaler()}",0.7105263157894737,0.7105263157894737,0.75,0.8333333333333334,0.8333333333333334,0.7675438596491229,0.055617078891745136,22,1.0,1.0,1.0,1.0,0.9932432432432432,0.9986486486486486,0.0027027027027027193
0.030945873260498045,0.00854489281449315,0.003553962707519531,0.0006184191460103405,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': NonScaler()}",0.5526315789473685,0.631578947368421,0.6944444444444444,0.6388888888888888,0.6388888888888888,0.6312865497076022,0.045367831579942126,143,0.7465753424657534,0.7945205479452054,0.6959459459459459,0.7567567567567568,0.7702702702702703,0.7528137726767863,0.03265761553929938
0.37528352737426757,0.05992423579600574,0.0033544063568115234,0.00015967571313312462,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': Binarizer(copy=True, threshold=0)}",0.6842105263157895,0.7105263157894737,0.75,0.7777777777777778,0.6111111111111112,0.7067251461988304,0.057592690734669605,76,0.7876712328767124,0.8904109589041096,0.8445945945945946,0.8108108108108109,0.8108108108108109,0.8288596815994076,0.03573278328503237
0.423518705368042,0.06360999018732563,0.0045430660247802734,0.0012352028071195016,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5789473684210527,0.5,0.5277777777777778,0.75,0.5833333333333334,0.5880116959064328,0.08685441069018143,171,0.726027397260274,0.773972602739726,0.7297297297297297,0.7297297297297297,0.7635135135135135,0.7445945945945946,0.020038273814822604
0.38202619552612305,0.038248144688198774,0.0032687664031982424,0.0002512656473640715,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': MaxAbsScaler(copy=True)}",0.5789473684210527,0.5,0.5277777777777778,0.75,0.5833333333333334,0.5880116959064328,0.08685441069018143,171,0.726027397260274,0.773972602739726,0.7297297297297297,0.7297297297297297,0.7635135135135135,0.7445945945945946,0.020038273814822604
0.3763265132904053,0.029892658777097566,0.0033246994018554686,0.0002812150687975099,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5789473684210527,0.5,0.6388888888888888,0.5833333333333334,0.6111111111111112,0.5824561403508772,0.04651420962753612,181,0.684931506849315,0.7465753424657534,0.7635135135135135,0.7162162162162162,0.75,0.7322473158089596,0.028262367892386155
0.33347353935241697,0.05472288712005556,0.003313493728637695,0.000586233896053723,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.631578947368421,0.5263157894736842,0.5833333333333334,0.8055555555555556,0.7222222222222222,0.6538011695906434,0.09942122444794903,109,0.773972602739726,0.7328767123287672,0.7635135135135135,0.7567567567567568,0.7972972972972973,0.764883376527212,0.021097968241105488
0.5592145919799805,0.06493103416310507,0.005950927734375,0.0008400596404021638,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5526315789473685,0.47368421052631576,0.7222222222222222,0.6666666666666666,0.6666666666666666,0.6163742690058479,0.09020645547833846,152,0.7602739726027398,0.8287671232876712,0.7567567567567568,0.7027027027027027,0.7567567567567568,0.7610514624213256,0.040068646024481736
0.4401997566223145,0.014178331413277748,0.06957993507385254,0.012539468349680572,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6578947368421053,0.6842105263157895,0.7222222222222222,0.75,0.6666666666666666,0.6961988304093567,0.034799007127045235,82,0.8013698630136986,0.863013698630137,0.8378378378378378,0.777027027027027,0.8040540540540541,0.816660496112551,0.03020144665368553
0.38116302490234377,0.028815239568098592,0.00813913345336914,0.004200187875319014,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.631578947368421,0.6052631578947368,0.6944444444444444,0.7777777777777778,0.6666666666666666,0.6751461988304094,0.059597500882326425,95,0.7808219178082192,0.8904109589041096,0.831081081081081,0.831081081081081,0.7837837837837838,0.823435764531655,0.03997698813394516
0.3383500576019287,0.01983007816794431,0.0032288551330566405,0.00019826642475732705,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': Normalizer(copy=True, norm='l2')}",0.47368421052631576,0.6052631578947368,0.6111111111111112,0.7222222222222222,0.6666666666666666,0.6157894736842106,0.08275628670351193,153,0.7808219178082192,0.7945205479452054,0.7702702702702703,0.7702702702702703,0.777027027027027,0.7785820066641984,0.008940270527627114
0.3373995780944824,0.03447827728611334,0.0032155513763427734,0.00016910914017729783,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5526315789473685,0.6052631578947368,0.6944444444444444,0.6388888888888888,0.6388888888888888,0.6260233918128655,0.04653993549900812,144,0.7671232876712328,0.7945205479452054,0.7027027027027027,0.7635135135135135,0.7635135135135135,0.7582747130692337,0.030117092205958894
0.035332012176513675,0.005335252625574453,0.004158639907836914,0.0019477341117685191,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': NonScaler()}",0.5263157894736842,0.5526315789473685,0.6944444444444444,0.6388888888888888,0.6111111111111112,0.6046783625730995,0.06019842251693059,159,0.6917808219178082,0.636986301369863,0.6486486486486487,0.6351351351351351,0.6621621621621622,0.6549426138467235,0.020801705797163582
0.02017498016357422,0.003849231597820795,0.004897451400756836,0.0020159636683236303,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': Binarizer(copy=True, threshold=0)}",0.631578947368421,0.7368421052631579,0.7222222222222222,0.7777777777777778,0.5277777777777778,0.6792397660818713,0.08954054758092728,92,0.7123287671232876,0.7602739726027398,0.7567567567567568,0.722972972972973,0.7094594594594594,0.7323583857830434,0.021854944144072033
0.025263261795043946,0.006891752096644239,0.003979349136352539,0.0009583680114311847,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.47368421052631576,0.5263157894736842,0.6388888888888888,0.5833333333333334,0.5277777777777778,0.55,0.05637590689426239,200,0.5821917808219178,0.6232876712328768,0.6824324324324325,0.5945945945945946,0.6283783783783784,0.62217697149204,0.03472755293038119
0.026383495330810545,0.006269159984279144,0.0050124645233154295,0.0029768729938555935,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': MaxAbsScaler(copy=True)}",0.47368421052631576,0.5263157894736842,0.6388888888888888,0.5833333333333334,0.5277777777777778,0.55,0.05637590689426239,200,0.5821917808219178,0.6232876712328768,0.6824324324324325,0.5945945945945946,0.6283783783783784,0.62217697149204,0.03472755293038119
0.031953620910644534,0.008553164144428272,0.004250097274780274,0.0013190379620483027,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5263157894736842,0.5263157894736842,0.6111111111111112,0.5555555555555556,0.5833333333333334,0.5605263157894738,0.03299821281793192,196,0.6232876712328768,0.6301369863013698,0.6621621621621622,0.5743243243243243,0.6621621621621622,0.6304146612365791,0.032288712005444135
0.020865726470947265,0.010324628906771964,0.003768444061279297,0.00042762436257286505,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6052631578947368,0.5,0.5,0.7222222222222222,0.6111111111111112,0.5877192982456141,0.0828677875271034,176,0.6917808219178082,0.636986301369863,0.6891891891891891,0.6824324324324325,0.7567567567567568,0.6914291003332099,0.03825650793284576
0.026354646682739256,0.001866933797084213,0.007685995101928711,0.004591434537390574,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5263157894736842,0.5789473684210527,0.6666666666666666,0.6666666666666666,0.5833333333333334,0.6043859649122807,0.05466819807327326,161,0.7191780821917808,0.7191780821917808,0.6486486486486487,0.6756756756756757,0.7027027027027027,0.6930766382821177,0.027319852221673
0.02806367874145508,0.0027094150612091343,0.07273616790771484,0.008762709308228443,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.631578947368421,0.631578947368421,0.75,0.6944444444444444,0.5277777777777778,0.6470760233918128,0.07422870389680565,126,0.6575342465753424,0.7397260273972602,0.7094594594594594,0.6891891891891891,0.6959459459459459,0.6983709737134394,0.02679932533257378
0.022995138168334962,0.0069724678382496914,0.005782413482666016,0.0005492807954596795,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.5789473684210527,0.6842105263157895,0.7222222222222222,0.7222222222222222,0.5277777777777778,0.6470760233918129,0.07943105027562104,125,0.6986301369863014,0.7602739726027398,0.6959459459459459,0.7162162162162162,0.7094594594594594,0.7161051462421325,0.023267281820183318
0.023867321014404298,0.007158713376839102,0.0032477378845214844,0.0001298198248916372,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': Normalizer(copy=True, norm='l2')}",0.5,0.5789473684210527,0.6666666666666666,0.6388888888888888,0.6388888888888888,0.6046783625730994,0.0596706187617342,160,0.7054794520547946,0.6986301369863014,0.6824324324324325,0.6756756756756757,0.7094594594594594,0.6943354313217327,0.013124311679354324
0.03168864250183105,0.004619983537240336,0.0031553268432617187,5.322613480556863e-05,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.47368421052631576,0.5263157894736842,0.6944444444444444,0.6388888888888888,0.6111111111111112,0.5888888888888888,0.07914962180097239,170,0.684931506849315,0.6164383561643836,0.6486486486486487,0.6351351351351351,0.668918918918919,0.6508145131432802,0.02418260862849893
0.020663738250732422,0.004103874043744629,0.004516220092773438,0.0012716889921709695,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': NonScaler()}",0.4473684210526316,0.47368421052631576,0.7777777777777778,0.5833333333333334,0.5555555555555556,0.5675438596491228,0.11648441700185111,194,0.6506849315068494,0.6301369863013698,0.6216216216216216,0.6148648648648649,0.6959459459459459,0.6426508700481304,0.02924311856944163
0.02309284210205078,0.006463950630541946,0.003377676010131836,0.0002834102819955284,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': Binarizer(copy=True, threshold=0)}",0.631578947368421,0.7631578947368421,0.6944444444444444,0.75,0.5277777777777778,0.673391812865497,0.08639645828686619,99,0.6917808219178082,0.7671232876712328,0.7094594594594594,0.7162162162162162,0.6891891891891891,0.7147537948907811,0.028121305054243245
0.0210845947265625,0.009197568837192199,0.0045925617218017575,0.002979098194269631,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.42105263157894735,0.5263157894736842,0.6111111111111112,0.5277777777777778,0.5555555555555556,0.5283625730994151,0.06181704246538822,209,0.6164383561643836,0.5821917808219178,0.6824324324324325,0.581081081081081,0.6824324324324325,0.6289152165864496,0.045508330663717046
0.023813343048095702,0.004379038783208092,0.00435171127319336,0.001984388530983723,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': MaxAbsScaler(copy=True)}",0.42105263157894735,0.5263157894736842,0.6111111111111112,0.5277777777777778,0.5555555555555556,0.5283625730994151,0.06181704246538822,209,0.6164383561643836,0.5821917808219178,0.6824324324324325,0.581081081081081,0.6824324324324325,0.6289152165864496,0.045508330663717046
0.025359678268432616,0.006879671203608773,0.004362583160400391,0.0015846910647252376,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5263157894736842,0.631578947368421,0.75,0.5277777777777778,0.5833333333333334,0.6038011695906433,0.0828832618892302,162,0.6164383561643836,0.636986301369863,0.7027027027027027,0.6081081081081081,0.6891891891891891,0.6506849315068493,0.038371063735312086
0.024859857559204102,0.007105450493802834,0.0047457218170166016,0.0027395320728700293,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.5789473684210527,0.5789473684210527,0.5,0.6944444444444444,0.5555555555555556,0.5815789473684211,0.06337951154894747,183,0.7397260273972602,0.6301369863013698,0.6824324324324325,0.6418918918918919,0.7094594594594594,0.6807293594964829,0.04093131573783978
0.014922094345092774,0.008148148188918973,0.008767318725585938,0.006527318577415843,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.6842105263157895,0.6842105263157895,0.6944444444444444,0.5833333333333334,0.5833333333333334,0.6459064327485381,0.05122720232114892,128,0.7397260273972602,0.6643835616438356,0.6621621621621622,0.6756756756756757,0.7432432432432432,0.6970381340244354,0.036595566660271896
0.025821208953857422,0.0021793217504500776,0.07550525665283203,0.010480469983289702,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6578947368421053,0.6842105263157895,0.7222222222222222,0.7222222222222222,0.5277777777777778,0.6628654970760234,0.07179895859399905,105,0.678082191780822,0.7465753424657534,0.7162162162162162,0.7162162162162162,0.7297297297297297,0.7173639392817475,0.02259163151513734
0.011427164077758789,0.0018866583496251078,0.007578611373901367,0.0039728825798441905,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.6842105263157895,0.7105263157894737,0.75,0.6944444444444444,0.5,0.6678362573099415,0.08685441069018142,103,0.6712328767123288,0.7534246575342466,0.7027027027027027,0.7094594594594594,0.722972972972973,0.711958533876342,0.026800194831093294
0.021062564849853516,0.005894730064845995,0.0055195331573486325,0.004585222224316668,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': Normalizer(copy=True, norm='l2')}",0.5526315789473685,0.631578947368421,0.6666666666666666,0.7222222222222222,0.5,0.6146198830409356,0.0794418131447746,155,0.7123287671232876,0.7123287671232876,0.668918918918919,0.6621621621621622,0.7094594594594594,0.6930396149574232,0.022578658704769338
0.023009777069091797,0.002907098196432257,0.004893779754638672,0.002080738476679172,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.4473684210526316,0.5263157894736842,0.75,0.5833333333333334,0.5555555555555556,0.5725146198830409,0.09970117109817479,190,0.6575342465753424,0.6232876712328768,0.6351351351351351,0.6081081081081081,0.7027027027027027,0.6453535727508329,0.03291150751519612
0.029251241683959962,0.012132479534493349,0.0050853252410888675,0.003965992509491952,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': NonScaler()}",0.4473684210526316,0.4473684210526316,0.6666666666666666,0.4166666666666667,0.5833333333333334,0.512280701754386,0.0963875040591382,218,0.6027397260273972,0.5821917808219178,0.5878378378378378,0.5472972972972973,0.6486486486486487,0.5937430581266198,0.032927423940944375
0.02472348213195801,0.0021956084379813542,0.004186868667602539,0.0019395620716994284,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': Binarizer(copy=True, threshold=0)}",0.6052631578947368,0.7894736842105263,0.6944444444444444,0.6666666666666666,0.5,0.6511695906432748,0.09612548084373651,121,0.6917808219178082,0.726027397260274,0.6756756756756757,0.7027027027027027,0.7027027027027027,0.6997778600518327,0.016437855841571012
0.02238473892211914,0.009347807361461648,0.003648996353149414,0.0002892670828824992,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.4473684210526316,0.5,0.6944444444444444,0.5555555555555556,0.5555555555555556,0.5505847953216374,0.08241050539259517,198,0.5616438356164384,0.5205479452054794,0.6621621621621622,0.5608108108108109,0.6081081081081081,0.5826545723805998,0.048466841101653856
0.025078821182250976,0.0026060255704313455,0.0035171031951904295,0.0001528151429213717,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': MaxAbsScaler(copy=True)}",0.4473684210526316,0.5,0.6944444444444444,0.5555555555555556,0.5555555555555556,0.5505847953216374,0.08241050539259517,198,0.5616438356164384,0.5205479452054794,0.6621621621621622,0.5608108108108109,0.6081081081081081,0.5826545723805998,0.048466841101653856
0.02068047523498535,0.007520399074332428,0.0034627437591552733,0.00019502636272924432,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.47368421052631576,0.5789473684210527,0.75,0.5277777777777778,0.5,0.5660818713450293,0.09834911701911647,195,0.547945205479452,0.5342465753424658,0.6216216216216216,0.5608108108108109,0.6621621621621622,0.5853572750833025,0.048638645123748485
0.024959039688110352,0.005324790859904397,0.004478359222412109,0.0023862516493866675,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6052631578947368,0.5526315789473685,0.4444444444444444,0.6944444444444444,0.5833333333333334,0.5760233918128655,0.08098412334728648,188,0.6917808219178082,0.5958904109589042,0.7027027027027027,0.6148648648648649,0.7297297297297297,0.666993706034802,0.05215062200635191
0.029247617721557616,0.005640788140623571,0.006146049499511719,0.0006182458943962253,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.6052631578947368,0.6578947368421053,0.6944444444444444,0.4444444444444444,0.5555555555555556,0.5915204678362572,0.08730702337046478,167,0.6438356164383562,0.636986301369863,0.6081081081081081,0.6418918918918919,0.7094594594594594,0.6480562754535357,0.0333003453247989
0.020192050933837892,0.006700094581292896,0.07367386817932128,0.019712584922885173,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.631578947368421,0.7894736842105263,0.7777777777777778,0.6944444444444444,0.5,0.6786549707602338,0.10629127542443564,94,0.6506849315068494,0.7191780821917808,0.6824324324324325,0.6824324324324325,0.6824324324324325,0.6834320621991855,0.021694009739574208
0.02534322738647461,0.0053027273585688735,0.005490636825561524,0.00023512654119066848,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.631578947368421,0.7631578947368421,0.7222222222222222,0.6111111111111112,0.5,0.6456140350877193,0.09195243981754836,129,0.6643835616438356,0.726027397260274,0.6554054054054054,0.6824324324324325,0.7094594594594594,0.6875416512402813,0.026670892338994275
0.022800922393798828,0.010348519950934037,0.007046985626220703,0.004347138641467852,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': Normalizer(copy=True, norm='l2')}",0.47368421052631576,0.6842105263157895,0.6944444444444444,0.6666666666666666,0.4722222222222222,0.5982456140350878,0.10268696128220402,165,0.6643835616438356,0.6643835616438356,0.6283783783783784,0.6351351351351351,0.6621621621621622,0.6508885597926695,0.015787355168338322
0.022284460067749024,0.005058801987338065,0.004513883590698242,0.0021164971721769664,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.4473684210526316,0.47368421052631576,0.6666666666666666,0.4722222222222222,0.5833333333333334,0.5286549707602339,0.0834875970336443,208,0.6095890410958904,0.5821917808219178,0.581081081081081,0.5472972972972973,0.6351351351351351,0.5910588670862643,0.029595071132613136
0.024367713928222658,0.008235340575102558,0.0010109424591064453,6.087296512940182e-05,"GaussianNB(priors=None, var_smoothing=1e-09)",,NonScaler(),,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': NonScaler()}",0.631578947368421,0.6842105263157895,0.8333333333333334,0.8333333333333334,0.5833333333333334,0.7131578947368422,0.10318116457917624,69,0.821917808219178,0.8424657534246576,0.8108108108108109,0.7837837837837838,0.8243243243243243,0.816660496112551,0.019325537146832425
0.017993354797363283,0.001259804156402252,0.0011693477630615235,7.626094700547868e-05,"GaussianNB(priors=None, var_smoothing=1e-09)",,"Binarizer(copy=True, threshold=0)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': Binarizer(copy=True, threshold=0)}",0.7105263157894737,0.868421052631579,0.8888888888888888,0.8333333333333334,0.5277777777777778,0.7657894736842106,0.13412864273228067,28,0.815068493150685,0.863013698630137,0.8175675675675675,0.777027027027027,0.831081081081081,0.8207515734912996,0.027738266736350634
0.02352461814880371,0.005271243697524225,0.0027698993682861326,0.003246247072337795,"GaussianNB(priors=None, var_smoothing=1e-09)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.631578947368421,0.6842105263157895,0.8333333333333334,0.8333333333333334,0.5833333333333334,0.7131578947368422,0.10318116457917624,69,0.821917808219178,0.8424657534246576,0.8108108108108109,0.7837837837837838,0.8243243243243243,0.816660496112551,0.019325537146832425
0.020870208740234375,0.007361637038343336,0.0011184215545654297,4.087359560506871e-05,"GaussianNB(priors=None, var_smoothing=1e-09)",,MaxAbsScaler(copy=True),,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': MaxAbsScaler(copy=True)}",0.631578947368421,0.6842105263157895,0.8333333333333334,0.8333333333333334,0.5833333333333334,0.7131578947368422,0.10318116457917624,69,0.821917808219178,0.8424657534246576,0.8108108108108109,0.7837837837837838,0.8243243243243243,0.816660496112551,0.019325537146832425
0.02160964012145996,0.011873262505537907,0.0013742923736572265,0.00028462111598857203,"GaussianNB(priors=None, var_smoothing=1e-09)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.631578947368421,0.6842105263157895,0.8333333333333334,0.8333333333333334,0.5833333333333334,0.7131578947368422,0.10318116457917624,69,0.821917808219178,0.8424657534246576,0.8108108108108109,0.7837837837837838,0.8243243243243243,0.816660496112551,0.019325537146832425
0.020297813415527343,0.01249593202664378,0.0013397216796875,0.00019890211390346006,"GaussianNB(priors=None, var_smoothing=1e-09)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6842105263157895,0.6842105263157895,0.8333333333333334,0.6944444444444444,0.5833333333333334,0.695906432748538,0.07979295906363831,84,0.7808219178082192,0.8287671232876712,0.7837837837837838,0.7635135135135135,0.8175675675675675,0.7948907811921511,0.02436257141358882
0.019553184509277344,0.002865849385649189,0.0037172794342041015,0.00032936739644668034,"GaussianNB(priors=None, var_smoothing=1e-09)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.7105263157894737,0.8157894736842105,0.8888888888888888,0.8611111111111112,0.6666666666666666,0.7885964912280701,0.08604443948424041,4,0.8287671232876712,0.8424657534246576,0.7905405405405406,0.7837837837837838,0.8581081081081081,0.8207330618289523,0.02901926119561254
0.01769733428955078,0.004918932582786432,0.06196236610412598,0.013247165763671114,"GaussianNB(priors=None, var_smoothing=1e-09)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7105263157894737,0.8421052631578947,0.8611111111111112,0.8333333333333334,0.5555555555555556,0.7605263157894738,0.11540043332512884,36,0.8287671232876712,0.8424657534246576,0.8040540540540541,0.777027027027027,0.8378378378378378,0.8180303591262496,0.02441848954704978
0.021712446212768556,0.004531578717387199,0.0037164211273193358,0.000489165517743199,"GaussianNB(priors=None, var_smoothing=1e-09)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7105263157894737,0.8421052631578947,0.8611111111111112,0.8611111111111112,0.5833333333333334,0.7716374269005849,0.10969940367624227,17,0.8287671232876712,0.863013698630137,0.8040540540540541,0.7905405405405406,0.8513513513513513,0.8275453535727507,0.02737670211404872
0.020090055465698243,0.007727627904563919,0.0013676166534423828,0.000333244750000498,"GaussianNB(priors=None, var_smoothing=1e-09)",,"Normalizer(copy=True, norm='l2')",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': Normalizer(copy=True, norm='l2')}",0.6842105263157895,0.631578947368421,0.75,0.8055555555555556,0.5,0.6742690058479532,0.10513068337152226,97,0.815068493150685,0.7534246575342466,0.75,0.75,0.777027027027027,0.7691040355423917,0.025104885580390236
0.028572940826416017,0.006597543506433138,0.0011701583862304688,5.287691946577765e-05,"GaussianNB(priors=None, var_smoothing=1e-09)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.631578947368421,0.6842105263157895,0.8333333333333334,0.8333333333333334,0.5833333333333334,0.7131578947368422,0.10318116457917624,69,0.821917808219178,0.8424657534246576,0.8175675675675675,0.7837837837837838,0.8175675675675675,0.8166604961125508,0.018847145175479727
0.020903253555297853,0.003824241799301431,0.002881431579589844,0.004054657437044374,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': NonScaler()}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,220,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.024898767471313477,0.004685051899326724,0.001149606704711914,7.59048374205544e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': Binarizer(copy=True, threshold=0)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,220,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.028821659088134766,0.0077333337773382175,0.002408885955810547,0.0026672279867010714,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,220,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.03513360023498535,0.010828082057757121,0.002973127365112305,0.0033962866711553423,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': MaxAbsScaler(copy=True)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,220,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.016908979415893553,0.011572832786746002,0.00101776123046875,3.416078174492378e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,220,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.03084735870361328,0.007327540312231511,0.0010599613189697266,6.419411276702146e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6052631578947368,0.5,0.5,0.5,0.5,0.5210526315789473,0.04210526315789473,216,0.547945205479452,0.5,0.5,0.5,0.5,0.5095890410958904,0.019178082191780813
0.02250356674194336,0.007181953993138142,0.003585195541381836,0.0002920893481860808,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,220,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.022428178787231447,0.010103316205614854,0.06022181510925293,0.01891543632100143,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,220,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.02808823585510254,0.004652232910844643,0.0033765792846679687,0.00032919466397899043,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,220,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.022568941116333008,0.004740912791205641,0.0010882854461669923,1.9350190535829274e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': Normalizer(copy=True, norm='l2')}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,220,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.0418792724609375,0.006867330466537931,0.0012059688568115234,0.00035556763720697115,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.5,0.5,0.5,0.5,0.5,0.0,220,0.5,0.5,0.5,0.5,0.5,0.5,0.0
0.022362756729125976,0.0043584910880299374,0.0010069847106933595,0.00014702967386469516,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': NonScaler()}",0.4473684210526316,0.5789473684210527,0.5555555555555556,0.6944444444444444,0.3611111111111111,0.527485380116959,0.11437720460600447,213,0.5684931506849316,0.5273972602739726,0.5675675675675675,0.5067567567567568,0.5878378378378378,0.5516105146242133,0.029833575606292854
0.03041539192199707,0.008341838977005201,0.001616191864013672,0.0006871169081452319,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': Binarizer(copy=True, threshold=0)}",0.7894736842105263,0.6052631578947368,0.7222222222222222,0.9166666666666666,0.6944444444444444,0.7456140350877194,0.10396782601923851,44,0.8767123287671232,0.8972602739726028,0.8851351351351351,0.8851351351351351,0.9054054054054054,0.8899296556830804,0.0101381396651195
0.027240419387817384,0.00437819043962015,0.0012301921844482422,0.00017201462797596323,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5526315789473685,0.6842105263157895,0.8055555555555556,0.7222222222222222,0.4722222222222222,0.6473684210526317,0.1196953315788241,123,0.815068493150685,0.7876712328767124,0.7905405405405406,0.7702702702702703,0.8040540540540541,0.7935209181784525,0.015224579046410981
0.023630857467651367,0.0055010552358902174,0.002354717254638672,0.002305037119087013,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': MaxAbsScaler(copy=True)}",0.5526315789473685,0.6842105263157895,0.8055555555555556,0.7222222222222222,0.4722222222222222,0.6473684210526317,0.1196953315788241,123,0.815068493150685,0.7876712328767124,0.7905405405405406,0.7702702702702703,0.8040540540540541,0.7935209181784525,0.015224579046410981
0.055042600631713866,0.00780543226960006,0.003268909454345703,0.0041144172275481275,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5789473684210527,0.631578947368421,0.75,0.6944444444444444,0.5833333333333334,0.6476608187134503,0.06600031193155385,122,0.8698630136986302,0.8904109589041096,0.8648648648648649,0.8378378378378378,0.8581081081081081,0.8642169566827101,0.017038776007410373
0.032796287536621095,0.014815252717633148,0.001202869415283203,0.00014379786468200921,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.47368421052631576,0.631578947368421,0.7222222222222222,0.6666666666666666,0.5833333333333334,0.6154970760233918,0.08415771573426192,154,0.6986301369863014,0.773972602739726,0.7162162162162162,0.6351351351351351,0.8108108108108109,0.7269529803776379,0.06097697742498643
0.019798421859741212,0.01055424013850711,0.0035881996154785156,0.000155521519209968,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.47368421052631576,0.5526315789473685,0.5,0.5,0.4444444444444444,0.49415204678362573,0.035715629203748496,230,0.5684931506849316,0.547945205479452,0.5,0.5,0.6013513513513513,0.5435579415031471,0.03943521142330242
0.04482536315917969,0.01016622379982908,0.06536760330200195,0.020188532973500713,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7631578947368421,0.631578947368421,0.6944444444444444,0.8333333333333334,0.7777777777777778,0.7400584795321637,0.07000710805342192,52,0.9041095890410958,0.958904109589041,0.918918918918919,0.8851351351351351,0.9054054054054054,0.9144946316179192,0.024674761307768064
0.028304481506347658,0.008859556437735519,0.004140710830688477,0.001391569839984421,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7894736842105263,0.6052631578947368,0.7222222222222222,0.9166666666666666,0.6944444444444444,0.7456140350877194,0.10396782601923851,44,0.8835616438356164,0.8972602739726028,0.8918918918918919,0.8986486486486487,0.8986486486486487,0.8940022213994817,0.005783642959770515
0.02214837074279785,0.0020813169989411444,0.0011622905731201172,5.13252685485683e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': Normalizer(copy=True, norm='l2')}",0.6578947368421053,0.6842105263157895,0.7777777777777778,0.7777777777777778,0.5833333333333334,0.6961988304093567,0.07437713728928488,82,0.7945205479452054,0.7808219178082192,0.7635135135135135,0.777027027027027,0.777027027027027,0.7785820066641985,0.009909083805032104
0.03425588607788086,0.006771973667134536,0.001390695571899414,0.0005982318867299393,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.4473684210526316,0.5789473684210527,0.5555555555555556,0.7222222222222222,0.3611111111111111,0.5330409356725146,0.12272205359411609,207,0.5684931506849316,0.5273972602739726,0.5608108108108109,0.5202702702702703,0.5878378378378378,0.5529618659755646,0.025461538239173676
0.06733851432800293,0.007272114803860562,0.0011459827423095704,0.0003082533937058496,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': NonScaler()}",0.631578947368421,0.631578947368421,0.7222222222222222,0.6944444444444444,0.5277777777777778,0.6415204678362573,0.0670056529871334,138,0.773972602739726,0.7534246575342466,0.7027027027027027,0.7635135135135135,0.7432432432432432,0.7473713439466865,0.024564885259611095
0.06066255569458008,0.010830576101952122,0.0013648509979248048,0.00030473743189673086,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.6842105263157895,0.6388888888888888,0.8333333333333334,0.75,0.7286549707602339,0.06559490396686168,60,0.9315068493150684,0.9657534246575342,0.9256756756756757,0.8783783783783784,0.9391891891891891,0.9281007034431692,0.028391809136470592
0.04447140693664551,0.0182155705315113,0.001139068603515625,7.932893754739155e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5789473684210527,0.631578947368421,0.7222222222222222,0.6666666666666666,0.6111111111111112,0.6421052631578947,0.049157603938403516,133,0.863013698630137,0.8835616438356164,0.8851351351351351,0.8378378378378378,0.8513513513513513,0.8641799333580156,0.018300873196073042
0.035579347610473634,0.012898258618259675,0.0054127216339111325,0.005161377719802761,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': MaxAbsScaler(copy=True)}",0.5789473684210527,0.631578947368421,0.7222222222222222,0.6666666666666666,0.6111111111111112,0.6421052631578947,0.049157603938403516,133,0.863013698630137,0.8835616438356164,0.8851351351351351,0.8378378378378378,0.8513513513513513,0.8641799333580156,0.018300873196073042
0.043346500396728514,0.006834533537720832,0.0011917591094970704,0.00012100945257945955,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5789473684210527,0.631578947368421,0.75,0.6666666666666666,0.5833333333333334,0.6421052631578947,0.06292598748933667,133,0.8904109589041096,0.8972602739726028,0.8716216216216216,0.8513513513513513,0.8783783783783784,0.8778045168456128,0.015973580323991775
0.03765864372253418,0.0037227563766845935,0.0023673057556152345,0.0025395179296241106,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.47368421052631576,0.631578947368421,0.7222222222222222,0.6666666666666666,0.6111111111111112,0.6210526315789473,0.08275628670351193,147,0.6986301369863014,0.7808219178082192,0.7094594594594594,0.6351351351351351,0.8108108108108109,0.7269714920399852,0.062406281524076686
0.04281816482543945,0.010048502300424906,0.006812334060668945,0.004459825548971844,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.6578947368421053,0.75,0.5833333333333334,0.4166666666666667,0.5815789473684211,0.1166567730932315,183,0.684931506849315,0.6917808219178082,0.6283783783783784,0.6621621621621622,0.7027027027027027,0.6739911144020734,0.02638547699701968
0.04776163101196289,0.0022507667440483364,0.05969367027282715,0.01609027878603477,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7368421052631579,0.631578947368421,0.6944444444444444,0.8333333333333334,0.7777777777777778,0.7347953216374269,0.06905538909532405,55,0.910958904109589,0.9657534246575342,0.9121621621621622,0.8851351351351351,0.9121621621621622,0.9172343576453166,0.026363973906116462
0.04174060821533203,0.008915679996273376,0.0036616802215576174,0.0006048985125068319,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7368421052631579,0.6052631578947368,0.6388888888888888,0.8333333333333334,0.7777777777777778,0.718421052631579,0.08508520725376875,66,0.952054794520548,0.9726027397260274,0.9054054054054054,0.9054054054054054,0.9121621621621622,0.9295261014439096,0.027670421462543098
0.04777536392211914,0.014042300604086832,0.002756834030151367,0.0023189719333687503,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': Normalizer(copy=True, norm='l2')}",0.631578947368421,0.6578947368421053,0.75,0.8055555555555556,0.6666666666666666,0.7023391812865497,0.06508459295886429,77,0.8972602739726028,0.8767123287671232,0.8581081081081081,0.8445945945945946,0.8716216216216216,0.8696593854128102,0.017759950317044453
0.04592819213867187,0.016500154818642733,0.004612255096435547,0.0067746979756047486,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.631578947368421,0.631578947368421,0.75,0.6944444444444444,0.5277777777777778,0.6470760233918128,0.07422870389680565,126,0.7808219178082192,0.7534246575342466,0.7094594594594594,0.7635135135135135,0.75,0.7514439096630878,0.023568814123017836
0.027946853637695314,0.005962635170684933,0.0009329319000244141,9.778231627208229e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': NonScaler()}",0.5263157894736842,0.6842105263157895,0.6666666666666666,0.6944444444444444,0.3888888888888889,0.5921052631578948,0.11844090512966397,166,0.6164383561643836,0.5821917808219178,0.6621621621621622,0.6621621621621622,0.6351351351351351,0.6316179192891522,0.030171624593711012
0.01962733268737793,0.00662154245072415,0.0012913227081298828,0.0005446531291234013,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': Binarizer(copy=True, threshold=0)}",0.7105263157894737,0.8157894736842105,0.8333333333333334,0.8611111111111112,0.5,0.7441520467836258,0.13229176638436982,47,0.815068493150685,0.773972602739726,0.7905405405405406,0.8108108108108109,0.7297297297297297,0.7840244353942984,0.03089549306656479
0.016277551651000977,0.0025535852695037125,0.002027082443237305,0.0019469547374732236,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5263157894736842,0.6052631578947368,0.8333333333333334,0.7777777777777778,0.4722222222222222,0.6429824561403509,0.14042517526604836,130,0.6712328767123288,0.6712328767123288,0.668918918918919,0.6486486486486487,0.7094594594594594,0.673898556090337,0.019703523307741357
0.015511178970336914,0.0014660615348022583,0.002619171142578125,0.0013896325544966047,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': MaxAbsScaler(copy=True)}",0.5263157894736842,0.6052631578947368,0.8333333333333334,0.7777777777777778,0.4722222222222222,0.6429824561403509,0.14042517526604836,130,0.6712328767123288,0.6712328767123288,0.668918918918919,0.6486486486486487,0.7094594594594594,0.673898556090337,0.019703523307741357
0.025384140014648438,0.010648906487141844,0.004467630386352539,0.005673239403726271,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5526315789473685,0.7105263157894737,0.8888888888888888,0.7222222222222222,0.4722222222222222,0.6692982456140351,0.14503159779256405,100,0.7945205479452054,0.773972602739726,0.7635135135135135,0.7837837837837838,0.7905405405405406,0.7812661977045539,0.011281700213224846
0.034493875503540036,0.0059674260424761325,0.001212167739868164,0.00016143782377685357,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.5,0.5789473684210527,0.6944444444444444,0.6388888888888888,0.4444444444444444,0.5713450292397662,0.09051773989630896,192,0.7397260273972602,0.6506849315068494,0.6959459459459459,0.6351351351351351,0.722972972972973,0.6888930025916327,0.040360747791714544
0.015375471115112305,0.0077142847714550674,0.006981277465820312,0.0033823563036653815,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.6052631578947368,0.6052631578947368,0.6666666666666666,0.6111111111111112,0.3611111111111111,0.5698830409356725,0.10691683498380766,193,0.589041095890411,0.6506849315068494,0.6216216216216216,0.6351351351351351,0.6621621621621622,0.6317289892632358,0.02538315468964497
0.02812933921813965,0.009245777355883023,0.05925908088684082,0.012384657639122516,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8157894736842105,0.7105263157894737,0.7777777777777778,0.8333333333333334,0.5833333333333334,0.7441520467836258,0.09078464734654983,47,0.821917808219178,0.8698630136986302,0.8716216216216216,0.8243243243243243,0.8513513513513513,0.8478156238430209,0.021390896689277898
0.0263763427734375,0.0050889290387480515,0.0034530162811279297,0.00026365106532809775,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.631578947368421,0.868421052631579,0.8888888888888888,0.8888888888888888,0.5277777777777778,0.7611111111111111,0.15191627327254184,35,0.8287671232876712,0.815068493150685,0.8378378378378378,0.831081081081081,0.7364864864864865,0.8098482043687524,0.03742024370278542
0.01617569923400879,0.005155801951457996,0.002849102020263672,0.003297692904242023,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': Normalizer(copy=True, norm='l2')}",0.631578947368421,0.7631578947368421,0.7222222222222222,0.6666666666666666,0.3888888888888889,0.6345029239766082,0.13085571214213657,142,0.7123287671232876,0.7054794520547946,0.6891891891891891,0.7094594594594594,0.7094594594594594,0.7051832654572381,0.008288884925217902
0.0293942928314209,0.004611937827560307,0.0012195110321044922,0.0002730159038564153,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5263157894736842,0.6842105263157895,0.7222222222222222,0.6944444444444444,0.4444444444444444,0.614327485380117,0.10913289787432288,156,0.636986301369863,0.6027397260273972,0.668918918918919,0.6756756756756757,0.6621621621621622,0.6492965568308033,0.02670393113180866
0.030796575546264648,0.00238536015865712,0.0008687019348144531,5.121608450285739e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': NonScaler()}",0.4473684210526316,0.631578947368421,0.6388888888888888,0.8055555555555556,0.4166666666666667,0.5880116959064327,0.14209262812935905,175,0.6095890410958904,0.5753424657534246,0.5743243243243243,0.6824324324324325,0.6283783783783784,0.6140133283968902,0.03994434988325815
0.02805604934692383,0.0029567067707640215,0.001561117172241211,0.0009157691253842686,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': Binarizer(copy=True, threshold=0)}",0.7894736842105263,0.6052631578947368,0.6388888888888888,0.8611111111111112,0.7222222222222222,0.7233918128654971,0.0942654868526075,64,0.9178082191780822,0.952054794520548,0.9324324324324325,0.8986486486486487,0.9459459459459459,0.9293780081451315,0.01937119646702763
0.019106674194335937,0.005045964472194594,0.0016050338745117188,0.0006722872456045093,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5,0.6052631578947368,0.75,0.7222222222222222,0.5277777777777778,0.6210526315789473,0.10046487479381515,147,0.8493150684931506,0.863013698630137,0.8175675675675675,0.8378378378378378,0.8243243243243243,0.8384116993706036,0.016476669015090716
0.02482948303222656,0.003975866425377248,0.0025876045227050783,0.00297114968616473,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': MaxAbsScaler(copy=True)}",0.5,0.6052631578947368,0.75,0.7222222222222222,0.5277777777777778,0.6210526315789473,0.10046487479381515,147,0.8493150684931506,0.863013698630137,0.8175675675675675,0.8378378378378378,0.8243243243243243,0.8384116993706036,0.016476669015090716
0.06475028991699219,0.008903050533219756,0.0026441097259521486,0.0029559259795942515,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.5789473684210527,0.6052631578947368,0.6388888888888888,0.7222222222222222,0.7222222222222222,0.6535087719298246,0.059234887775909226,110,0.8904109589041096,0.8767123287671232,0.8648648648648649,0.8378378378378378,0.9121621621621622,0.8763976305072194,0.02488146469289316
0.03729481697082519,0.011563970536978748,0.0016196250915527343,0.000565532717281588,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6052631578947368,0.7105263157894737,0.5833333333333334,0.7777777777777778,0.5833333333333334,0.6520467836257311,0.07856197898635392,116,0.8082191780821918,0.7945205479452054,0.6891891891891891,0.7635135135135135,0.7702702702702703,0.7651425398000741,0.04127111082513072
0.024709796905517577,0.009440078679491327,0.003990697860717774,0.001053359697061661,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.47368421052631576,0.6842105263157895,0.75,0.6388888888888888,0.5,0.6093567251461989,0.10641587810514669,157,0.6506849315068494,0.6506849315068494,0.6013513513513513,0.6418918918918919,0.668918918918919,0.6427064050351722,0.0224736002913481
0.03818345069885254,0.01192385968899053,0.0674281120300293,0.009589004183923368,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7368421052631579,0.631578947368421,0.5833333333333334,0.6944444444444444,0.75,0.6792397660818713,0.0632863648986095,92,0.9178082191780822,0.9863013698630136,0.918918918918919,0.8918918918918919,0.9054054054054054,0.9240651610514623,0.03262601583434104
0.026276588439941406,0.00842414487859929,0.00725712776184082,0.006664730161570698,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7631578947368421,0.6052631578947368,0.6666666666666666,0.8611111111111112,0.7222222222222222,0.7236842105263158,0.08685736373325534,62,0.9178082191780822,0.958904109589041,0.918918918918919,0.9054054054054054,0.9054054054054054,0.9212884116993706,0.019683529874578286
0.0319096565246582,0.01257553620042678,0.001358366012573242,0.00048317593246250377,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': Normalizer(copy=True, norm='l2')}",0.6052631578947368,0.7105263157894737,0.7777777777777778,0.7777777777777778,0.6111111111111112,0.6964912280701754,0.07618965175652093,81,0.8493150684931506,0.8287671232876712,0.8108108108108109,0.8040540540540541,0.8243243243243243,0.8234542761940021,0.01570980421459651
0.028841066360473632,0.005371796859719691,0.0012639999389648438,0.00024792027225723005,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.4473684210526316,0.631578947368421,0.6111111111111112,0.8333333333333334,0.4166666666666667,0.5880116959064328,0.1495018688708232,171,0.6232876712328768,0.5821917808219178,0.5743243243243243,0.7027027027027027,0.6351351351351351,0.6235283228433913,0.04589793373875854
0.0504798412322998,0.008900031050445623,0.0014294147491455077,0.0008425855014721969,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': NonScaler()}",0.6052631578947368,0.5263157894736842,0.5555555555555556,0.4722222222222222,0.6111111111111112,0.554093567251462,0.051664275470303604,197,0.7054794520547946,0.6232876712328768,0.5743243243243243,0.5067567567567568,0.8108108108108109,0.6441318030359127,0.10556977875117471
0.03189349174499512,0.016257989506052128,0.0017615318298339843,0.0013005952291282772,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': Binarizer(copy=True, threshold=0)}",0.7105263157894737,0.6578947368421053,0.6944444444444444,0.75,0.6944444444444444,0.7014619883040936,0.029781530705289425,78,1.0,0.9863013698630136,0.8783783783783784,0.8648648648648649,0.972972972972973,0.940503517215846,0.057047837703085726
0.038551950454711915,0.009621771823674118,0.0034656524658203125,0.004224264025464416,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.631578947368421,0.5789473684210527,0.6388888888888888,0.6111111111111112,0.6388888888888888,0.6198830409356725,0.022855698533172833,150,0.910958904109589,0.8013698630136986,0.6486486486486487,0.6216216216216216,0.8581081081081081,0.7681414291003332,0.11431670209004063
0.03995943069458008,0.00811323614150649,0.001645040512084961,0.0010579601341903925,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': MaxAbsScaler(copy=True)}",0.631578947368421,0.5789473684210527,0.6388888888888888,0.6111111111111112,0.6388888888888888,0.6198830409356725,0.022855698533172833,150,0.910958904109589,0.8013698630136986,0.6486486486486487,0.6216216216216216,0.8581081081081081,0.7681414291003332,0.11431670209004063
0.052558374404907224,0.022222703334581605,0.005084037780761719,0.007944405120521974,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.6052631578947368,0.5,0.5555555555555556,0.6388888888888888,0.6388888888888888,0.587719298245614,0.053429622220494924,177,0.9041095890410958,0.8904109589041096,0.7094594594594594,0.722972972972973,0.7905405405405406,0.8034987041836356,0.08145179815412829
0.040012454986572264,0.004567043409226032,0.001288461685180664,0.0004315435662045463,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6052631578947368,0.5263157894736842,0.5277777777777778,0.4166666666666667,0.5555555555555556,0.5263157894736843,0.06182672309492343,215,0.815068493150685,0.5684931506849316,0.6554054054054054,0.6148648648648649,0.6283783783783784,0.6564420584968531,0.08416016157070065
0.0406033992767334,0.00574206548995042,0.008812522888183594,0.005273967297194414,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5526315789473685,0.5526315789473685,0.5,0.5277777777777778,0.5,0.526608187134503,0.023544821215435573,214,0.6095890410958904,0.6506849315068494,0.5,0.5135135135135135,0.5135135135135135,0.5574601999259534,0.06094680258856541
0.05218749046325684,0.013313639898458483,0.06434388160705566,0.007974821236024726,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7368421052631579,0.6578947368421053,0.6388888888888888,0.7222222222222222,0.6944444444444444,0.6900584795321638,0.03713565407802694,89,0.9452054794520548,0.9383561643835616,0.8513513513513513,0.8445945945945946,0.9256756756756757,0.9010366530914476,0.04382932295947174
0.030626726150512696,0.01480611299502329,0.004438018798828125,0.0016574934834681656,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7105263157894737,0.5263157894736842,0.6944444444444444,0.8055555555555556,0.75,0.6973684210526316,0.09371789773318755,79,0.9863013698630136,0.9452054794520548,0.9256756756756757,0.8716216216216216,0.8986486486486487,0.9254905590522029,0.039265806091349546
0.036816740036010744,0.006517403291473016,0.0013001918792724609,0.0002754032275800805,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': Normalizer(copy=True, norm='l2')}",0.7105263157894737,0.6052631578947368,0.5833333333333334,0.4166666666666667,0.6111111111111112,0.5853801169590643,0.09506567003012027,180,0.8287671232876712,0.863013698630137,0.6216216216216216,0.6216216216216216,0.8378378378378378,0.7545723805997777,0.10913232728525767
0.05236663818359375,0.011913597858305728,0.0013491153717041016,0.0002422577083461449,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5789473684210527,0.47368421052631576,0.5833333333333334,0.6388888888888888,0.5833333333333334,0.5716374269005848,0.05374870312338438,191,0.8698630136986302,0.6164383561643836,0.6283783783783784,0.7094594594594594,0.6621621621621622,0.6972602739726028,0.09214043767964623
0.029086923599243163,0.011482302594443137,0.0019040584564208984,0.0020730232266712684,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': NonScaler()}",0.5,0.6052631578947368,0.6388888888888888,0.5,0.4722222222222222,0.5432748538011696,0.06599772109318776,206,0.5273972602739726,0.6643835616438356,0.5945945945945946,0.5202702702702703,0.6148648648648649,0.5843021103295076,0.05438987873301305
0.02430882453918457,0.00883379242534414,0.0013721466064453125,0.00048228490708279953,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.631578947368421,0.6944444444444444,0.8333333333333334,0.6944444444444444,0.7181286549707602,0.0666859005803027,67,0.8904109589041096,0.9452054794520548,0.8445945945945946,0.8851351351351351,0.8851351351351351,0.8900962606442058,0.0321146451904112
0.015553855895996093,0.0054222107944197325,0.0016124725341796875,0.0010395226280223422,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5,0.47368421052631576,0.6944444444444444,0.6666666666666666,0.6111111111111112,0.5891812865497076,0.0881568036940429,168,0.8698630136986302,0.6986301369863014,0.8648648648648649,0.831081081081081,0.7702702702702703,0.8069418733802296,0.06476585968740631
0.026154518127441406,0.0037840126676338846,0.0011467456817626954,0.00014078655654699382,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': MaxAbsScaler(copy=True)}",0.5,0.47368421052631576,0.6944444444444444,0.6666666666666666,0.6111111111111112,0.5891812865497076,0.0881568036940429,168,0.8698630136986302,0.6986301369863014,0.8648648648648649,0.831081081081081,0.7702702702702703,0.8069418733802296,0.06476585968740631
0.02189936637878418,0.004331591237435743,0.0011462688446044922,0.00020438908238801213,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.6842105263157895,0.631578947368421,0.6944444444444444,0.7222222222222222,0.5277777777777778,0.6520467836257311,0.06872900159966759,116,0.7876712328767124,0.863013698630137,0.8445945945945946,0.831081081081081,0.8243243243243243,0.8301369863013699,0.02501167415126428
0.016987133026123046,0.004440988101076628,0.001094818115234375,3.991813441123864e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6052631578947368,0.5526315789473685,0.5833333333333334,0.4166666666666667,0.5833333333333334,0.5482456140350878,0.06789043007329595,203,0.6986301369863014,0.7123287671232876,0.6216216216216216,0.581081081081081,0.7364864864864865,0.6700296186597556,0.0587858816473062
0.027697992324829102,0.007211665616252323,0.0037384986877441405,0.0005153031729619246,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5,0.7222222222222222,0.5,0.5,0.5444444444444445,0.08888888888888889,205,0.6643835616438356,0.5,0.6216216216216216,0.5,0.5,0.5572010366530915,0.07134981599646077
0.017188167572021483,0.010640905545046552,0.0635993480682373,0.019491856059457403,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6842105263157895,0.5789473684210527,0.7222222222222222,0.7222222222222222,0.7777777777777778,0.6970760233918128,0.06617754291664756,80,0.7534246575342466,0.8561643835616438,0.8986486486486487,0.8445945945945946,0.9054054054054054,0.8516475379489078,0.054436922877181326
0.03038654327392578,0.013789983743496196,0.005267953872680664,0.0033702475663635327,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7105263157894737,0.6052631578947368,0.6666666666666666,0.8055555555555556,0.7777777777777778,0.7131578947368421,0.07283226035549176,74,0.8698630136986302,0.8561643835616438,0.918918918918919,0.9121621621621622,0.8716216216216216,0.8857460199925955,0.025000382087111996
0.03304553031921387,0.011369119858716971,0.001118612289428711,4.170332841686327e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': Normalizer(copy=True, norm='l2')}",0.6052631578947368,0.7368421052631579,0.6111111111111112,0.6944444444444444,0.5555555555555556,0.6406432748538011,0.06559360055399992,139,0.7534246575342466,0.821917808219178,0.8581081081081081,0.777027027027027,0.6418918918918919,0.7704738985560905,0.07374711258781647
0.03276104927062988,0.004775334980094604,0.0011389732360839843,0.00015711921118226487,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.631578947368421,0.5,0.5,0.4722222222222222,0.5207602339181288,0.05644410999772469,217,0.5,0.6643835616438356,0.5,0.5,0.6756756756756757,0.5680118474639022,0.08337366656871023
0.03011164665222168,0.010883492803236024,0.0008871078491210938,5.607276537093186e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': NonScaler()}",0.5,0.5,0.6111111111111112,0.5,0.5277777777777778,0.5277777777777778,0.04303314829119354,211,0.6506849315068494,0.547945205479452,0.6013513513513513,0.5337837837837838,0.7162162162162162,0.6099962976675306,0.06733744341927887
0.02503690719604492,0.003712493554706835,0.0013805389404296874,0.0006366928689166903,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': Binarizer(copy=True, threshold=0)}",0.8157894736842105,0.6578947368421053,0.6666666666666666,0.8333333333333334,0.75,0.7447368421052631,0.07288623886961751,46,0.8767123287671232,0.952054794520548,0.9054054054054054,0.8581081081081081,0.9054054054054054,0.899537208441318,0.03182550488324928
0.025928497314453125,0.0027344735745600205,0.0011455059051513673,0.00012932379325251896,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.631578947368421,0.631578947368421,0.75,0.7222222222222222,0.6111111111111112,0.6692982456140351,0.0557583249442468,100,0.815068493150685,0.8767123287671232,0.8716216216216216,0.831081081081081,0.8108108108108109,0.8410588670862642,0.02791147417796649
0.025249338150024413,0.005222962289434531,0.00110931396484375,4.9896947464903305e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': MaxAbsScaler(copy=True)}",0.631578947368421,0.631578947368421,0.75,0.7222222222222222,0.6111111111111112,0.6692982456140351,0.0557583249442468,100,0.815068493150685,0.8767123287671232,0.8716216216216216,0.831081081081081,0.8108108108108109,0.8410588670862642,0.02791147417796649
0.027322959899902344,0.003902372290269407,0.0010816097259521485,9.329798810627532e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.6052631578947368,0.631578947368421,0.5555555555555556,0.75,0.7222222222222222,0.6529239766081872,0.07271007426033385,111,0.863013698630137,0.8082191780821918,0.8108108108108109,0.7635135135135135,0.8445945945945946,0.8180303591262496,0.03420417239420014
0.025796175003051758,0.004958366579562506,0.0010465145111083984,4.409586264842104e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.5789473684210527,0.5789473684210527,0.6666666666666666,0.4444444444444444,0.6111111111111112,0.5760233918128654,0.07318124075303233,189,0.6643835616438356,0.7465753424657534,0.6621621621621622,0.5743243243243243,0.6756756756756757,0.6646242132543503,0.05476917372067479
0.014687585830688476,0.006431126133821175,0.0036262035369873046,0.00027632742528760086,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.5,0.5277777777777778,0.5,0.5,0.5055555555555555,0.011111111111111117,219,0.5,0.5,0.5202702702702703,0.5,0.5,0.504054054054054,0.008108108108108114
0.020853090286254882,0.002891105787293813,0.05994668006896973,0.008143845527316302,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7631578947368421,0.631578947368421,0.6666666666666666,0.6944444444444444,0.6111111111111112,0.6733918128654971,0.053242073352608846,98,0.8698630136986302,0.9452054794520548,0.9054054054054054,0.7297297297297297,0.831081081081081,0.8562569418733801,0.07369599497250189
0.0216522216796875,0.004870527833174805,0.004999494552612305,0.0028179737670861174,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7631578947368421,0.6052631578947368,0.6666666666666666,0.7222222222222222,0.6944444444444444,0.6903508771929825,0.05316815500669338,88,0.9041095890410958,0.9726027397260274,0.9256756756756757,0.7837837837837838,0.9054054054054054,0.8983154387263976,0.06239956000646632
0.02422051429748535,0.008332990428616169,0.0012337684631347657,0.0001629340359042272,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': Normalizer(copy=True, norm='l2')}",0.6578947368421053,0.7105263157894737,0.75,0.6944444444444444,0.6111111111111112,0.684795321637427,0.0472437171581172,90,0.8013698630136986,0.8424657534246576,0.7905405405405406,0.7905405405405406,0.7972972972972973,0.8044427989633469,0.01945657613192025
0.028216075897216798,0.005378906016504508,0.001107501983642578,4.75202141473655e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.5,0.6111111111111112,0.5,0.5277777777777778,0.5277777777777778,0.04303314829119354,211,0.6438356164383562,0.5342465753424658,0.5945945945945946,0.527027027027027,0.7162162162162162,0.6031840059237319,0.0707882289054307
0.029317903518676757,0.005084999430826175,0.0009706020355224609,7.495176364776898e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': NonScaler()}",0.5526315789473685,0.5263157894736842,0.5833333333333334,0.5277777777777778,0.5555555555555556,0.5491228070175438,0.020975329163112247,202,0.6438356164383562,0.6095890410958904,0.5540540540540541,0.5135135135135135,0.5945945945945946,0.5831173639392817,0.04518529556640705
0.02890043258666992,0.007641175727637841,0.0031042098999023438,0.004104018287197186,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': Binarizer(copy=True, threshold=0)}",0.7631578947368421,0.631578947368421,0.6944444444444444,0.8611111111111112,0.7222222222222222,0.7345029239766082,0.07641934673576686,56,0.8698630136986302,0.9041095890410958,0.8986486486486487,0.9121621621621622,0.8986486486486487,0.896686412439837,0.014295438728696952
0.015928888320922853,0.004295804841125901,0.006134510040283203,0.0064425373013795376,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.631578947368421,0.5,0.7222222222222222,0.75,0.6666666666666666,0.654093567251462,0.08746356484426875,108,0.7945205479452054,0.8356164383561644,0.6824324324324325,0.7905405405405406,0.831081081081081,0.7868382080710847,0.055335412098018046
0.020279788970947267,0.005075926681254621,0.0013385295867919921,0.000462247264341519,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': MaxAbsScaler(copy=True)}",0.6052631578947368,0.5526315789473685,0.6944444444444444,0.5833333333333334,0.6111111111111112,0.6093567251461989,0.047232857781543874,157,0.8561643835616438,0.7945205479452054,0.831081081081081,0.8243243243243243,0.8513513513513513,0.8314883376527213,0.022007057848040138
0.02549443244934082,0.005869728776672337,0.0011486053466796876,0.00010897514188679786,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.6842105263157895,0.6578947368421053,0.6111111111111112,0.6666666666666666,0.5555555555555556,0.6350877192982456,0.0465417725171264,141,0.8424657534246576,0.8013698630136986,0.8040540540540541,0.8175675675675675,0.8378378378378378,0.8206590151795631,0.016899697952388222
0.031090402603149415,0.005930347325197054,0.001280832290649414,0.00023109333237085318,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.5789473684210527,0.6842105263157895,0.6111111111111112,0.4444444444444444,0.5833333333333334,0.5804093567251463,0.07773599546061924,185,0.6643835616438356,0.7397260273972602,0.6891891891891891,0.5743243243243243,0.7635135135135135,0.6862273232136246,0.06609609714709716
0.03031129837036133,0.007873499037311844,0.0055010318756103516,0.0030641008449952944,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.4473684210526316,0.5,0.5,0.5,0.5,0.4894736842105264,0.021052631578947368,231,0.5616438356164384,0.5,0.5,0.5,0.5067567567567568,0.5136801184746391,0.024124212003610205
0.025597858428955077,0.004369180686531584,0.060028362274169925,0.016706355093094392,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7631578947368421,0.5526315789473685,0.6944444444444444,0.8055555555555556,0.6388888888888888,0.6909356725146198,0.08966935756960909,87,0.8835616438356164,0.8561643835616438,0.8378378378378378,0.8445945945945946,0.8040540540540541,0.8452425027767493,0.025843301675370144
0.025828123092651367,0.010124725143996127,0.0037870407104492188,0.000698425031287486,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7894736842105263,0.6578947368421053,0.6666666666666666,0.8611111111111112,0.7222222222222222,0.7394736842105264,0.07687556571642322,53,0.8698630136986302,0.958904109589041,0.8648648648648649,0.831081081081081,0.8918918918918919,0.8833209922251019,0.04251357922132795
0.029410648345947265,0.006390843233720576,0.002379179000854492,0.0024447443426201657,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': Normalizer(copy=True, norm='l2')}",0.6052631578947368,0.6052631578947368,0.5555555555555556,0.7777777777777778,0.6666666666666666,0.6421052631578947,0.07644060058908056,133,0.8698630136986302,0.8013698630136986,0.8243243243243243,0.7364864864864865,0.8378378378378378,0.8139763050721955,0.04463938354252798
0.03427414894104004,0.002488512338467348,0.0011214256286621095,8.963049602627384e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5,0.5,0.8055555555555556,0.5277777777777778,0.5555555555555556,0.5777777777777778,0.11573703697777589,186,0.5753424657534246,0.5684931506849316,0.7567567567567568,0.5202702702702703,0.581081081081081,0.6003887449092928,0.08110161036698883
0.02763543128967285,0.007209869093733648,0.0009520530700683593,5.591216109770767e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': NonScaler()}",0.5,0.5789473684210527,0.6944444444444444,0.5555555555555556,0.5555555555555556,0.5769005847953217,0.06425833603942546,187,0.5821917808219178,0.8013698630136986,0.6283783783783784,0.6013513513513513,0.7297297297297297,0.6686042206590151,0.08363159716866117
0.01962895393371582,0.004295469017921739,0.0033206939697265625,0.003778402709248709,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': Binarizer(copy=True, threshold=0)}",0.7894736842105263,0.631578947368421,0.7222222222222222,0.75,0.7222222222222222,0.7230994152046784,0.051974455295684084,65,0.815068493150685,0.910958904109589,0.9121621621621622,0.8648648648648649,0.8851351351351351,0.8776379118844873,0.03587897330588559
0.01711564064025879,0.004332155444021996,0.0011052608489990235,3.919833471108438e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.5789473684210527,0.631578947368421,0.6944444444444444,0.6944444444444444,0.5277777777777778,0.6254385964912281,0.06520795628086244,145,0.7945205479452054,0.726027397260274,0.8040540540540541,0.7972972972972973,0.7702702702702703,0.7784339133654201,0.028580016351409842
0.023884391784667967,0.0054205488600483475,0.0010947704315185547,9.090489916733524e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': MaxAbsScaler(copy=True)}",0.5789473684210527,0.5,0.6944444444444444,0.6388888888888888,0.5277777777777778,0.5880116959064328,0.07123589582415289,171,0.821917808219178,0.684931506849315,0.8108108108108109,0.7297297297297297,0.8513513513513513,0.779748241392077,0.06222897331531011
0.023656558990478516,0.008034502528296883,0.0012225627899169922,0.00010807200449780974,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.631578947368421,0.631578947368421,0.6111111111111112,0.7222222222222222,0.7222222222222222,0.6637426900584795,0.04832971581612721,104,0.8561643835616438,0.8082191780821918,0.831081081081081,0.777027027027027,0.8445945945945946,0.8234172528693076,0.02815181402653361
0.01767425537109375,0.00541250845435454,0.0013146400451660156,0.0003768388883400812,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6052631578947368,0.631578947368421,0.6666666666666666,0.5555555555555556,0.5555555555555556,0.6029239766081871,0.0433064528223944,163,0.7054794520547946,0.7054794520547946,0.7162162162162162,0.6283783783783784,0.7297297297297297,0.6970566456867828,0.03547734854371306
0.025586843490600586,0.0027993797920622234,0.00744333267211914,0.00503695689378461,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.6052631578947368,0.5,0.7222222222222222,0.6388888888888888,0.4444444444444444,0.5821637426900585,0.09908096548282205,182,0.678082191780822,0.5,0.6756756756756757,0.7027027027027027,0.6081081081081081,0.6329137356534617,0.07351279228606385
0.02257823944091797,0.002457653208428717,0.064339017868042,0.0060804986816705335,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6842105263157895,0.631578947368421,0.6944444444444444,0.8055555555555556,0.8333333333333334,0.7298245614035088,0.07672527991715636,59,0.8835616438356164,0.9452054794520548,0.8108108108108109,0.8513513513513513,0.8378378378378378,0.8657534246575344,0.04611974024358972
0.0246126651763916,0.00856403155813023,0.003526735305786133,0.000303366348366226,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7368421052631579,0.5789473684210527,0.6388888888888888,0.8055555555555556,0.6944444444444444,0.69093567251462,0.07811232626929798,86,0.8767123287671232,0.9178082191780822,0.8716216216216216,0.918918918918919,0.8851351351351351,0.8940392447241763,0.020327406840773395
0.02613863945007324,0.00693492980059613,0.0012992382049560546,0.0001331905797639947,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': Normalizer(copy=True, norm='l2')}",0.5789473684210527,0.6842105263157895,0.6388888888888888,0.6388888888888888,0.6388888888888888,0.6359649122807017,0.0334792129508008,140,0.8493150684931506,0.863013698630137,0.8243243243243243,0.7837837837837838,0.831081081081081,0.8303035912624953,0.026951200351326348
0.02774491310119629,0.0021373142352208237,0.0011482715606689453,7.622110346593379e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.6578947368421053,0.7105263157894737,0.7777777777777778,0.5555555555555556,0.5555555555555556,0.6514619883040936,0.0870422212383316,120,0.8082191780821918,0.7602739726027398,0.722972972972973,0.5878378378378378,0.581081081081081,0.6920770085153647,0.09195682757982192
0.03477711677551269,0.007708636907461628,0.0010880470275878907,0.00024328657989178552,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': NonScaler()}",0.6052631578947368,0.6842105263157895,0.5,0.7777777777777778,0.5555555555555556,0.6245614035087719,0.09765556591959712,146,0.8356164383561644,0.8013698630136986,0.5,0.8040540540540541,0.7905405405405406,0.7463161791928915,0.12406978749973295
0.02977333068847656,0.009134417467255577,0.0030309677124023436,0.0026418260565477377,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': Binarizer(copy=True, threshold=0)}",0.7368421052631579,0.631578947368421,0.6666666666666666,0.8333333333333334,0.7222222222222222,0.7181286549707602,0.06896123049594358,67,0.8904109589041096,0.9315068493150684,0.8986486486486487,0.8716216216216216,0.8918918918918919,0.896815994076268,0.01952865444030021
0.025501394271850587,0.003143167082309978,0.0010863304138183593,8.310296323694148e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.631578947368421,0.6052631578947368,0.75,0.4166666666666667,0.5277777777777778,0.5862573099415205,0.11082218513594869,178,0.8424657534246576,0.8561643835616438,0.8243243243243243,0.5743243243243243,0.6959459459459459,0.7586449463161793,0.10840203446376495
0.025075435638427734,0.0064912019010037346,0.0017591953277587891,0.001386968592026803,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': MaxAbsScaler(copy=True)}",0.631578947368421,0.6052631578947368,0.75,0.4166666666666667,0.5277777777777778,0.5862573099415205,0.11082218513594869,178,0.8424657534246576,0.8561643835616438,0.8243243243243243,0.5743243243243243,0.6959459459459459,0.7586449463161793,0.10840203446376495
0.019507646560668945,0.0029750104170459483,0.0012773513793945313,0.0002853444951277927,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.7105263157894737,0.6052631578947368,0.6388888888888888,0.6666666666666666,0.6388888888888888,0.652046783625731,0.035124249989345616,119,0.8287671232876712,0.8835616438356164,0.831081081081081,0.7364864864864865,0.8513513513513513,0.8262495372084413,0.04899360360308617
0.02322831153869629,0.007391762912446624,0.00126495361328125,0.00019687893130025384,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.6052631578947368,0.5526315789473685,0.5833333333333334,0.4166666666666667,0.5833333333333334,0.5482456140350878,0.06789043007329595,203,0.6986301369863014,0.7123287671232876,0.6216216216216216,0.581081081081081,0.7364864864864865,0.6700296186597556,0.0587858816473062
0.027047443389892577,0.011929888028438728,0.0034105777740478516,0.0001817912507995913,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.5,0.7894736842105263,0.7777777777777778,0.8055555555555556,0.5,0.6745614035087719,0.14280146164075405,96,0.5,0.7602739726027398,0.7905405405405406,0.8581081081081081,0.5,0.6817845242502777,0.15176936273192337
0.02185688018798828,0.009943888757632248,0.050620651245117186,0.015008897767558977,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.6842105263157895,0.5789473684210527,0.6944444444444444,0.7222222222222222,0.7777777777777778,0.6915204678362572,0.06498862798506685,85,0.7534246575342466,0.8561643835616438,0.9054054054054054,0.8445945945945946,0.9054054054054054,0.8529988893002592,0.05565710379775075
0.02347226142883301,0.007439839713324175,0.003730010986328125,0.0008438559233735617,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.7368421052631579,0.6052631578947368,0.7222222222222222,0.8055555555555556,0.75,0.7239766081871345,0.06571730934942202,61,0.8972602739726028,0.9178082191780822,0.8986486486486487,0.8918918918918919,0.7905405405405406,0.8792299148463532,0.04520309152099163
0.024841976165771485,0.005835572400563401,0.0024790287017822264,0.0023798047793930693,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': Normalizer(copy=True, norm='l2')}",0.5789473684210527,0.7368421052631579,0.5833333333333334,0.75,0.6111111111111112,0.6520467836257311,0.07553260383203401,116,0.863013698630137,0.7808219178082192,0.7837837837837838,0.75,0.7635135135135135,0.7882265827471306,0.03934383724817207
0.018946743011474608,0.0070848775971567406,0.001134490966796875,0.00012242227344342165,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.5789473684210527,0.631578947368421,0.75,0.8055555555555556,0.4444444444444444,0.6421052631578947,0.12769243874973113,133,0.7945205479452054,0.7876712328767124,0.8108108108108109,0.7972972972972973,0.8108108108108109,0.8002221399481673,0.009195955909982146
