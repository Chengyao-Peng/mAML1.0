mean_fit_time,std_fit_time,mean_score_time,std_score_time,param_clf,param_clf__max_depth,param_scl,param_clf__n_estimators,param_clf__learning_rate,param_clf__min_child_weight,param_clf__n_neighbors,param_clf__C,param_clf__loss,params,split0_test_score,split1_test_score,split2_test_score,split3_test_score,split4_test_score,mean_test_score,std_test_score,rank_test_score,split0_train_score,split1_train_score,split2_train_score,split3_train_score,split4_train_score,mean_train_score,std_train_score
0.3450450897216797,0.0370845210304667,0.0012826919555664062,0.0004659998321129809,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",4,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 4, 'scl': NonScaler()}",0.903125,0.896875,0.903125,0.91875,0.9206349206349206,0.9085019841269842,0.00943653171596453,173,0.9145098039215687,0.9152941176470588,0.9137254901960784,0.9113725490196078,0.91171875,0.9133241421568629,0.0015384197900142737
0.05520014762878418,0.013513406640721266,0.0011966228485107422,0.00011459905903639992,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",8,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 8, 'scl': NonScaler()}",0.90625,0.925,0.928125,0.925,0.9428571428571428,0.9254464285714287,0.011655120622914794,154,0.9772549019607844,0.9788235294117648,0.9803921568627451,0.984313725490196,0.98203125,0.9805631127450981,0.002458542561913215
0.04759726524353027,0.00877651277680203,0.0011249065399169921,0.00010455282936228208,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",16,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 16, 'scl': NonScaler()}",0.896875,0.921875,0.940625,0.925,0.946031746031746,0.9260813492063493,0.017212841924641648,149,0.9992156862745099,1.0,1.0,0.9992156862745099,0.9984375,0.9993737745098038,0.0005849633265646726
0.05784707069396973,0.012843924973483273,0.0024244308471679686,0.002727391648121701,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",32,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 32, 'scl': NonScaler()}",0.896875,0.921875,0.940625,0.925,0.9492063492063492,0.9267162698412699,0.01797855003085322,147,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
0.04704704284667969,0.011336216824754927,0.002172040939331055,0.0021845730647617233,"DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best')",64,NonScaler(),,,,,,,"{'clf': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,
                       max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort=False,
                       random_state=0, splitter='best'), 'clf__max_depth': 64, 'scl': NonScaler()}",0.896875,0.921875,0.940625,0.925,0.9492063492063492,0.9267162698412699,0.01797855003085322,147,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
0.09667487144470215,0.009645451032663578,0.006251811981201172,0.00514556833326966,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),5,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 5, 'scl': NonScaler()}",0.93125,0.93125,0.959375,0.946875,0.9682539682539683,0.9474007936507937,0.014833807594735116,85,0.9945098039215686,0.996078431372549,0.9937254901960785,0.9937254901960785,0.984375,0.992482843137255,0.00414396642223048
0.1757235050201416,0.024395325368612185,0.004836368560791016,0.00400242357400231,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),10,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 10, 'scl': NonScaler()}",0.934375,0.95,0.96875,0.94375,0.9746031746031746,0.954295634920635,0.01515136580442441,68,0.996078431372549,0.9984313725490196,0.9952941176470588,0.9913725490196078,0.99296875,0.9948290441176469,0.0024560979050057283
0.2248824119567871,0.010482303632353323,0.005426168441772461,0.0040187318880707664,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),15,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 15, 'scl': NonScaler()}",0.934375,0.95,0.9625,0.953125,0.9809523809523809,0.9561904761904761,0.015340118378272398,62,0.9984313725490196,0.9984313725490196,0.996078431372549,0.9952941176470588,0.9953125,0.9967095588235294,0.0014340748899833353
0.29607267379760743,0.01780518232601124,0.010298061370849609,0.005166088862121262,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),20,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 20, 'scl': NonScaler()}",0.9375,0.95,0.971875,0.959375,0.9777777777777777,0.9593055555555555,0.014569106817399284,55,0.9992156862745099,0.9984313725490196,0.9968627450980392,0.9968627450980392,0.99609375,0.9974932598039216,0.001148958985259182
0.3731990337371826,0.032926796888977955,0.00693817138671875,0.004100321385316511,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),25,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 25, 'scl': NonScaler()}",0.934375,0.953125,0.96875,0.95625,0.9746031746031746,0.9574206349206349,0.013960790360345397,58,0.9984313725490196,0.9992156862745099,0.9976470588235294,0.9984313725490196,0.9984375,0.9984325980392157,0.0004960496097184354
0.4244103908538818,0.012986683444034718,0.0075950145721435545,0.0041711812451290025,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),30,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 30, 'scl': NonScaler()}",0.9375,0.95625,0.971875,0.95625,0.9777777777777777,0.9599305555555556,0.014081306012310986,54,0.9984313725490196,1.0,0.9992156862745099,0.9984313725490196,0.9984375,0.9989031862745099,0.0006265359826558186
0.48899059295654296,0.032868277168400385,0.014377737045288086,0.007847533283368475,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),35,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 35, 'scl': NonScaler()}",0.9375,0.95625,0.971875,0.959375,0.9841269841269841,0.9618253968253969,0.01566633170345182,47,0.9984313725490196,1.0,0.9976470588235294,0.9992156862745099,0.9984375,0.9987463235294116,0.0007993691344253264
0.5541529178619384,0.02313907492793751,0.011311006546020509,0.004803840636273272,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),40,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 40, 'scl': NonScaler()}",0.9375,0.959375,0.971875,0.95,0.9841269841269841,0.9605753968253969,0.01629792750953544,50,0.9984313725490196,1.0,0.9992156862745099,0.9992156862745099,0.9984375,0.9990600490196078,0.0005856202083693932
0.6405794620513916,0.017848948534661655,0.016136884689331055,0.012578671980160437,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),45,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 45, 'scl': NonScaler()}",0.9375,0.95625,0.971875,0.95625,0.9841269841269841,0.9612003968253969,0.01581326800741471,49,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
0.6949928283691407,0.020730647269927516,0.02046060562133789,0.002935071332990557,"BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)",,NonScaler(),50,,,,,,"{'clf': BaggingClassifier(base_estimator=None, bootstrap=True, bootstrap_features=False,
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), 'clf__n_estimators': 50, 'scl': NonScaler()}",0.9375,0.959375,0.971875,0.959375,0.9841269841269841,0.9624503968253968,0.015492811333351791,46,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
2.701627254486084,0.08668823188961199,0.0026403427124023437,0.0001391994250726171,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.001,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.001, 'scl': NonScaler()}",0.9375,0.9,0.95,0.95,0.9333333333333333,0.9341666666666667,0.01833333333333331,129,0.9709803921568627,0.9615686274509804,0.9631372549019608,0.9592156862745098,0.9671875,0.9644178921568626,0.004184696429610733
2.7380909442901613,0.08308368306973266,0.009644508361816406,0.004733854845642964,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.01,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.01, 'scl': NonScaler()}",0.953125,0.953125,0.95625,0.965625,0.9650793650793651,0.9586408730158731,0.005599967746595728,56,0.9827450980392157,0.9858823529411764,0.9788235294117648,0.9803921568627451,0.98203125,0.9819748774509804,0.0023791082888342664
2.7141292095184326,0.09012681656475864,0.006263589859008789,0.006353428389011934,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.1,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.1, 'scl': NonScaler()}",0.965625,0.959375,0.978125,0.971875,0.9714285714285714,0.9692857142857143,0.006341171751630272,32,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
2.4087075710296633,0.08230131379210685,0.007155227661132813,0.005280106653214172,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.2,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.2, 'scl': NonScaler()}",0.965625,0.959375,0.978125,0.978125,0.9746031746031746,0.9711706349206348,0.007461900372428776,17,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
1.6262784957885743,0.15439294118466323,0.004469966888427735,0.003989161307550742,"GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)",,NonScaler(),,0.5,,,,,"{'clf': GradientBoostingClassifier(criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='auto',
                           random_state=None, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'clf__learning_rate': 0.5, 'scl': NonScaler()}",0.971875,0.959375,0.978125,0.978125,0.9746031746031746,0.9724206349206348,0.006932955348656538,4,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
0.3529458522796631,0.026295024946480693,0.026585197448730467,0.004555144880312999,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.001,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.001, 'scl': NonScaler()}",0.7625,0.740625,0.759375,0.75,0.7714285714285715,0.7567857142857142,0.010592311661130959,220,0.7592156862745097,0.7733333333333333,0.763921568627451,0.7623529411764706,0.775,0.7667647058823529,0.00625302694866746
0.35368847846984863,0.017942920007765404,0.022883510589599608,0.0015976429988939043,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.01,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.01, 'scl': NonScaler()}",0.890625,0.8875,0.903125,0.865625,0.819047619047619,0.8731845238095237,0.029642827261411594,190,0.8988235294117647,0.9066666666666666,0.9043137254901961,0.8509803921568627,0.86015625,0.884188112745098,0.0236846120062922
0.37306504249572753,0.028062377486446938,0.02601151466369629,0.00824446897593448,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.1,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.1, 'scl': NonScaler()}",0.5875,0.66875,0.5375,0.646875,0.7142857142857143,0.6309821428571429,0.06204528464709285,222,0.5984313725490196,0.6870588235294117,0.5615686274509804,0.6486274509803922,0.72734375,0.6446060049019607,0.05948319263245873
0.364806604385376,0.021572568851515598,0.02708468437194824,0.004186232930862192,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.2,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.2, 'scl': NonScaler()}",0.628125,0.73125,0.61875,0.81875,0.6857142857142857,0.6965178571428572,0.07346993693105404,221,0.6125490196078431,0.7411764705882353,0.643921568627451,0.8227450980392157,0.68828125,0.701734681372549,0.07439974296159461
0.3527491569519043,0.059680462819511046,0.03258218765258789,0.012615705444417492,"AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0)",,NonScaler(),,0.5,,,,,"{'clf': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=0), 'clf__learning_rate': 0.5, 'scl': NonScaler()}",0.815625,0.85625,0.84375,0.8375,0.8412698412698413,0.8388789682539682,0.01322001937194143,209,0.807843137254902,0.8807843137254902,0.8682352941176471,0.8337254901960784,0.85546875,0.8492113970588235,0.025880720324371994
1.9485342502593994,0.09294285779761002,0.10863990783691406,0.018064522917158283,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",4,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 4, 'scl': NonScaler()}",0.93125,0.94375,0.953125,0.946875,0.9301587301587302,0.941031746031746,0.00896308365149593,102,0.956078431372549,0.9568627450980393,0.9529411764705882,0.9513725490196079,0.95546875,0.9545447303921568,0.002059774888153869
2.3804322242736817,0.14763109251265796,0.09515151977539063,0.006522353263463694,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",8,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 8, 'scl': NonScaler()}",0.95625,0.959375,0.9875,0.975,0.9650793650793651,0.968640873015873,0.011385777463372996,34,0.9874509803921568,0.9905882352941177,0.9874509803921568,0.9858823529411764,0.98984375,0.9882432598039216,0.0017256751411858055
2.401423454284668,0.047720618396615164,0.11244893074035645,0.013747414281670221,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",16,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 16, 'scl': NonScaler()}",0.95625,0.9625,0.98125,0.978125,0.9714285714285714,0.9699107142857143,0.009379675704763474,28,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
2.4552477836608886,0.09921334232108325,0.10054411888122558,0.001658307174955717,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",32,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 32, 'scl': NonScaler()}",0.95625,0.9625,0.98125,0.978125,0.9714285714285714,0.9699107142857143,0.009379675704763474,28,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
2.407319259643555,0.07193017460412209,0.11403956413269042,0.012830016617215348,"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False)",64,NonScaler(),,,,,,,"{'clf': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                       max_depth=None, max_features='auto', max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=500,
                       n_jobs=None, oob_score=False, random_state=0, verbose=0,
                       warm_start=False), 'clf__max_depth': 64, 'scl': NonScaler()}",0.95625,0.9625,0.98125,0.978125,0.9714285714285714,0.9699107142857143,0.009379675704763474,28,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
0.05776262283325195,0.012856650805022655,0.0021401405334472655,0.00021060578566436334,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",4,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 4, 'scl': NonScaler()}",0.834375,0.859375,0.884375,0.884375,0.8412698412698413,0.8607539682539682,0.020944159116168808,196,0.8784313725490196,0.8698039215686274,0.8698039215686274,0.8666666666666667,0.8703125,0.8710036764705882,0.003932858289740656
0.056474161148071286,0.0059448351536526365,0.0036772727966308595,0.003059087558618472,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",8,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 8, 'scl': NonScaler()}",0.90625,0.871875,0.9125,0.91875,0.8920634920634921,0.9002876984126985,0.01673597879625155,176,0.9254901960784314,0.9341176470588235,0.923921568627451,0.9254901960784314,0.9359375,0.9289914215686274,0.0049949326734735205
0.07760357856750488,0.016194604208491878,0.006507730484008789,0.005188957468744752,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",16,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 16, 'scl': NonScaler()}",0.953125,0.940625,0.946875,0.959375,0.9492063492063492,0.9498412698412698,0.006258057290658319,79,0.9835294117647059,0.9835294117647059,0.9874509803921568,0.9796078431372549,0.98046875,0.9829172794117647,0.002765918341164876
0.08694214820861816,0.024131468443578406,0.0027520179748535155,0.000501918289884489,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",32,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 32, 'scl': NonScaler()}",0.971875,0.953125,0.98125,0.953125,0.9619047619047619,0.9642559523809524,0.010956019711274346,42,0.9992156862745099,0.9992156862745099,0.9984313725490196,0.9992156862745099,0.9984375,0.9989031862745097,0.0003827376772223721
0.07964138984680176,0.021710952567639007,0.0026117801666259766,0.0006442558579232678,"ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False)",64,NonScaler(),,,,,,,"{'clf': ExtraTreesClassifier(bootstrap=False, class_weight=None, criterion='gini',
                     max_depth=None, max_features='auto', max_leaf_nodes=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators='warn',
                     n_jobs=None, oob_score=False, random_state=0, verbose=0,
                     warm_start=False), 'clf__max_depth': 64, 'scl': NonScaler()}",0.965625,0.953125,0.95625,0.978125,0.9619047619047619,0.9630059523809523,0.008717037849304837,45,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
2.2824673652648926,0.036187720195338224,0.013491201400756835,0.004052792492478171,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.965625,0.96875,0.978125,0.978125,0.9714285714285714,0.9724107142857144,0.005014328957892513,5,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
2.0809844017028807,0.014037568850718569,0.010439252853393555,0.005212574287053214,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.965625,0.9625,0.98125,0.971875,0.9777777777777777,0.9718055555555555,0.007066292137174985,6,0.9976470588235294,0.9992156862745099,0.9976470588235294,0.9968627450980392,0.99765625,0.9978057598039216,0.0007681008490816135
1.9703349113464355,0.10499949576879662,0.01522688865661621,0.0018061531314226308,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",4,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 4, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.96875,0.965625,0.978125,0.975,0.9682539682539683,0.9711507936507937,0.0046507149283656676,23,0.996078431372549,0.9968627450980392,0.9976470588235294,0.9945098039215686,0.996875,0.9963946078431374,0.00106498976102137
2.786036968231201,0.10124273321117729,0.010696983337402344,0.004912797431310388,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.971875,0.9625,0.975,0.971875,0.9746031746031746,0.971170634920635,0.004530309831352851,16,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
2.437437391281128,0.09500164164618637,0.011093473434448243,0.0064856559858949185,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.965625,0.965625,0.98125,0.971875,0.9714285714285714,0.9711607142857142,0.005721256908428858,22,0.9992156862745099,0.9992156862745099,0.9992156862745099,0.9992156862745099,0.9984375,0.9990600490196078,0.00031127450980394933
2.257245349884033,0.12420918931451402,0.015690135955810546,0.010502265862161296,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",8,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 8, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.96875,0.965625,0.975,0.971875,0.9746031746031746,0.9711706349206348,0.0035652779930956933,17,0.9968627450980392,0.9984313725490196,0.9976470588235294,0.9952941176470588,0.996875,0.9970220588235292,0.001040151724211927
2.8190855979919434,0.14939525790072297,0.014445018768310548,0.006534092637346305,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.975,0.959375,0.975,0.971875,0.9746031746031746,0.9711706349206348,0.006012379493017088,17,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
2.517258405685425,0.08272644343117878,0.0136993408203125,0.0070412014862056204,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.965625,0.959375,0.98125,0.971875,0.9777777777777777,0.9711805555555555,0.007945245686090873,13,0.9992156862745099,0.9992156862745099,0.9992156862745099,0.9992156862745099,0.9984375,0.9990600490196078,0.00031127450980394933
2.204661989212036,0.04413877958772393,0.011627960205078124,0.004533926028129854,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",16,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 16, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9625,0.965625,0.975,0.975,0.9746031746031746,0.970545634920635,0.0053868590865963776,24,0.9968627450980392,0.9984313725490196,0.9976470588235294,0.9952941176470588,0.996875,0.9970220588235292,0.001040151724211927
2.86865291595459,0.08855800877004628,0.015015745162963867,0.0037632720166048223,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.975,0.959375,0.975,0.971875,0.9746031746031746,0.9711706349206348,0.006012379493017088,17,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
2.4546515941619873,0.0488174083773092,0.014260530471801758,0.004107146413811072,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.965625,0.959375,0.98125,0.971875,0.9777777777777777,0.9711805555555555,0.007945245686090873,13,0.9992156862745099,0.9992156862745099,0.9992156862745099,0.9992156862745099,0.9984375,0.9990600490196078,0.00031127450980394933
2.214229965209961,0.06727522470482812,0.00960526466369629,0.005003498531703467,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",32,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 32, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9625,0.965625,0.975,0.975,0.9746031746031746,0.970545634920635,0.0053868590865963776,24,0.9968627450980392,0.9984313725490196,0.9976470588235294,0.9952941176470588,0.996875,0.9970220588235292,0.001040151724211927
2.8509331226348875,0.11508896649866632,0.016832876205444335,0.006201711714265769,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,1,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 1, 'scl': NonScaler()}",0.975,0.959375,0.975,0.971875,0.9746031746031746,0.9711706349206348,0.006012379493017088,17,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
2.4478270530700685,0.049824740648331325,0.01548771858215332,0.00842157069329727,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,3,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 3, 'scl': NonScaler()}",0.965625,0.959375,0.98125,0.971875,0.9777777777777777,0.9711805555555555,0.007945245686090873,13,0.9992156862745099,0.9992156862745099,0.9992156862745099,0.9992156862745099,0.9984375,0.9990600490196078,0.00031127450980394933
2.231095790863037,0.09037530275602337,0.013855075836181641,0.003957608431902893,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1)",64,NonScaler(),,,5,,,,"{'clf': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, gamma=0,
              learning_rate=0.1, max_delta_step=0, max_depth=3,
              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,
              nthread=None, objective='binary:logistic', random_state=0,
              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
              silent=None, subsample=1, verbosity=1), 'clf__max_depth': 64, 'clf__min_child_weight': 5, 'scl': NonScaler()}",0.9625,0.965625,0.975,0.975,0.9746031746031746,0.970545634920635,0.0053868590865963776,24,0.9968627450980392,0.9984313725490196,0.9976470588235294,0.9952941176470588,0.996875,0.9970220588235292,0.001040151724211927
1.7420430183410645,0.04937735437805036,0.05099301338195801,0.016559899491417028,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",32,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 32, 'scl': NonScaler()}",0.965625,0.9625,0.98125,0.975,0.9746031746031746,0.9717956349206348,0.006812060152204952,7,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
1.7375297546386719,0.05076988300656674,0.05390477180480957,0.016865429828373687,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",38,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 38, 'scl': NonScaler()}",0.965625,0.9625,0.98125,0.975,0.9746031746031746,0.9717956349206348,0.006812060152204952,7,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
1.7191431522369385,0.07871913874297931,0.040333795547485354,0.0015734726663366129,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",45,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 45, 'scl': NonScaler()}",0.965625,0.9625,0.98125,0.975,0.9746031746031746,0.9717956349206348,0.006812060152204952,7,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
1.7498299598693847,0.05471551399017963,0.050719404220581056,0.007076562080224628,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",53,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 53, 'scl': NonScaler()}",0.965625,0.9625,0.98125,0.975,0.9746031746031746,0.9717956349206348,0.006812060152204952,7,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
1.7601966381072998,0.06487096424750265,0.03888063430786133,0.0034804543443520426,"LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)",64,NonScaler(),,,,,,,"{'clf': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, silent=True,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), 'clf__max_depth': 64, 'scl': NonScaler()}",0.965625,0.9625,0.98125,0.975,0.9746031746031746,0.9717956349206348,0.006812060152204952,7,0.9992156862745099,1.0,1.0,0.9992156862745099,0.99921875,0.9995300245098038,0.0003837350115794266
0.03917903900146484,0.008509043977610287,0.042082929611206056,0.00238824262987174,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': NonScaler()}",0.946875,0.871875,0.91875,0.90625,0.9142857142857143,0.9116071428571428,0.02412201921947022,169,0.9333333333333333,0.9419607843137255,0.9301960784313725,0.9380392156862745,0.93984375,0.9366746323529412,0.004312417812321056
0.31513333320617676,0.026042636717346135,0.06613349914550781,0.008908320385612824,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': Binarizer(copy=True, threshold=0)}",0.846875,0.83125,0.859375,0.8375,0.873015873015873,0.8496031746031747,0.015062614704658427,200,0.8933333333333333,0.9066666666666666,0.8831372549019608,0.8972549019607843,0.88828125,0.8937346813725491,0.008022900204044878
0.3257108211517334,0.021499877155374495,0.06626124382019043,0.01724602901516515,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.93125,0.94375,0.959375,0.934375,0.9333333333333333,0.9404166666666667,0.010404159157653133,103,0.952156862745098,0.9584313725490196,0.9592156862745098,0.9498039215686275,0.95546875,0.955015318627451,0.0036013203720637456
0.2787001132965088,0.07635734646907921,0.0536956787109375,0.026070170256125593,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': MaxAbsScaler(copy=True)}",0.93125,0.94375,0.959375,0.934375,0.9333333333333333,0.9404166666666667,0.010404159157653133,103,0.952156862745098,0.9584313725490196,0.9592156862745098,0.9498039215686275,0.95546875,0.955015318627451,0.0036013203720637456
0.3299518585205078,0.02843052240268365,0.05888185501098633,0.005586980369277199,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.934375,0.946875,0.946875,0.9375,0.9142857142857143,0.9359821428571429,0.011940942045700413,123,0.9505882352941176,0.9552941176470588,0.952156862745098,0.952156862745098,0.953125,0.9526642156862746,0.0015461704375374335
0.3384587287902832,0.023072924549578173,0.042286252975463866,0.009700274409542353,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.93125,0.95,0.94375,0.953125,0.9238095238095239,0.9403869047619049,0.011173841486261119,105,0.9545098039215686,0.9537254901960784,0.9490196078431372,0.9490196078431372,0.9484375,0.9509424019607844,0.002613072717935631
0.6629417419433594,0.04778084132948882,0.04472532272338867,0.0032546872893732333,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.95625,0.959375,0.965625,0.965625,0.9714285714285714,0.9636607142857143,0.005316812475342627,44,0.9764705882352941,0.9780392156862745,0.9709803921568627,0.9756862745098039,0.97578125,0.9753915441176471,0.0023609955206683377
0.5641557216644287,0.018995131381534084,0.15035009384155273,0.014911200048606937,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.890625,0.86875,0.896875,0.8625,0.8952380952380953,0.8827976190476191,0.014307584945106942,186,0.9145098039215687,0.9176470588235294,0.9050980392156863,0.9231372549019607,0.91328125,0.914734681372549,0.0059010692084781
0.468267822265625,0.03276616589420073,0.07044320106506348,0.01459166478221178,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.915625,0.903125,0.93125,0.909375,0.9142857142857143,0.9147321428571429,0.009351586409125845,167,0.9435294117647058,0.9513725490196079,0.9396078431372549,0.9419607843137255,0.94140625,0.9435753676470588,0.004095152029961857
0.30451092720031736,0.07409205978483166,0.03632698059082031,0.015011557762887194,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': Normalizer(copy=True, norm='l2')}",0.94375,0.915625,0.94375,0.91875,0.9301587301587302,0.930406746031746,0.011920789475463309,136,0.9529411764705882,0.9568627450980393,0.9505882352941176,0.9576470588235294,0.9484375,0.953295343137255,0.0035416463124457514
0.3412662982940674,0.011696808992866922,0.04576129913330078,0.0012066065604239113,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,5,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 5, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.965625,0.95625,0.990625,0.975,0.9777777777777777,0.9730555555555556,0.011596598452952139,2,0.9788235294117648,0.9819607843137255,0.971764705882353,0.9756862745098039,0.97734375,0.9771158088235294,0.0033799386186497476
0.040538692474365236,0.0077675036790901255,0.042876911163330075,0.00503277033156034,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': NonScaler()}",0.946875,0.8625,0.896875,0.875,0.9047619047619048,0.897202380952381,0.029057954591758334,177,0.9137254901960784,0.9223529411764706,0.9105882352941177,0.9192156862745098,0.91640625,0.9164577205882353,0.004105571586655449
0.028372478485107423,0.00779773130580783,0.07245011329650879,0.00765352033730089,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': Binarizer(copy=True, threshold=0)}",0.871875,0.859375,0.859375,0.84375,0.8698412698412699,0.8608432539682539,0.009991542231445617,195,0.8956862745098039,0.8909803921568628,0.88,0.8933333333333333,0.88203125,0.8884062499999998,0.006248308234125352
0.04003982543945313,0.013844167127546292,0.0584925651550293,0.0067477078946796346,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.934375,0.925,0.95625,0.946875,0.9301587301587302,0.9385317460317459,0.011437136822756126,112,0.9419607843137255,0.9466666666666667,0.9505882352941176,0.9372549019607843,0.94609375,0.9445128676470589,0.004543992220967128
0.03024592399597168,0.004465445035798603,0.054629182815551756,0.003990211571538526,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': MaxAbsScaler(copy=True)}",0.93125,0.925,0.95625,0.946875,0.9301587301587302,0.937906746031746,0.0117288759581695,116,0.9419607843137255,0.9466666666666667,0.9505882352941176,0.9372549019607843,0.94609375,0.9445128676470589,0.004543992220967128
0.03896622657775879,0.005884340350654327,0.06533465385437012,0.008502282458816549,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.934375,0.940625,0.946875,0.9375,0.9238095238095239,0.9366369047619048,0.007630548425531181,120,0.9419607843137255,0.9505882352941176,0.9458823529411765,0.9396078431372549,0.94765625,0.9451390931372549,0.003931362043712424
0.03373360633850098,0.010368577848316345,0.051026344299316406,0.0120458302281551,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.93125,0.94375,0.94375,0.94375,0.9142857142857143,0.935357142857143,0.01159477362910566,125,0.9435294117647058,0.9450980392156862,0.9403921568627451,0.9435294117647058,0.94375,0.9432598039215685,0.0015484300193415528
0.027312612533569335,0.0025052369226793813,0.05422453880310059,0.006939191931092004,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.959375,0.95625,0.96875,0.959375,0.9587301587301588,0.9604960317460318,0.004284588880750059,52,0.971764705882353,0.9733333333333334,0.9725490196078431,0.9694117647058823,0.96953125,0.9713180147058823,0.0015876229037543172
0.033561420440673825,0.009206587460097688,0.1390061378479004,0.010925839222089943,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.8875,0.875,0.884375,0.8875,0.8825396825396825,0.8833829365079364,0.004601506608030014,184,0.9027450980392157,0.9058823529411765,0.8949019607843137,0.9090196078431373,0.90234375,0.9029785539215688,0.0047035139120060595
0.03855156898498535,0.002734397864705148,0.07179532051086426,0.005462991873631526,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9125,0.896875,0.925,0.909375,0.9079365079365079,0.9103373015873016,0.009028791587938173,170,0.923921568627451,0.9372549019607843,0.9270588235294117,0.9286274509803921,0.93046875,0.9294662990196079,0.004447715888720653
0.028968667984008788,0.0064212772231934025,0.043565893173217775,0.004653075756245248,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': Normalizer(copy=True, norm='l2')}",0.9375,0.909375,0.915625,0.90625,0.9301587301587302,0.9197817460317461,0.012085573006395683,164,0.9341176470588235,0.9403921568627451,0.9388235294117647,0.9427450980392157,0.940625,0.93934068627451,0.002894569449032301
0.04843287467956543,0.009329218325765113,0.05785799026489258,0.010873643665265477,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,10,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 10, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.965625,0.95625,0.9875,0.98125,0.9746031746031746,0.9730456349206349,0.011097976221621281,3,0.9749019607843137,0.9796078431372549,0.9686274509803922,0.9733333333333334,0.975,0.9742941176470588,0.003525269900857895
0.03256239891052246,0.004254173327555011,0.03976292610168457,0.007506209417665595,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': NonScaler()}",0.903125,0.878125,0.890625,0.8625,0.8920634920634921,0.8852876984126985,0.013879127805792884,181,0.8956862745098039,0.9066666666666666,0.8988235294117647,0.9066666666666666,0.90625,0.9028186274509803,0.0046523197654834095
0.033281373977661136,0.008081298143089766,0.07409076690673828,0.004273304657456913,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': Binarizer(copy=True, threshold=0)}",0.878125,0.878125,0.86875,0.84375,0.8825396825396825,0.8702579365079366,0.01399690845855175,192,0.883921568627451,0.8807843137254902,0.88,0.8972549019607843,0.88125,0.884642156862745,0.006442668523281653
0.038021421432495116,0.010119529541844492,0.06261615753173828,0.01046855885935242,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.91875,0.91875,0.95,0.9375,0.9238095238095239,0.9297619047619048,0.012226312189313946,137,0.9325490196078431,0.9403921568627451,0.9411764705882353,0.9294117647058824,0.94140625,0.9369871323529413,0.005015104929448968
0.029070472717285155,0.005147678173932186,0.05612416267395019,0.003817163598167281,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': MaxAbsScaler(copy=True)}",0.91875,0.91875,0.95,0.9375,0.9238095238095239,0.9297619047619048,0.012226312189313946,137,0.9325490196078431,0.9403921568627451,0.9411764705882353,0.9294117647058824,0.94140625,0.9369871323529413,0.005015104929448968
0.040758180618286136,0.00891971735524492,0.07074170112609864,0.011316156865036271,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.91875,0.9125,0.95,0.934375,0.9142857142857143,0.925982142857143,0.014270080731433597,152,0.9301960784313725,0.9403921568627451,0.9356862745098039,0.9333333333333333,0.94453125,0.9368278186274509,0.005090027316994962
0.02562546730041504,0.004627323174220619,0.05027308464050293,0.006271250531567822,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.9375,0.925,0.928125,0.915625,0.9238095238095239,0.9260119047619048,0.0070739483645876605,150,0.9396078431372549,0.9411764705882353,0.9372549019607843,0.9341176470588235,0.93359375,0.9371501225490195,0.0029700687215592006
0.027360963821411132,0.003907311771234568,0.04910955429077148,0.004077157463511488,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.946875,0.959375,0.95,0.965625,0.9619047619047619,0.9567559523809525,0.007145708756177921,60,0.9647058823529412,0.9670588235294117,0.9623529411764706,0.9623529411764706,0.9640625,0.9641066176470587,0.0017451272992699872
0.0326754093170166,0.009922948555615192,0.15140914916992188,0.019738789567403835,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9,0.865625,0.896875,0.865625,0.8888888888888888,0.8834027777777778,0.014961047674907812,183,0.8909803921568628,0.8988235294117647,0.8878431372549019,0.9003921568627451,0.89609375,0.894826593137255,0.004735369124411026
0.03505430221557617,0.004226861044792239,0.07201342582702637,0.0026898970535842695,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9125,0.88125,0.9375,0.90625,0.9111111111111111,0.9097222222222223,0.01791074406847521,172,0.9168627450980392,0.9262745098039216,0.9160784313725491,0.92,0.91875,0.9195931372549019,0.003614563753275039
0.03252043724060059,0.0023583687677285517,0.03892779350280762,0.006316093051122504,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': Normalizer(copy=True, norm='l2')}",0.9375,0.9,0.928125,0.909375,0.9142857142857143,0.9178571428571429,0.013377967914081858,166,0.9247058823529412,0.9388235294117647,0.9333333333333333,0.9372549019607843,0.93359375,0.9335422794117647,0.004894964523269186
0.04382166862487793,0.00925139448645407,0.05041260719299316,0.003363407951381239,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,15,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 15, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.959375,0.95625,0.990625,0.975,0.9714285714285714,0.9705357142857143,0.012271508606091894,27,0.9749019607843137,0.9764705882352941,0.9670588235294117,0.9709803921568627,0.9734375,0.9725698529411764,0.003295606317741521
0.03664774894714355,0.00875987413750746,0.04009742736816406,0.004183718227991285,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,NonScaler(),,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': NonScaler()}",0.90625,0.86875,0.88125,0.86875,0.8857142857142857,0.8821428571428571,0.01380901066370085,188,0.8909803921568628,0.8917647058823529,0.8941176470588236,0.8988235294117647,0.89765625,0.8946685049019608,0.0031153978294306103
0.03271141052246094,0.009344117880387555,0.07993869781494141,0.00842520680094144,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Binarizer(copy=True, threshold=0)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': Binarizer(copy=True, threshold=0)}",0.875,0.875,0.875,0.84375,0.8857142857142857,0.8708928571428572,0.014191654633075368,191,0.883921568627451,0.8776470588235294,0.8745098039215686,0.8901960784313725,0.8765625,0.8805674019607844,0.005748460356696415
0.03072047233581543,0.0055794136774467715,0.06387557983398437,0.0072464445801721745,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.909375,0.9125,0.95,0.93125,0.9206349206349206,0.924751984126984,0.014718692085216678,158,0.9262745098039216,0.9388235294117647,0.9349019607843138,0.9192156862745098,0.934375,0.930718137254902,0.007051618395201337
0.03967008590698242,0.01572643268854375,0.07277412414550781,0.01714762066494089,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,MaxAbsScaler(copy=True),,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': MaxAbsScaler(copy=True)}",0.909375,0.9125,0.95,0.93125,0.9206349206349206,0.924751984126984,0.014718692085216678,158,0.9262745098039216,0.9388235294117647,0.9349019607843138,0.9192156862745098,0.934375,0.930718137254902,0.007051618395201337
0.02594480514526367,0.006878935078158859,0.07180933952331543,0.01246732098613573,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.925,0.909375,0.953125,0.934375,0.9079365079365079,0.9259623015873016,0.016790351483374245,153,0.9286274509803921,0.9341176470588235,0.9294117647058824,0.923921568627451,0.934375,0.9300906862745097,0.003878962794933076
0.03238511085510254,0.002100798405472459,0.05423164367675781,0.005579048533465687,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.928125,0.925,0.90625,0.928125,0.9206349206349206,0.9216269841269842,0.008164085833274371,161,0.9262745098039216,0.9325490196078431,0.9286274509803921,0.9247058823529412,0.92734375,0.9279001225490197,0.002656937641390609
0.03359565734863281,0.010429810207244906,0.0724212646484375,0.025335925871705266,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.95625,0.95,0.95625,0.96875,0.9587301587301588,0.9579960317460318,0.006102795310937927,57,0.9639215686274509,0.9615686274509804,0.9592156862745098,0.9529411764705882,0.96484375,0.9604981617647059,0.004254468675700234
0.030293846130371095,0.00900359381472445,0.1572892665863037,0.013682684005105344,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.890625,0.875,0.9,0.86875,0.8857142857142857,0.884017857142857,0.011103065397649867,182,0.8878431372549019,0.8949019607843137,0.8784313725490196,0.899607843137255,0.88984375,0.8901256127450979,0.00713821530266019
0.03798809051513672,0.008020728222525557,0.0763847827911377,0.009180322909493744,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.915625,0.896875,0.94375,0.91875,0.8952380952380953,0.9140476190476191,0.017638191417638612,168,0.9184313725490196,0.9270588235294117,0.908235294117647,0.9254901960784314,0.921875,0.9202181372549021,0.006695010752304421
0.036094141006469724,0.006029152918025799,0.04350290298461914,0.0036673045951671245,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"Normalizer(copy=True, norm='l2')",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': Normalizer(copy=True, norm='l2')}",0.934375,0.903125,0.921875,0.903125,0.9301587301587302,0.918531746031746,0.013206880402740293,165,0.923921568627451,0.9301960784313725,0.9254901960784314,0.9286274509803921,0.92578125,0.9268033088235293,0.0022764742958414803
0.04196887016296387,0.004421429547491335,0.0561032772064209,0.01623820036864531,"KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,20,,,"{'clf': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), 'clf__n_neighbors': 20, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.95625,0.95,0.98125,0.975,0.9619047619047619,0.9648809523809524,0.011620108753262227,41,0.9670588235294117,0.9709803921568627,0.9607843137254902,0.9709803921568627,0.96875,0.9677107843137256,0.003764616522632261
0.03559069633483887,0.007319927278321991,0.0018233776092529297,0.0008705847726589758,"GaussianNB(priors=None, var_smoothing=1e-09)",,NonScaler(),,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': NonScaler()}",0.85625,0.840625,0.853125,0.828125,0.8539682539682539,0.8464186507936506,0.01064754529332909,201,0.8627450980392157,0.8658823529411764,0.855686274509804,0.8564705882352941,0.853125,0.858781862745098,0.004754975236953061
0.03649792671203613,0.005074908146643086,0.0018470287322998047,0.00023303061681002104,"GaussianNB(priors=None, var_smoothing=1e-09)",,"Binarizer(copy=True, threshold=0)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': Binarizer(copy=True, threshold=0)}",0.803125,0.75625,0.8125,0.721875,0.7936507936507936,0.7774801587301587,0.0337288894485738,217,0.8047058823529412,0.7749019607843137,0.8250980392156863,0.7686274509803922,0.7921875,0.7931041666666667,0.02044249434436078
0.03512420654296875,0.010179586068782465,0.004267454147338867,0.004813810812220523,"GaussianNB(priors=None, var_smoothing=1e-09)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.8375,0.8125,0.84375,0.8125,0.834920634920635,0.828234126984127,0.013163841464262856,211,0.8509803921568627,0.8509803921568627,0.8470588235294118,0.8454901960784313,0.84140625,0.8471832107843138,0.003608108081504227
0.028560876846313477,0.0071697849100817055,0.001609039306640625,6.370433789280332e-05,"GaussianNB(priors=None, var_smoothing=1e-09)",,MaxAbsScaler(copy=True),,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': MaxAbsScaler(copy=True)}",0.8375,0.8125,0.84375,0.8125,0.834920634920635,0.828234126984127,0.013163841464262856,211,0.8509803921568627,0.8509803921568627,0.8470588235294118,0.8454901960784313,0.84140625,0.8471832107843138,0.003608108081504227
0.034120798110961914,0.006322499708295266,0.001653909683227539,0.0001801772597904521,"GaussianNB(priors=None, var_smoothing=1e-09)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.8375,0.8125,0.840625,0.803125,0.8253968253968254,0.8238293650793651,0.014341978871888745,213,0.8494117647058823,0.8494117647058823,0.8439215686274509,0.8431372549019608,0.8390625,0.8449889705882352,0.003970225867027843
0.03362541198730469,0.0038848618493789863,0.0034586429595947266,0.0021680529148819946,"GaussianNB(priors=None, var_smoothing=1e-09)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.85,0.828125,0.853125,0.828125,0.8571428571428571,0.8433035714285714,0.012598464232612162,204,0.8572549019607844,0.8611764705882353,0.8549019607843137,0.855686274509804,0.853125,0.8564289215686275,0.002721047479345414
0.03258962631225586,0.007740162144100851,0.006644916534423828,0.003879483649931216,"GaussianNB(priors=None, var_smoothing=1e-09)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.846875,0.834375,0.834375,0.80625,0.834920634920635,0.831359126984127,0.01343194618979142,210,0.851764705882353,0.8384313725490196,0.8486274509803922,0.8494117647058823,0.84296875,0.8462408088235295,0.004857121052217852
0.0356381893157959,0.0021206092428319814,0.0758927345275879,0.014825800835620243,"GaussianNB(priors=None, var_smoothing=1e-09)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.7875,0.728125,0.815625,0.70625,0.765079365079365,0.760515873015873,0.039446008859622135,219,0.7913725490196079,0.731764705882353,0.8274509803921568,0.7521568627450981,0.78515625,0.7775802696078431,0.03310627052508426
0.050522661209106444,0.013600816663822868,0.008704042434692383,0.006461159707151108,"GaussianNB(priors=None, var_smoothing=1e-09)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.790625,0.740625,0.821875,0.703125,0.7904761904761904,0.769345238095238,0.04211577687911645,218,0.8086274509803921,0.7270588235294118,0.8313725490196079,0.76,0.79375,0.7841617647058824,0.03678015492398338
0.037802934646606445,0.006452036420029364,0.002740287780761719,0.0014908524837674122,"GaussianNB(priors=None, var_smoothing=1e-09)",,"Normalizer(copy=True, norm='l2')",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': Normalizer(copy=True, norm='l2')}",0.840625,0.8375,0.83125,0.834375,0.873015873015873,0.8433531746031747,0.01515699654551241,203,0.8541176470588235,0.8564705882352941,0.851764705882353,0.8682352941176471,0.86484375,0.8590863970588236,0.0063559031510806606
0.04237422943115234,0.0036913901731445565,0.002401113510131836,0.0010021426328671135,"GaussianNB(priors=None, var_smoothing=1e-09)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,,"{'clf': GaussianNB(priors=None, var_smoothing=1e-09), 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.840625,0.821875,0.821875,0.7875,0.8158730158730159,0.8175496031746032,0.017179532298492905,214,0.8423529411764706,0.8235294117647058,0.8352941176470589,0.8266666666666667,0.82734375,0.8310373774509804,0.006859699188383829
0.6438860893249512,0.1212575575509534,0.002273845672607422,0.002555797835308065,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': NonScaler()}",0.946875,0.9125,0.953125,0.921875,0.9365079365079365,0.9341765873015874,0.015145499035373069,128,0.9372549019607843,0.9396078431372549,0.9349019607843138,0.9380392156862745,0.9375,0.9374607843137255,0.0015189435613226687
0.03790721893310547,0.009123040944109017,0.003545856475830078,0.003981454012018296,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': Binarizer(copy=True, threshold=0)}",0.2,0.2,0.2,0.2,0.2,0.2,0.0,224,0.2,0.2,0.2,0.2,0.2,0.2,0.0
0.03154311180114746,0.007574590742949895,0.0011450290679931641,3.708144019986182e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.2,0.2,0.2,0.2,0.2,0.2,0.0,224,0.2,0.2,0.2,0.2,0.2,0.2,0.0
0.02812790870666504,0.006745065323283742,0.0010878086090087891,3.874741309264643e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': MaxAbsScaler(copy=True)}",0.2,0.2,0.2,0.2,0.2,0.2,0.0,224,0.2,0.2,0.2,0.2,0.2,0.2,0.0
0.04781017303466797,0.010054545711568896,0.0011485099792480468,4.1482475915366266e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.2,0.2,0.2,0.2,0.2,0.2,0.0,224,0.2,0.2,0.2,0.2,0.2,0.2,0.0
0.6737159729003906,0.12233554547666076,0.0051605224609375,0.00796673432931632,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.796875,0.7875,0.76875,0.7875,0.7587301587301587,0.7798710317460318,0.013972480871996814,216,0.7929411764705883,0.788235294117647,0.7827450980392157,0.7670588235294118,0.7578125,0.7777585784313725,0.013247407537653008
0.21276435852050782,0.03672398017417408,0.011207056045532227,0.007234224049348966,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.215625,0.23125,0.221875,0.215625,0.2253968253968254,0.22195436507936508,0.005973062615553451,223,0.2227450980392157,0.2196078431372549,0.22196078431372548,0.2227450980392157,0.22109375,0.22163051470588235,0.0011809307051447655
0.05358200073242188,0.014967147351718857,0.10528016090393066,0.021761981841774036,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.2,0.2,0.2,0.2,0.2,0.2,0.0,224,0.2,0.2,0.2,0.2,0.2,0.2,0.0
0.04421563148498535,0.010489150832824172,0.007251930236816406,0.0038416098029125847,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.2,0.2,0.2,0.2,0.2,0.2,0.0,224,0.2,0.2,0.2,0.2,0.2,0.2,0.0
0.04293365478515625,0.012316391349998599,0.0032204151153564452,0.0040297515761032006,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': Normalizer(copy=True, norm='l2')}",0.2,0.2,0.2,0.2,0.2,0.2,0.0,224,0.2,0.2,0.2,0.2,0.2,0.2,0.0
0.07029581069946289,0.017286660637101596,0.0014985561370849609,0.00026731784538593594,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,0.0001,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 0.0001, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.2,0.2,0.2,0.2,0.2,0.2,0.0,224,0.2,0.2,0.2,0.2,0.2,0.2,0.0
0.6741002082824707,0.057753509758213147,0.0015082359313964844,0.0009561410830213679,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': NonScaler()}",0.95,0.925,0.95625,0.925,0.9365079365079365,0.9385515873015873,0.012773155527965555,110,0.9388235294117647,0.9443137254901961,0.9427450980392157,0.9427450980392157,0.94140625,0.9420067401960786,0.0018388009750528844
0.6463767051696777,0.07684272023104347,0.0015592098236083985,0.000570319974248451,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': Binarizer(copy=True, threshold=0)}",0.903125,0.86875,0.9125,0.871875,0.8952380952380953,0.8902976190476192,0.01723710246088841,178,0.9145098039215687,0.9223529411764706,0.9105882352941177,0.9262745098039216,0.91640625,0.9180263480392157,0.005604781923838159
0.20949821472167968,0.0392742115418666,0.005241966247558594,0.005006828638564715,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.93125,0.928125,0.94375,0.925,0.926984126984127,0.9310218253968255,0.0066785549236325495,133,0.9380392156862745,0.9435294117647058,0.9333333333333333,0.9294117647058824,0.93125,0.9351127450980392,0.005098878136102865
0.2095362663269043,0.017699928729617943,0.0013442039489746094,0.00029322922602389014,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': MaxAbsScaler(copy=True)}",0.93125,0.928125,0.94375,0.925,0.926984126984127,0.9310218253968255,0.0066785549236325495,133,0.9380392156862745,0.9435294117647058,0.9333333333333333,0.9294117647058824,0.93125,0.9351127450980392,0.005098878136102865
0.649429178237915,0.00899272738786094,0.005190658569335938,0.004954956983472007,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9625,0.946875,0.94375,0.9625,0.9428571428571428,0.9516964285714286,0.008921425711997727,73,0.9615686274509804,0.9607843137254902,0.9529411764705882,0.9490196078431372,0.95625,0.9561127450980391,0.004732451548061361
0.6758227348327637,0.024550830885949667,0.003240346908569336,0.004018554558767001,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.865625,0.865625,0.85625,0.8625,0.8222222222222222,0.8544444444444445,0.016470781743274005,198,0.8729411764705882,0.855686274509804,0.8588235294117647,0.8415686274509804,0.82890625,0.8515851715686275,0.015099380480991478
0.6349423408508301,0.03013378403903151,0.008220624923706055,0.00490469861002063,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.96875,0.959375,0.978125,0.9625,0.9619047619047619,0.9661309523809523,0.006743945172171914,39,0.9725490196078431,0.9780392156862745,0.9733333333333334,0.9772549019607844,0.9734375,0.9749227941176472,0.0022591192978509045
0.6380983829498291,0.025873783630766412,0.07389388084411622,0.024028876526586685,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.940625,0.946875,0.959375,0.95,0.9523809523809523,0.9498511904761905,0.0061823149041193145,78,0.9725490196078431,0.9780392156862745,0.9662745098039216,0.9701960784313726,0.97109375,0.9716305147058824,0.0038196233268725163
0.39182162284851074,0.04129440325674756,0.009650945663452148,0.005082358226603068,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.95625,0.95625,0.984375,0.9625,0.9714285714285714,0.9661607142857143,0.010671043691663312,38,0.9764705882352941,0.9780392156862745,0.9694117647058823,0.9764705882352941,0.97421875,0.974922181372549,0.0030123259476457255
0.150269079208374,0.023659088451507555,0.0012365341186523437,5.4591003554499935e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': Normalizer(copy=True, norm='l2')}",0.94375,0.909375,0.9375,0.921875,0.926984126984127,0.9278968253968254,0.01203077323359289,145,0.9341176470588235,0.9301960784313725,0.9294117647058824,0.9356862745098039,0.93359375,0.9326011029411765,0.0023983143715490835
0.6347658634185791,0.0587797427916203,0.005419921875,0.007959126384713213,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,1.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 1.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.975,0.965625,0.984375,0.971875,0.9714285714285714,0.9736607142857142,0.0061535931928974295,1,0.9819607843137255,0.9882352941176471,0.9835294117647059,0.9827450980392157,0.98359375,0.9840128676470588,0.0021934703224478565
0.6364665985107422,0.08968594194349971,0.0031586647033691405,0.0029340925749581897,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,NonScaler(),,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': NonScaler()}",0.95,0.925,0.95625,0.925,0.9365079365079365,0.9385515873015873,0.012773155527965555,110,0.9388235294117647,0.9443137254901961,0.9427450980392157,0.9427450980392157,0.94140625,0.9420067401960786,0.0018388009750528844
0.6288438320159913,0.08722359846858695,0.0012834548950195312,6.324007755913628e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': Binarizer(copy=True, threshold=0)}",0.9,0.871875,0.890625,0.859375,0.8888888888888888,0.8821527777777778,0.014561160392472464,187,0.9192156862745098,0.9254901960784314,0.9129411764705883,0.9286274509803921,0.91953125,0.9211611519607844,0.005449690967759466
0.6731947422027588,0.04043102825389481,0.0011947154998779297,3.28027922846143e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.9625,0.940625,0.953125,0.95625,0.9428571428571428,0.9510714285714286,0.008224954252090381,74,0.96,0.9592156862745098,0.9552941176470588,0.9505882352941176,0.95625,0.9562696078431372,0.0033414117794337422
0.6286694049835205,0.01626963906908081,0.0017944812774658204,0.0012027501717292814,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,MaxAbsScaler(copy=True),,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': MaxAbsScaler(copy=True)}",0.9625,0.940625,0.953125,0.95625,0.9428571428571428,0.9510714285714286,0.008224954252090381,74,0.96,0.9592156862745098,0.9552941176470588,0.9505882352941176,0.95625,0.9562696078431372,0.0033414117794337422
0.6501359462738037,0.07004255884545084,0.0012713432312011718,8.108750120407193e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9625,0.95,0.94375,0.9625,0.9428571428571428,0.9523214285714285,0.008667615071079734,72,0.9615686274509804,0.9607843137254902,0.9552941176470588,0.9490196078431372,0.95703125,0.9567395833333334,0.004504486055018693
0.6368545532226563,0.019069536004234704,0.001246500015258789,2.6447660250257156e-05,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.865625,0.865625,0.85625,0.8625,0.8222222222222222,0.8544444444444445,0.016470781743274005,198,0.8729411764705882,0.855686274509804,0.8588235294117647,0.8415686274509804,0.82890625,0.8515851715686275,0.015099380480991478
0.6568217277526855,0.01843066176710025,0.015934467315673828,0.011300695632343762,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.971875,0.959375,0.978125,0.9625,0.9746031746031746,0.9692956349206348,0.007174683834179278,31,0.9733333333333334,0.9788235294117648,0.9725490196078431,0.9780392156862745,0.97265625,0.9750802696078431,0.002760515887424876
0.6174171447753907,0.12280284725378075,0.07044095993041992,0.021928535989144286,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.940625,0.946875,0.953125,0.95,0.9492063492063492,0.94796626984127,0.004180226424241122,83,0.9733333333333334,0.9780392156862745,0.9654901960784313,0.9701960784313726,0.97265625,0.9719430147058823,0.004105995895027746
0.6675456523895263,0.027417465947946848,0.0066395759582519535,0.0041294446485603065,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.95,0.95625,0.96875,0.95625,0.9523809523809523,0.9567261904761905,0.00646758444290272,61,0.9835294117647059,0.9835294117647059,0.9788235294117648,0.9788235294117648,0.984375,0.9818161764705883,0.0024629170119214974
0.6570096969604492,0.028848689641449668,0.0012967586517333984,0.0001254120706452825,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': Normalizer(copy=True, norm='l2')}",0.9625,0.946875,0.965625,0.971875,0.9619047619047619,0.9617559523809524,0.00823872743927083,48,0.967843137254902,0.9709803921568627,0.9670588235294117,0.9670588235294117,0.96640625,0.9678694852941178,0.0016207305912648484
0.6712788581848145,0.04318427495303292,0.005658721923828125,0.004278165930005226,"LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,10000.0,,"{'clf': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=0.15, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='elasticnet',
                   random_state=0, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False), 'clf__C': 10000.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.971875,0.9625,0.984375,0.96875,0.9714285714285714,0.9717857142857144,0.0071283334486471625,12,0.9819607843137255,0.9890196078431372,0.9827450980392157,0.9835294117647059,0.98359375,0.9841697303921568,0.002496881765915315
0.2724332809448242,0.0641854453001423,0.0010765552520751952,7.288009450809951e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': NonScaler()}",0.95625,0.95,0.9625,0.971875,0.946031746031746,0.9573313492063493,0.009174222131923562,59,0.9686274509803922,0.9694117647058823,0.9607843137254902,0.9631372549019608,0.9671875,0.9658296568627451,0.0033228723177719556
0.03989114761352539,0.006821580107622047,0.0013137340545654296,0.0001274033932565503,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': Binarizer(copy=True, threshold=0)}",0.796875,0.8125,0.790625,0.8125,0.8,0.8025,0.008705242673240066,215,0.8125490196078431,0.8141176470588235,0.8062745098039216,0.8070588235294117,0.809375,0.8098749999999999,0.0030428543998826186
0.039438390731811525,0.007283768517002498,0.0011940479278564453,0.00010622936643900474,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.946875,0.940625,0.965625,0.946875,0.926984126984127,0.9453968253968255,0.01245268508030481,91,0.9490196078431372,0.952156862745098,0.9427450980392157,0.9396078431372549,0.9421875,0.9451433823529412,0.004676435262126616
0.060129737854003905,0.013412341382085703,0.004341554641723633,0.006089683463191187,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': MaxAbsScaler(copy=True)}",0.946875,0.940625,0.965625,0.946875,0.926984126984127,0.9453968253968255,0.01245268508030481,91,0.9490196078431372,0.952156862745098,0.9427450980392157,0.9396078431372549,0.9421875,0.9451433823529412,0.004676435262126616
0.1102182388305664,0.015323742817524574,0.00337367057800293,0.0020626369432315936,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.946875,0.934375,0.95,0.94375,0.9206349206349206,0.939126984126984,0.010622280972024188,107,0.9419607843137255,0.9450980392156862,0.9372549019607843,0.9388235294117647,0.94296875,0.9412212009803922,0.002832353885003129
0.13936052322387696,0.057294140941560205,0.006168794631958008,0.006217008887447645,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.93125,0.953125,0.94375,0.953125,0.9492063492063492,0.9460912698412699,0.008177961534678776,88,0.9545098039215686,0.9505882352941176,0.9513725490196079,0.9505882352941176,0.9546875,0.9523492647058823,0.0018596610821970283
0.0605987548828125,0.019830501320224066,0.012564802169799804,0.010067163057405135,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.95,0.9375,0.946875,0.953125,0.9333333333333333,0.9441666666666666,0.007528879583163596,95,0.9450980392156862,0.9482352941176471,0.9458823529411765,0.9458823529411765,0.94921875,0.9468633578431372,0.0015793145630743695
0.06341843605041504,0.013964911514787374,0.1187398910522461,0.035248417650069655,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.878125,0.884375,0.909375,0.884375,0.8920634920634921,0.8896626984126984,0.010801635410363697,179,0.8972549019607843,0.8964705882352941,0.8909803921568628,0.8988235294117647,0.8984375,0.8963933823529413,0.0028331138815210024
0.09495930671691895,0.03137711897970034,0.011447715759277343,0.007970185966571444,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.846875,0.859375,0.828125,0.8375,0.8253968253968254,0.8394543650793651,0.012503487482760353,208,0.8415686274509804,0.8407843137254902,0.8431372549019608,0.8431372549019608,0.8421875,0.8421629901960784,0.0009113725964783419
0.0653193473815918,0.006370997827494056,0.0070455074310302734,0.005720402443828719,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': Normalizer(copy=True, norm='l2')}",0.88125,0.825,0.828125,0.853125,0.8380952380952381,0.8451190476190475,0.02055455484939261,202,0.8368627450980393,0.8486274509803922,0.8454901960784313,0.8423529411764706,0.84921875,0.8445104166666667,0.004543565184440025
0.0815394401550293,0.01656126681445412,0.007698440551757812,0.01097439395129697,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,0.0001,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 0.0001, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.94375,0.95,0.9625,0.95625,0.9492063492063492,0.9523412698412699,0.00644355739066652,71,0.9552941176470588,0.9568627450980393,0.9513725490196079,0.9529411764705882,0.95390625,0.9540753676470588,0.0018907693435721144
0.25029692649841306,0.034099937885866606,0.001800680160522461,0.0010889893039374475,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': NonScaler()}",0.946875,0.896875,0.95625,0.946875,0.9492063492063492,0.9392162698412697,0.02144782075596835,106,0.9529411764705882,0.9301960784313725,0.9592156862745098,0.9435294117647058,0.9515625,0.9474889705882352,0.009985572360808046
0.21451969146728517,0.05716495165443151,0.003900289535522461,0.004561461568249506,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': Binarizer(copy=True, threshold=0)}",0.8875,0.85,0.896875,0.85,0.8857142857142857,0.8740178571428572,0.019973675277265134,189,0.9050980392156863,0.9152941176470588,0.8988235294117647,0.9145098039215687,0.90703125,0.9081513480392157,0.006148733749553248
0.08330159187316895,0.010811940755982588,0.003453826904296875,0.004384075274196295,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.946875,0.9375,0.94375,0.946875,0.9492063492063492,0.9448412698412698,0.004059831211498871,93,0.9490196078431372,0.9498039215686275,0.9435294117647058,0.9411764705882353,0.94375,0.9454558823529411,0.0033627450980392238
0.08643183708190919,0.024100617090131,0.006677103042602539,0.008993820440681435,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': MaxAbsScaler(copy=True)}",0.946875,0.9375,0.94375,0.946875,0.9492063492063492,0.9448412698412698,0.004059831211498871,93,0.9490196078431372,0.9498039215686275,0.9435294117647058,0.9411764705882353,0.94375,0.9454558823529411,0.0033627450980392238
0.5056219577789307,0.03220887536379867,0.005086660385131836,0.00746352193790617,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.95625,0.94375,0.9625,0.959375,0.9523809523809523,0.9548511904761904,0.006484817870363946,67,0.9686274509803922,0.9623529411764706,0.9639215686274509,0.9568627450980393,0.96953125,0.9642591911764706,0.004589803712416454
0.2426304340362549,0.02402041425041487,0.01372218132019043,0.0071850838548320195,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.953125,0.93125,0.946875,0.95625,0.926984126984127,0.9428968253968254,0.01172698779283809,96,0.9701960784313726,0.971764705882353,0.9662745098039216,0.9749019607843137,0.971875,0.9710024509803921,0.002812550994881345
0.29238181114196776,0.02645660939999512,0.009319448471069336,0.004524019191246277,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.9625,0.95625,0.984375,0.9625,0.9682539682539683,0.9667757936507936,0.009584093269024844,36,0.9741176470588235,0.9788235294117648,0.9725490196078431,0.9749019607843137,0.97265625,0.974609681372549,0.0022867558397785584
0.6365296840667725,0.09598311099220531,0.0934781551361084,0.021479425012988246,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.928125,0.925,0.91875,0.946875,0.9365079365079365,0.9310515873015872,0.009763890703270248,132,0.967843137254902,0.9701960784313726,0.9317647058823529,0.9450980392156862,0.96484375,0.9559491421568627,0.015007929598989726
0.10463309288024902,0.013791574607660258,0.009365606307983398,0.004482596865817721,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.946875,0.95,0.984375,0.95625,0.9650793650793651,0.9605158730158732,0.01345316375256723,51,0.9764705882352941,0.9811764705882353,0.9725490196078431,0.9741176470588235,0.9765625,0.9761752450980392,0.0029200229906059146
0.05742645263671875,0.005223525154281275,0.0032186985015869142,0.0032528428992774695,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': Normalizer(copy=True, norm='l2')}",0.9625,0.9375,0.953125,0.9375,0.9492063492063492,0.9479662698412697,0.00957564843537627,84,0.9537254901960784,0.9529411764705882,0.9498039215686275,0.9529411764705882,0.9484375,0.9515698529411765,0.0020658159153229055
0.22678894996643068,0.033422997728462404,0.0016865730285644531,0.0003323449293231806,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,1.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 1.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.953125,0.965625,0.98125,0.971875,0.9650793650793651,0.9673908730158731,0.009210421325060794,35,0.9788235294117648,0.9874509803921568,0.9803921568627451,0.9780392156862745,0.97890625,0.9807224264705882,0.0034492446423733283
0.3177488327026367,0.054977057452916075,0.0010764122009277344,8.165707900436474e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,NonScaler(),,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': NonScaler()}",0.8375,0.909375,0.925,0.86875,0.8761904761904762,0.8833630952380952,0.03091492697307512,185,0.8227450980392157,0.9364705882352942,0.9286274509803921,0.8635294117647059,0.884375,0.8871495098039217,0.042110624722662006
0.3498691082000732,0.07940536144519933,0.001317739486694336,0.00013415464097052683,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Binarizer(copy=True, threshold=0)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': Binarizer(copy=True, threshold=0)}",0.875,0.825,0.8625,0.821875,0.8222222222222222,0.8413194444444445,0.02276888376493752,207,0.883921568627451,0.8949019607843137,0.8682352941176471,0.8611764705882353,0.8828125,0.8782095588235294,0.012017174858916414
0.3050968647003174,0.027854674576359276,0.001296234130859375,0.00014808787321217898,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.903125,0.9375,0.94375,0.95625,0.9015873015873016,0.9284424603174604,0.022144039409184264,140,0.9105882352941177,0.9670588235294117,0.9584313725490196,0.9639215686274509,0.9171875,0.9434374999999999,0.024374235982071828
0.2580402851104736,0.05370655134161233,0.0012076854705810546,4.283781465971647e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,MaxAbsScaler(copy=True),,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': MaxAbsScaler(copy=True)}",0.903125,0.9375,0.94375,0.95625,0.9015873015873016,0.9284424603174604,0.022144039409184264,140,0.9105882352941177,0.9670588235294117,0.9584313725490196,0.9639215686274509,0.9171875,0.9434374999999999,0.024374235982071828
0.5610813140869141,0.05608823295244141,0.0012100696563720702,2.44290521917825e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.925,0.9375,0.959375,0.95,0.9333333333333333,0.9410416666666667,0.01221195907479401,101,0.9545098039215686,0.9654901960784313,0.9631372549019608,0.9607843137254902,0.95859375,0.9605030637254902,0.0037803226264988394
0.2750344753265381,0.024688413590585052,0.0012033462524414062,5.324915505960487e-05,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.903125,0.928125,0.91875,0.903125,0.8507936507936508,0.9007837301587301,0.026759308707097296,175,0.8870588235294118,0.9623529411764706,0.9333333333333333,0.9019607843137255,0.896875,0.9163161764705883,0.027745257828820005
0.2864633560180664,0.029615631678366054,0.009125328063964844,0.0053996739425416634,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.85625,0.9375,0.9375,0.95,0.9650793650793651,0.9292658730158732,0.037893085496505205,139,0.855686274509804,0.9780392156862745,0.9545098039215686,0.9670588235294117,0.96328125,0.9437150735294116,0.04465760477593728
0.6136216163635254,0.04498226558785252,0.08180642127990723,0.004518414123908868,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.91875,0.915625,0.953125,0.925,0.9142857142857143,0.925357142857143,0.014367511359071945,157,0.9537254901960784,0.9388235294117647,0.9623529411764706,0.9294117647058824,0.95546875,0.9479564950980391,0.012035705424999982
0.23384175300598145,0.010201833227722772,0.013085651397705077,0.00748458612890115,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.928125,0.9375,0.903125,0.940625,0.9301587301587302,0.927906746031746,0.013213920760964469,144,0.9615686274509804,0.9764705882352941,0.9215686274509803,0.9568627450980393,0.94375,0.9520441176470588,0.018483158892076815
0.27154197692871096,0.019147779088731342,0.0018543720245361329,0.0011624213893339451,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"Normalizer(copy=True, norm='l2')",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': Normalizer(copy=True, norm='l2')}",0.953125,0.94375,0.946875,0.9625,0.9682539682539683,0.9549007936507936,0.009251618398729863,65,0.9584313725490196,0.9631372549019608,0.9623529411764706,0.9545098039215686,0.9609375,0.9598737745098038,0.0031234848306827038
0.2204435348510742,0.010418303100306905,0.0024807929992675783,0.002092065445740501,"LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,10000.0,,"{'clf': LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, loss='squared_hinge', max_iter=1000,
          multi_class='ovr', penalty='l2', random_state=0, tol=0.0001,
          verbose=0), 'clf__C': 10000.0, 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.884375,0.9375,0.9625,0.959375,0.9396825396825397,0.9366865079365079,0.028025830523925727,119,0.8870588235294118,0.9576470588235294,0.9647058823529412,0.9701960784313726,0.9671875,0.949359068627451,0.031424735337200076
0.395326042175293,0.16086270629745436,0.0023432254791259767,0.0024933697292964132,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': NonScaler()}",0.940625,0.93125,0.9125,0.928125,0.8380952380952381,0.9101190476190476,0.03713338840693775,171,0.9364705882352942,0.9498039215686275,0.9129411764705883,0.9168627450980392,0.83046875,0.9093094362745099,0.041626019118679684
0.20964784622192384,0.05578963465386889,0.0013073921203613282,0.00018008407896355976,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': Binarizer(copy=True, threshold=0)}",0.871875,0.846875,0.896875,0.846875,0.8603174603174604,0.8645634920634923,0.018661650419967583,194,0.8886274509803922,0.9066666666666666,0.8988235294117647,0.912156862745098,0.90625,0.9025049019607844,0.008131943695455047
0.1565484046936035,0.031238007585640798,0.0012317180633544921,6.302019584160265e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.93125,0.915625,0.93125,0.928125,0.9333333333333333,0.9279166666666667,0.006366961162473384,142,0.9482352941176471,0.9411764705882353,0.9176470588235294,0.9317647058823529,0.9390625,0.9355772058823529,0.010389914031468942
0.13403072357177734,0.010339963654203626,0.0015275001525878907,0.0004335942551624947,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': MaxAbsScaler(copy=True)}",0.93125,0.915625,0.93125,0.928125,0.9333333333333333,0.9279166666666667,0.006366961162473384,142,0.9482352941176471,0.9411764705882353,0.9176470588235294,0.9317647058823529,0.9390625,0.9355772058823529,0.010389914031468942
0.16584186553955077,0.045186865717860285,0.002889871597290039,0.0025132500629760956,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.940625,0.946875,0.95625,0.915625,0.9523809523809523,0.9423511904761904,0.014363195143022778,97,0.9545098039215686,0.9701960784313726,0.9607843137254902,0.9388235294117647,0.96953125,0.9587689950980393,0.011544939880068257
0.32094178199768064,0.16240218821303526,0.0011798381805419923,4.07888411579221e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.925,0.921875,0.940625,0.95,0.926984126984127,0.9328968253968254,0.010686849424871728,131,0.9403921568627451,0.9160784313725491,0.9301960784313725,0.9301960784313725,0.934375,0.9302475490196078,0.008008971384961757
0.15928211212158203,0.04370879640060452,0.01505422592163086,0.013578363820502435,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.940625,0.94375,0.975,0.928125,0.946031746031746,0.9467063492063492,0.015440046060837901,86,0.9631372549019608,0.9411764705882353,0.9584313725490196,0.9356862745098039,0.946875,0.9490612745098039,0.010312831961965637
0.20715770721435547,0.02730963015685189,0.0833310604095459,0.013380816267986723,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9375,0.925,0.946875,0.940625,0.8603174603174604,0.9220634920634921,0.03168476541013819,160,0.9670588235294117,0.9654901960784313,0.9325490196078431,0.96,0.87265625,0.9395508578431373,0.03569767263112308
0.14399232864379882,0.01533436205756331,0.006473827362060547,0.004038582633804939,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9375,0.9375,0.978125,0.928125,0.9682539682539683,0.9499007936507937,0.019571353542963087,77,0.9772549019607844,0.9741176470588235,0.9709803921568627,0.9458823529411765,0.97109375,0.9678658088235293,0.0112306110018175
0.1354215621948242,0.015000468492667802,0.003500080108642578,0.003989582510931747,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': Normalizer(copy=True, norm='l2')}",0.9625,0.93125,0.95,0.953125,0.9333333333333333,0.9460416666666667,0.011975089885999924,89,0.9584313725490196,0.9505882352941176,0.9568627450980393,0.9592156862745098,0.95,0.9550196078431373,0.003936442381593616
0.18866243362426757,0.026634971472431938,0.0016128063201904298,0.00017072538998147337,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'hinge', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.953125,0.965625,0.971875,0.971875,0.9587301587301588,0.9642460317460317,0.0073811390572058174,43,0.9756862745098039,0.984313725490196,0.9654901960784313,0.9709803921568627,0.9828125,0.9758566176470588,0.007087683124019642
0.394024133682251,0.14490462868644935,0.003323268890380859,0.0039976715832365966,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': NonScaler()}",0.934375,0.91875,0.934375,0.9375,0.946031746031746,0.9342063492063492,0.008827726350512143,127,0.9537254901960784,0.9341176470588235,0.9286274509803921,0.9286274509803921,0.96171875,0.9413633578431373,0.013740969967031154
0.2732832908630371,0.03736351147884483,0.005584049224853516,0.00651930065826643,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': Binarizer(copy=True, threshold=0)}",0.871875,0.828125,0.90625,0.853125,0.8666666666666667,0.8652083333333334,0.025503608132532492,193,0.9043137254901961,0.9003921568627451,0.9058823529411765,0.92,0.89609375,0.9053363970588235,0.008077588897062437
0.1592703342437744,0.011054594081969854,0.0013733386993408203,0.0003266122699746032,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.946875,0.940625,0.928125,0.93125,0.9428571428571428,0.9379464285714286,0.007103687243184324,113,0.9498039215686275,0.9498039215686275,0.9270588235294117,0.9270588235294117,0.940625,0.9388700980392157,0.010209692315917193
0.17856040000915527,0.03171019890589616,0.0012004375457763672,3.0507518183093522e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': MaxAbsScaler(copy=True)}",0.946875,0.940625,0.928125,0.93125,0.9428571428571428,0.9379464285714286,0.007103687243184324,113,0.9498039215686275,0.9498039215686275,0.9270588235294117,0.9270588235294117,0.940625,0.9388700980392157,0.010209692315917193
0.20627779960632325,0.054918344288025514,0.0032090187072753907,0.003728028394686692,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.9625,0.94375,0.925,0.903125,0.946031746031746,0.9360813492063492,0.02032083150355116,121,0.9709803921568627,0.9623529411764706,0.9537254901960784,0.9262745098039216,0.95703125,0.9540729166666667,0.015073456131258186
0.5341408252716064,0.32775684981947184,0.001180267333984375,3.9267938064104525e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.91875,0.93125,0.934375,0.934375,0.9333333333333333,0.9304166666666667,0.005943892757369634,135,0.9403921568627451,0.9262745098039216,0.927843137254902,0.9215686274509803,0.93671875,0.9305594362745098,0.006945402195104974
0.2248830795288086,0.05493335903790431,0.014757394790649414,0.015432365767783692,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.95625,0.946875,0.959375,0.95,0.9523809523809523,0.9529761904761905,0.004429427400636078,70,0.9662745098039216,0.9647058823529412,0.9482352941176471,0.9584313725490196,0.9609375,0.959716911764706,0.006369645360342459
0.2724433898925781,0.03664837649738272,0.08847689628601074,0.026136074724538216,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.925,0.821875,0.946875,0.909375,0.9333333333333333,0.9072916666666668,0.04440482174769362,174,0.9662745098039216,0.8721568627450981,0.9231372549019607,0.9262745098039216,0.9203125,0.9216311274509804,0.02988746444256286
0.18820157051086425,0.04031340904954848,0.014478635787963868,0.008945638730675819,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.94375,0.940625,0.978125,0.95625,0.9619047619047619,0.9561309523809524,0.013496753094885764,64,0.9749019607843137,0.9749019607843137,0.9686274509803922,0.9670588235294117,0.97734375,0.9725667892156864,0.003989523244147104
0.1711432933807373,0.013027472737342534,0.005517339706420899,0.007747267663047357,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': Normalizer(copy=True, norm='l2')}",0.959375,0.9375,0.94375,0.928125,0.9587301587301588,0.9454960317460317,0.012136768690965472,90,0.9513725490196079,0.9498039215686275,0.9490196078431372,0.9443137254901961,0.9484375,0.9485894607843137,0.0023541676235822964
0.2712093353271484,0.029453417305524792,0.005515003204345703,0.004998971121082466,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,log,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'log', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.959375,0.95625,0.9875,0.965625,0.9746031746031746,0.968670634920635,0.01131102920919344,33,0.9741176470588235,0.9811764705882353,0.9788235294117648,0.9733333333333334,0.9734375,0.9761776960784314,0.0032196601238262163
0.3991724491119385,0.18521924161202236,0.003912591934204101,0.005718327543176801,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': NonScaler()}",0.95625,0.909375,0.925,0.928125,0.946031746031746,0.9329563492063493,0.016469885413547936,130,0.9537254901960784,0.927843137254902,0.9145098039215687,0.9262745098039216,0.95546875,0.9355643382352941,0.016218657899305048
0.2784558296203613,0.03570003701769873,0.0014641761779785156,0.00038764850334400784,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': Binarizer(copy=True, threshold=0)}",0.859375,0.853125,0.86875,0.85,0.8476190476190476,0.8557738095238095,0.007592144652918514,197,0.8776470588235294,0.9207843137254902,0.8956862745098039,0.8878431372549019,0.90546875,0.8974859068627451,0.014807721774363625
0.18577814102172852,0.046074493680988766,0.006062936782836914,0.009594000605583958,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.959375,0.940625,0.95625,0.9375,0.9396825396825397,0.946686507936508,0.00919399357328733,87,0.9592156862745098,0.9545098039215686,0.952156862745098,0.9388235294117647,0.934375,0.9478161764705882,0.009540733258969175
0.17048707008361816,0.03129236926065685,0.0012150287628173828,3.957041711792833e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': MaxAbsScaler(copy=True)}",0.959375,0.940625,0.95625,0.95,0.9365079365079365,0.9485515873015874,0.008790790983173882,81,0.9615686274509804,0.9545098039215686,0.9513725490196079,0.9458823529411765,0.93359375,0.9493854166666665,0.0093838889200297
0.18380942344665527,0.04158145631841717,0.0020178794860839845,0.0016359897546168547,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.946875,0.9375,0.928125,0.965625,0.9333333333333333,0.9422916666666667,0.013186035332038873,99,0.9647058823529412,0.9631372549019608,0.9623529411764706,0.9584313725490196,0.95078125,0.9598817401960785,0.004998000519325352
0.4939995765686035,0.25871535758964587,0.0023524284362792967,0.002322979935081136,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.925,0.91875,0.928125,0.928125,0.926984126984127,0.9253968253968254,0.0035140619775784576,155,0.9458823529411765,0.9152941176470588,0.9317647058823529,0.923921568627451,0.934375,0.9302475490196078,0.010270422074511832
0.17209014892578126,0.02786992750045607,0.015356731414794923,0.01176540046601442,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.95625,0.928125,0.9625,0.96875,0.9587301587301588,0.9548710317460317,0.014021209256690545,66,0.9709803921568627,0.9349019607843138,0.9419607843137255,0.9568627450980393,0.96171875,0.9532849264705883,0.013139477115333711
0.16712331771850586,0.04437111635363653,0.09416723251342773,0.018570747812204472,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.9375,0.915625,0.94375,0.946875,0.9365079365079365,0.9360515873015872,0.010917540412086129,122,0.9592156862745098,0.9654901960784313,0.9254901960784314,0.9474509803921569,0.959375,0.9514044117647058,0.014213597716757875
0.20333552360534668,0.05282222517051511,0.011492586135864258,0.007287398204161255,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.946875,0.95,0.94375,0.940625,0.9587301587301588,0.9479960317460318,0.006210555170662345,82,0.9756862745098039,0.9835294117647059,0.9388235294117647,0.971764705882353,0.97890625,0.9697420343137255,0.015933949687859206
0.18678951263427734,0.04179581891075873,0.0032738208770751952,0.00404718397380408,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': Normalizer(copy=True, norm='l2')}",0.95,0.9375,0.965625,0.9625,0.9650793650793651,0.956140873015873,0.010913077194003428,63,0.9513725490196079,0.9513725490196079,0.9631372549019608,0.9607843137254902,0.95859375,0.9570520833333335,0.004854890583163585
0.21771574020385742,0.034553024922900105,0.003395223617553711,0.004017725838364738,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,modified_huber,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'modified_huber', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.953125,0.95,0.984375,0.95625,0.9587301587301588,0.9604960317460318,0.012295129193182446,52,0.9772549019607844,0.9662745098039216,0.9796078431372549,0.9607843137254902,0.97109375,0.9710030637254903,0.006927019673676139
0.5462404727935791,0.26604055602016835,0.0032674312591552735,0.004392130033981642,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': NonScaler()}",0.921875,0.93125,0.95,0.846875,0.7904761904761904,0.8880952380952379,0.060106891156609256,180,0.9419607843137255,0.9482352941176471,0.9380392156862745,0.847843137254902,0.80234375,0.8956844362745098,0.05949503171357332
0.8751629829406739,0.24677314355429655,0.004770994186401367,0.00542981168118229,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': Binarizer(copy=True, threshold=0)}",0.896875,0.8375,0.809375,0.84375,0.8285714285714286,0.8432142857142857,0.029229857446223206,205,0.9043137254901961,0.9027450980392157,0.8470588235294118,0.8807843137254902,0.86015625,0.8790116421568628,0.022729378105195125
1.1820948600769043,0.11674635134434846,0.0012732982635498048,8.506962000068046e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.9375,0.95,0.9125,0.94375,0.9492063492063492,0.9385912698412697,0.013794178209727946,108,0.952156862745098,0.9513725490196079,0.9403921568627451,0.952156862745098,0.953125,0.9498406862745098,0.004756834557729706
1.1514356136322021,0.4112797812643318,0.001301717758178711,0.00014592225220699792,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': MaxAbsScaler(copy=True)}",0.9375,0.940625,0.9125,0.940625,0.9523809523809523,0.9367261904761905,0.01313758035460473,118,0.9529411764705882,0.9505882352941176,0.9419607843137255,0.9513725490196079,0.95234375,0.9498412990196078,0.004021856623766395
0.14924745559692382,0.025176499825224324,0.005774021148681641,0.007838451855364347,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.959375,0.9375,0.884375,0.946875,0.9492063492063492,0.9354662698412698,0.026476518634247766,124,0.9607843137254902,0.9529411764705882,0.9035294117647059,0.9490196078431372,0.95,0.9432549019607844,0.020287665925301866
0.6682955741882324,0.38913531574357585,0.0012386322021484375,9.462934021572228e-05,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.9125,0.940625,0.928125,0.928125,0.9206349206349206,0.9260019841269841,0.00931617874356008,151,0.9247058823529412,0.9474509803921569,0.92,0.923921568627451,0.9390625,0.9310281862745098,0.01045327506032134
0.18625741004943847,0.05985589732104505,0.01547236442565918,0.014488054965908851,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.94375,0.93125,0.965625,0.940625,0.9650793650793651,0.9492658730158731,0.013764801408321557,80,0.9458823529411765,0.96,0.9615686274509804,0.96,0.9546875,0.9564276960784314,0.005765144061811523
0.19196934700012208,0.04692598368041419,0.09918003082275391,0.03338934684716079,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.94375,0.925,0.934375,0.946875,0.9396825396825397,0.9379365079365078,0.007704278468132984,115,0.9686274509803922,0.9466666666666667,0.9396078431372549,0.9647058823529412,0.959375,0.955796568627451,0.0109749034338597
0.22800416946411134,0.06595342970606197,0.01635708808898926,0.019003212285437925,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.9125,0.940625,0.94375,0.95625,0.9396825396825397,0.9385615079365079,0.014314468966535336,109,0.9607843137254902,0.9749019607843137,0.9349019607843138,0.9647058823529412,0.97421875,0.9619025735294118,0.014552074806139995
0.36135382652282716,0.08753427309035795,0.0026659011840820313,0.001992589659142886,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': Normalizer(copy=True, norm='l2')}",0.9375,0.91875,0.95,0.95625,0.9428571428571428,0.9410714285714287,0.01283977000874827,100,0.9584313725490196,0.9505882352941176,0.9576470588235294,0.952156862745098,0.94375,0.952514705882353,0.005329303913263258
0.33555755615234373,0.2126598058641457,0.00545649528503418,0.008026543286013581,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,squared_hinge,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'squared_hinge', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.953125,0.96875,0.96875,0.96875,0.9650793650793651,0.9648908730158731,0.00605227032315146,40,0.9772549019607844,0.9772549019607844,0.9631372549019608,0.9756862745098039,0.978125,0.9742916666666668,0.005632438266218336
0.36935853958129883,0.06488730071143627,0.004680204391479492,0.006858967409576466,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,NonScaler(),,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': NonScaler()}",0.95,0.93125,0.9125,0.928125,0.9523809523809523,0.9348511904761905,0.014795708224326742,126,0.9576470588235294,0.9498039215686275,0.9129411764705883,0.9160784313725491,0.9609375,0.9394816176470588,0.02073158095548621
0.24245738983154297,0.0494347831163138,0.0032834529876708983,0.004080278509246364,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Binarizer(copy=True, threshold=0)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': Binarizer(copy=True, threshold=0)}",0.85,0.853125,0.834375,0.846875,0.8253968253968254,0.841954365079365,0.010443436878476337,206,0.855686274509804,0.8956862745098039,0.8549019607843137,0.8737254901960785,0.8625,0.8685,0.015175621904628267
0.13300657272338867,0.015878088625884704,0.006447124481201172,0.006252504875826783,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"MinMaxScaler(copy=True, feature_range=(0, 1))",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': MinMaxScaler(copy=True, feature_range=(0, 1))}",0.90625,0.884375,0.91875,0.953125,0.9428571428571428,0.9210714285714285,0.02479411395341026,162,0.9152941176470588,0.8807843137254902,0.9388235294117647,0.9552941176470588,0.9515625,0.9283517156862745,0.027595111923776235
0.1448061466217041,0.014285613888865916,0.010331010818481446,0.011198864280004496,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,MaxAbsScaler(copy=True),,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': MaxAbsScaler(copy=True)}",0.90625,0.884375,0.91875,0.953125,0.9428571428571428,0.9210714285714285,0.02479411395341026,162,0.9152941176470588,0.8807843137254902,0.9388235294117647,0.9552941176470588,0.9515625,0.9283517156862745,0.027595111923776235
0.1607980728149414,0.021680611638825932,0.004151678085327149,0.005649617212691961,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"StandardScaler(copy=True, with_mean=True, with_std=True)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': StandardScaler(copy=True, with_mean=True, with_std=True)}",0.953125,0.94375,0.946875,0.890625,0.9523809523809523,0.9373511904761905,0.023620717166895202,117,0.9694117647058823,0.9623529411764706,0.9623529411764706,0.923921568627451,0.940625,0.9517328431372549,0.016940887825473108
0.26531167030334474,0.11004621850703274,0.0012660503387451171,0.00011968388498342212,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': RobustScaler(copy=True, quantile_range=(25, 75), with_centering=False,
             with_scaling=True)}",0.93125,0.91875,0.90625,0.94375,0.926984126984127,0.9253968253968254,0.012525169922290977,155,0.9341176470588235,0.9176470588235294,0.9223529411764706,0.9364705882352942,0.93671875,0.9294613970588236,0.007919435960886463
0.17121987342834472,0.023086100021232986,0.014760684967041016,0.0076265347759708006,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"PowerTransformer(copy=True, method='yeo-johnson', standardize=False)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': PowerTransformer(copy=True, method='yeo-johnson', standardize=False)}",0.946875,0.95625,0.95625,0.95,0.9428571428571428,0.9504464285714287,0.0052519432749474305,76,0.9584313725490196,0.9694117647058823,0.9435294117647058,0.9639215686274509,0.9453125,0.9561213235294117,0.010180401610032913
0.197886323928833,0.03036173138918151,0.07441444396972656,0.025339267491005225,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='normal', random_state=None,
                    subsample=100000)}",0.934375,0.925,0.928125,0.93125,0.9206349206349206,0.9278769841269842,0.004783042536479236,146,0.9654901960784313,0.96,0.9356862745098039,0.9576470588235294,0.9375,0.9512647058823529,0.012260171416119488
0.16489176750183104,0.011496994442459014,0.013635540008544922,0.011311996517883997,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': QuantileTransformer(copy=True, ignore_implicit_zeros=False, n_quantiles=1000,
                    output_distribution='uniform', random_state=None,
                    subsample=100000)}",0.946875,0.94375,0.9625,0.95625,0.9587301587301588,0.9536210317460319,0.007138584480482378,69,0.9749019607843137,0.9709803921568627,0.9733333333333334,0.9701960784313726,0.971875,0.9722573529411764,0.0016838859622526573
0.1531644344329834,0.03942240498017523,0.008121776580810546,0.008425558648756847,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"Normalizer(copy=True, norm='l2')",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': Normalizer(copy=True, norm='l2')}",0.93125,0.925,0.95625,0.953125,0.946031746031746,0.9423313492063492,0.012223719888657116,98,0.9537254901960784,0.9435294117647058,0.9584313725490196,0.9607843137254902,0.94140625,0.9515753676470589,0.007804881521810091
0.17135052680969237,0.03504121168001057,0.004183435440063476,0.005526322163337576,"SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)",,"FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)",,,,,,perceptron,"{'clf': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None,
              penalty='elasticnet', power_t=0.5, random_state=0, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), 'clf__loss': 'perceptron', 'scl': FunctionTransformer(accept_sparse=False, check_inverse=True,
                    func=<ufunc 'log1p'>, inv_kw_args=None, inverse_func=None,
                    kw_args=None, pass_y='deprecated', validate=False)}",0.959375,0.953125,0.9875,0.96875,0.9650793650793651,0.9667658730158731,0.011639445959966329,37,0.9780392156862745,0.9819607843137255,0.9772549019607844,0.9741176470588235,0.97734375,0.9777432598039215,0.002506721848107458
